com.iflytek.tts.TtsService.AudioData -> com.iflytek.tts.TtsService.AudioData:
    android.media.AudioTrack mAudio -> mAudio
    java.lang.String TAG -> TAG
    int mStreamType -> mStreamType
    int mSampleRate -> mSampleRate
    int mBuffSize -> mBuffSize
    void onJniOutData(int,byte[]) -> onJniOutData
    void onJniWatchCB(int) -> onJniWatchCB
com.iflytek.tts.TtsService.Tts -> com.iflytek.tts.TtsService.Tts:
    boolean isInitialized -> isInitialized
    boolean isInitialized() -> isInitialized
    void initTtsEngine() -> initTtsEngine
    void startReadThread(android.content.Context) -> startReadThread
    int JniGetVersion() -> JniGetVersion
    int JniCreate(java.lang.String) -> JniCreate
    int JniDestory() -> JniDestory
    int JniStop() -> JniStop
    int JniSpeak(java.lang.String) -> JniSpeak
    int JniSetParam(int,int) -> JniSetParam
    int JniGetParam(int) -> JniGetParam
    int JniIsPlaying() -> JniIsPlaying
    boolean JniIsCreated() -> JniIsCreated
com.iflytek.tts.TtsService.Tts$1TtsRunThread -> com.iflytek.tts.TtsService.Tts$1TtsRunThread:
    void run() -> run
com.media.android.dbstarplayer.AudioPlayAction -> com.media.android.dbstarplayer.a:
    com.media.android.dbstarplayer.DbStarPlayer baseActivity -> g
    boolean isEndText -> a
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp Reader -> h
    int actionCode -> i
    boolean isAudioSpeek -> b
    boolean isNeedTurnPage -> j
    com.media.zlibrary.text.view.ZLTextWordCursor mCurPageEndCursor -> k
    int MSG_REACH_END -> l
    int MSG_SPEEK_ERROR -> m
    int MSG_TURN_PAGE_FORWARD -> n
    android.os.Handler mHandler -> c
    boolean isCheck -> d
    void cancelAudioSpeak() -> c
    void startReadThread$3312df4c(com.media.reader.interfaces.AudioSpeekListener) -> a
    void run(java.lang.Object[]) -> a
    com.media.zlibrary.text.view.ZLTextWordCursor getPageEndCursor() -> d
    com.media.android.dbstarplayer.DbStarPlayer access$0(com.media.android.dbstarplayer.AudioPlayAction) -> a
    void access$1(com.media.android.dbstarplayer.AudioPlayAction) -> b
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp access$2(com.media.android.dbstarplayer.AudioPlayAction) -> c
    java.lang.String access$3(com.media.android.dbstarplayer.AudioPlayAction,com.media.zlibrary.text.view.ZLTextWordCursor) -> a
    boolean access$4(com.media.android.dbstarplayer.AudioPlayAction) -> d
    boolean access$5(com.media.android.dbstarplayer.AudioPlayAction) -> e
    void access$6$1903c895(com.media.android.dbstarplayer.AudioPlayAction) -> f
com.media.android.dbstarplayer.AudioPlayAction$1 -> com.media.android.dbstarplayer.b:
    com.media.android.dbstarplayer.AudioPlayAction this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.media.android.dbstarplayer.AudioPlayAction$1TtsRunThread -> com.media.android.dbstarplayer.c:
    com.media.android.dbstarplayer.AudioPlayAction this$0 -> a
    com.media.reader.interfaces.AudioSpeekListener val$listener -> b
    void run() -> run
com.media.android.dbstarplayer.AudioPlayAction$2 -> com.media.android.dbstarplayer.d:
    com.media.android.dbstarplayer.AudioPlayAction this$0 -> a
    void onError(int,java.lang.String) -> a
    void onEnd() -> a
com.media.android.dbstarplayer.BookmarkEditActivity -> com.media.android.dbstarplayer.BookmarkEditActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.media.android.dbstarplayer.BookmarksActivity -> com.media.android.dbstarplayer.BookmarksActivity:
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow myCollection -> a
    com.media.dbstarplayer.book.Book myBook -> b
    java.util.Comparator myComparator -> c
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter myThisBookAdapter -> d
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter myAllBooksAdapter -> e
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter mySearchResultsAdapter -> f
    com.media.zlibrary.core.resources.ZLResource myResource -> g
    com.media.zlibrary.core.options.ZLStringOption myBookmarkSearchPatternOption -> h
    android.widget.ListView createTab(java.lang.String,int) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onSearchRequested() -> onSearchRequested
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void gotoBookmark(com.media.dbstarplayer.book.Bookmark) -> a
    com.media.dbstarplayer.book.Book access$0(com.media.android.dbstarplayer.BookmarksActivity) -> a
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow access$1(com.media.android.dbstarplayer.BookmarksActivity) -> b
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter access$2(com.media.android.dbstarplayer.BookmarksActivity) -> c
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter access$3(com.media.android.dbstarplayer.BookmarksActivity) -> d
    java.util.Comparator access$4(com.media.android.dbstarplayer.BookmarksActivity) -> e
    com.media.zlibrary.core.resources.ZLResource access$5(com.media.android.dbstarplayer.BookmarksActivity) -> f
    void access$6(com.media.android.dbstarplayer.BookmarksActivity,com.media.dbstarplayer.book.Bookmark) -> a
    void access$7(com.media.android.dbstarplayer.BookmarksActivity) -> g
    android.widget.ListView access$8(com.media.android.dbstarplayer.BookmarksActivity,java.lang.String,int) -> a
    void access$9(com.media.android.dbstarplayer.BookmarksActivity,com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter) -> a
    void access$10(com.media.android.dbstarplayer.BookmarksActivity,com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter) -> b
com.media.android.dbstarplayer.BookmarksActivity$1 -> com.media.android.dbstarplayer.e:
    com.media.android.dbstarplayer.BookmarksActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.BookmarksActivity$2 -> com.media.android.dbstarplayer.f:
    com.media.android.dbstarplayer.BookmarksActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter -> com.media.android.dbstarplayer.g:
    java.util.List myBookmarks -> b
    boolean myShowAddBookmarkItem -> c
    com.media.android.dbstarplayer.BookmarksActivity this$0 -> a
    java.util.List bookmarks() -> a
    void addAll(java.util.List) -> a
    void add(com.media.dbstarplayer.book.Bookmark) -> a
    void remove(com.media.dbstarplayer.book.Bookmark) -> b
    void clear() -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    long getItemId(int) -> getItemId
    com.media.dbstarplayer.book.Bookmark getItem(int) -> a
    int getCount() -> getCount
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.lang.Object getItem(int) -> getItem
    java.util.List access$1(com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter) -> a
    com.media.android.dbstarplayer.BookmarksActivity access$2(com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter) -> b
com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter$1 -> com.media.android.dbstarplayer.h:
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter this$1 -> a
    java.util.List val$bookmarks -> b
    void run() -> run
com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter$2 -> com.media.android.dbstarplayer.i:
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter this$1 -> a
    com.media.dbstarplayer.book.Bookmark val$b -> b
    void run() -> run
com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter$3 -> com.media.android.dbstarplayer.j:
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter this$1 -> a
    com.media.dbstarplayer.book.Bookmark val$b -> b
    void run() -> run
com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter$4 -> com.media.android.dbstarplayer.k:
    com.media.android.dbstarplayer.BookmarksActivity$BookmarksAdapter this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.BookmarksActivity$Initializer -> com.media.android.dbstarplayer.l:
    com.media.android.dbstarplayer.BookmarksActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.BookmarksActivity$Initializer$1 -> com.media.android.dbstarplayer.m:
    com.media.android.dbstarplayer.BookmarksActivity$Initializer this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.ButtonsPopupPanel -> com.media.android.dbstarplayer.n:
    java.util.ArrayList myButtons -> d
    void addButton(java.lang.String,boolean,int) -> a
    void update() -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.ButtonsPopupPanel$ActionButton -> com.media.android.dbstarplayer.o:
    java.lang.String ActionId -> a
    boolean IsCloseButton -> b
    com.media.android.dbstarplayer.ButtonsPopupPanel this$0 -> c
com.media.android.dbstarplayer.CancelActivity -> com.media.android.dbstarplayer.CancelActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.media.android.dbstarplayer.CancelActivity$ActionListAdapter -> com.media.android.dbstarplayer.p:
    android.content.Intent myIntent -> b
    com.media.android.dbstarplayer.CancelActivity this$0 -> a
    int getCount() -> getCount
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.lang.Object getItem(int) -> getItem
com.media.android.dbstarplayer.DbStarAndroidAction -> com.media.android.dbstarplayer.q:
    com.media.android.dbstarplayer.DbStarPlayer BaseActivity -> e
com.media.android.dbstarplayer.DbStarPlayer -> com.media.android.dbstarplayer.DbStarPlayer:
    java.lang.String TAG -> a
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp myDbStarPlayerApp -> b
    com.media.dbstarplayer.book.Book myBook -> c
    android.widget.RelativeLayout myRootView -> d
    com.media.zlibrary.ui.android.view.ZLAndroidWidget myMainView -> e
    android.widget.ProgressBar mReadProgressBar -> f
    android.widget.TextView mReadProgress -> g
    int myFullScreenFlag -> h
    java.lang.String myMenuLanguage -> i
    android.widget.LinearLayout mAudioLayout -> j
    android.widget.LinearLayout mNoAudioLayout -> k
    android.widget.ImageView mAudioPlayStatusImage -> l
    java.util.List myPluginActions -> m
    android.content.BroadcastReceiver myPluginInfoReceiver -> n
    android.os.PowerManager$WakeLock myWakeLock -> o
    boolean myWakeLockToCreate -> p
    boolean myStartTimer -> q
    android.content.BroadcastReceiver myBatteryInfoReceiver -> r
    void openBookActivity(android.content.Context,com.media.dbstarplayer.book.Book,com.media.dbstarplayer.book.Bookmark) -> a
    void openBook(android.content.Intent,java.lang.Runnable,boolean) -> a
    com.media.dbstarplayer.book.Book createBookForFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    void onCreate(android.os.Bundle) -> onCreate
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    com.media.zlibrary.ui.android.view.ZLAndroidWidget getMainView() -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStart() -> onStart
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onLowMemory() -> onLowMemory
    boolean onSearchRequested() -> onSearchRequested
    void showSelectionPanel() -> b
    void hideSelectionPanel() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void navigate() -> d
    void addMenuItem(android.view.Menu,java.lang.String,int) -> a
    void addMenuItem(android.view.Menu,java.lang.String) -> a
    void setupMenu(android.view.Menu) -> a
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    void setButtonLight(boolean) -> a
    void createWakeLock() -> e
    void switchWakeLock(boolean) -> b
    void setScreenBrightness(int) -> a
    int getScreenBrightness() -> f
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow getCollection() -> k
    void addCurBookMark() -> g
    void deleteBookMark(com.media.dbstarplayer.book.Bookmark) -> a
    void onReadProgressChange(int) -> b
    void setAudioPlay() -> h
    void cancelAudioPlay() -> i
    java.util.List access$0(com.media.android.dbstarplayer.DbStarPlayer) -> a
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp access$1(com.media.android.dbstarplayer.DbStarPlayer) -> b
    com.media.zlibrary.ui.android.library.ZLAndroidLibrary access$2() -> j
    void access$3(com.media.android.dbstarplayer.DbStarPlayer,boolean) -> a
    void access$4(com.media.android.dbstarplayer.DbStarPlayer,android.content.Intent,java.lang.Runnable,boolean) -> a
    java.lang.Runnable access$5(com.media.android.dbstarplayer.DbStarPlayer) -> c
    void access$6(com.media.android.dbstarplayer.DbStarPlayer,com.media.dbstarplayer.book.Book) -> a
com.media.android.dbstarplayer.DbStarPlayer$1 -> com.media.android.dbstarplayer.r:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.media.android.dbstarplayer.DbStarPlayer$10 -> com.media.android.dbstarplayer.s:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$11 -> com.media.android.dbstarplayer.t:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$12 -> com.media.android.dbstarplayer.u:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$13 -> com.media.android.dbstarplayer.v:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$14 -> com.media.android.dbstarplayer.w:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    android.content.Intent val$intent -> b
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$15 -> com.media.android.dbstarplayer.x:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    java.lang.String val$pattern -> b
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$15$1 -> com.media.android.dbstarplayer.y:
    com.media.android.dbstarplayer.DbStarPlayer$15 this$1 -> a
    com.media.android.dbstarplayer.TextSearchPopup val$popup -> b
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$15$2 -> com.media.android.dbstarplayer.z:
    com.media.android.dbstarplayer.DbStarPlayer$15 this$1 -> a
    com.media.android.dbstarplayer.TextSearchPopup val$popup -> b
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$16 -> com.media.android.dbstarplayer.aa:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$16$1 -> com.media.android.dbstarplayer.ab:
    com.media.android.dbstarplayer.DbStarPlayer$16 this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$17 -> com.media.android.dbstarplayer.ac:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$18 -> com.media.android.dbstarplayer.ad:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    com.media.zlibrary.core.application.ZLApplication$PopupPanel val$popup -> b
    android.app.SearchManager val$manager -> c
    void onCancel() -> onCancel
com.media.android.dbstarplayer.DbStarPlayer$19 -> com.media.android.dbstarplayer.ae:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    com.media.dbstarplayer.book.Book val$book -> b
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$2 -> com.media.android.dbstarplayer.af:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.media.android.dbstarplayer.DbStarPlayer$3 -> com.media.android.dbstarplayer.ag:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$3$1 -> com.media.android.dbstarplayer.ah:
    com.media.android.dbstarplayer.DbStarPlayer$3 this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.DbStarPlayer$4 -> com.media.android.dbstarplayer.ai:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$5 -> com.media.android.dbstarplayer.aj:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$6 -> com.media.android.dbstarplayer.ak:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$7 -> com.media.android.dbstarplayer.al:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$8 -> com.media.android.dbstarplayer.am:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayer$9 -> com.media.android.dbstarplayer.an:
    com.media.android.dbstarplayer.DbStarPlayer this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.DbStarPlayerApplication -> com.media.android.dbstarplayer.DbStarPlayerApplication:
com.media.android.dbstarplayer.DbStarUtil -> com.media.android.dbstarplayer.ao:
    void shareBook(android.app.Activity,com.media.dbstarplayer.book.Book) -> a
com.media.android.dbstarplayer.DictionaryUtil -> com.media.android.dbstarplayer.ap:
    int FLAG_INSTALLED_ONLY -> a
    int FLAG_SHOW_AS_DICTIONARY -> b
    int FLAG_SHOW_AS_TRANSLATOR -> c
    com.media.zlibrary.core.options.ZLStringOption ourSingleWordTranslatorOption -> d
    com.media.zlibrary.core.options.ZLStringOption ourMultiWordTranslatorOption -> e
    java.util.Map ourInfos -> f
    void init(android.content.Context) -> a
    java.util.List dictionaryInfos(android.content.Context,boolean) -> a
    com.media.android.dbstarplayer.PackageInfo firstInfo() -> g
    com.media.zlibrary.core.options.ZLStringOption singleWordTranslatorOption() -> a
    com.media.zlibrary.core.options.ZLStringOption multiWordTranslatorOption() -> b
    com.media.android.dbstarplayer.PackageInfo getCurrentDictionaryInfo(boolean) -> a
    android.content.Intent getDictionaryIntent(com.media.android.dbstarplayer.PackageInfo,java.lang.String) -> a
    void openTextInDictionary(android.app.Activity,java.lang.String,boolean,int,int) -> a
    void openWordInDictionary(android.app.Activity,com.media.zlibrary.text.view.ZLTextWord,com.media.zlibrary.text.view.ZLTextRegion) -> a
    int access$0() -> c
    int access$1() -> d
    int access$2() -> e
    java.util.Map access$3() -> f
    void access$4(android.app.Activity,com.media.android.dbstarplayer.PackageInfo) -> a
com.media.android.dbstarplayer.DictionaryUtil$1 -> com.media.android.dbstarplayer.aq:
    android.content.Context val$context -> a
    void run() -> run
com.media.android.dbstarplayer.DictionaryUtil$2 -> com.media.android.dbstarplayer.ar:
    android.app.Activity val$activity -> a
    com.media.android.dbstarplayer.PackageInfo val$dictionaryInfo -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.android.dbstarplayer.DictionaryUtil$BitKnightsInfoReader -> com.media.android.dbstarplayer.as:
    android.content.Context mContext -> a
    int mCounter -> b
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.android.dbstarplayer.DictionaryUtil$InfoReader -> com.media.android.dbstarplayer.at:
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.android.dbstarplayer.DictionaryUtil$ParagonInfoReader -> com.media.android.dbstarplayer.au:
    android.content.Context myContext -> a
    int myCounter -> b
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.android.dbstarplayer.NavigationPopup -> com.media.android.dbstarplayer.av:
    boolean myIsInProgress -> d
    void runNavigation() -> b
    java.lang.String getId() -> c
    void show_() -> d
    void update() -> a
    void createControlPanel(com.media.android.dbstarplayer.DbStarPlayer,android.widget.RelativeLayout) -> a
    void setupNavigation(com.media.android.dbstarplayer.PopupWindow) -> a
    java.lang.String makeProgressText(int,int) -> a
    void access$0(com.media.android.dbstarplayer.NavigationPopup,boolean) -> a
    java.lang.String access$1(com.media.android.dbstarplayer.NavigationPopup,int,int) -> a
    com.media.zlibrary.core.application.ZLApplication access$2(com.media.android.dbstarplayer.NavigationPopup) -> a
com.media.android.dbstarplayer.NavigationPopup$1 -> com.media.android.dbstarplayer.aw:
    com.media.android.dbstarplayer.NavigationPopup this$0 -> a
    android.widget.TextView val$text -> b
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.media.android.dbstarplayer.NavigationPopup$2 -> com.media.android.dbstarplayer.ax:
    com.media.android.dbstarplayer.NavigationPopup this$0 -> a
    android.widget.Button val$btnCancel -> b
    android.widget.Button val$btnOk -> c
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.OrientationUtil -> com.media.android.dbstarplayer.ay:
    void startActivity(android.app.Activity,android.content.Intent) -> a
    void startActivityForResult$2b7c1441(android.app.Activity,android.content.Intent) -> b
    void setOrientation(android.app.Activity,android.content.Intent) -> c
com.media.android.dbstarplayer.PackageInfo -> com.media.android.dbstarplayer.az:
    java.lang.String Id -> a
    java.lang.String PackageName -> b
    java.lang.String ClassName -> c
    java.lang.String Title -> d
    java.lang.String IntentAction -> e
    java.lang.String IntentKey -> f
    java.lang.String IntentDataPattern -> g
com.media.android.dbstarplayer.PopupPanel -> com.media.android.dbstarplayer.ba:
    com.media.zlibrary.text.view.ZLTextWordCursor StartPosition -> a
    com.media.android.dbstarplayer.PopupWindow myWindow -> b
    com.media.android.dbstarplayer.DbStarPlayer myActivity -> d
    android.widget.RelativeLayout myRoot -> e
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp getReader() -> e
    void show_() -> d
    void hide_() -> f
    void removeAllWindows(com.media.zlibrary.core.application.ZLApplication,android.app.Activity) -> a
    void restoreVisibilities(com.media.zlibrary.core.application.ZLApplication) -> a
    void initPosition() -> g
    void setPanelInfo(com.media.android.dbstarplayer.DbStarPlayer,android.widget.RelativeLayout) -> b
    void createControlPanel(com.media.android.dbstarplayer.DbStarPlayer,android.widget.RelativeLayout) -> a
com.media.android.dbstarplayer.PopupWindow -> com.media.android.dbstarplayer.bb:
    android.app.Activity myActivity -> a
    boolean myAnimated -> b
    android.animation.Animator myShowHideAnimator -> c
    android.animation.Animator$AnimatorListener myEndShowListener -> d
    android.animation.Animator$AnimatorListener myEndHideListener -> e
    int[] $SWITCH_TABLE$com$media$android$dbstarplayer$PopupWindow$Location -> f
    android.app.Activity getActivity() -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void show() -> b
    void hide() -> c
    void addView(android.view.View) -> addView
    int[] $SWITCH_TABLE$com$media$android$dbstarplayer$PopupWindow$Location() -> d
    void access$1$52770a96(com.media.android.dbstarplayer.PopupWindow) -> a
    void access$2(com.media.android.dbstarplayer.PopupWindow) -> b
    void access$3(com.media.android.dbstarplayer.PopupWindow) -> c
com.media.android.dbstarplayer.PopupWindow$1 -> com.media.android.dbstarplayer.bc:
    com.media.android.dbstarplayer.PopupWindow this$0 -> a
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.media.android.dbstarplayer.PopupWindow$2 -> com.media.android.dbstarplayer.bd:
    com.media.android.dbstarplayer.PopupWindow this$0 -> a
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.media.android.dbstarplayer.PopupWindow$3 -> com.media.android.dbstarplayer.be:
    com.media.android.dbstarplayer.PopupWindow this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.PopupWindow$4 -> com.media.android.dbstarplayer.bf:
    com.media.android.dbstarplayer.PopupWindow this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.PopupWindow$Location -> com.media.android.dbstarplayer.bg:
    com.media.android.dbstarplayer.PopupWindow$Location BottomFlat -> a
    com.media.android.dbstarplayer.PopupWindow$Location Bottom -> b
    com.media.android.dbstarplayer.PopupWindow$Location Floating -> c
    com.media.android.dbstarplayer.PopupWindow$Location[] ENUM$VALUES -> d
    com.media.android.dbstarplayer.PopupWindow$Location[] values() -> values
    com.media.android.dbstarplayer.PopupWindow$Location valueOf(java.lang.String) -> valueOf
com.media.android.dbstarplayer.ProcessHyperlinkAction -> com.media.android.dbstarplayer.bh:
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ProcessHyperlinkAction$1 -> com.media.android.dbstarplayer.bi:
    com.media.android.dbstarplayer.ProcessHyperlinkAction this$0 -> a
    java.lang.String val$url -> b
    com.media.dbstarplayer.network.NetworkLibrary val$nLibrary -> c
    android.content.Intent val$intent -> d
    boolean val$externalUrl -> e
    void run() -> run
com.media.android.dbstarplayer.ProcessHyperlinkAction$1$1 -> com.media.android.dbstarplayer.bj:
    com.media.android.dbstarplayer.ProcessHyperlinkAction$1 this$1 -> a
    android.content.Intent val$intent -> b
    void run() -> run
com.media.android.dbstarplayer.RunPluginAction -> com.media.android.dbstarplayer.bk:
    android.net.Uri myUri -> a
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SearchAction -> com.media.android.dbstarplayer.bl:
    boolean isVisible() -> b
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SelectionBookmarkAction -> com.media.android.dbstarplayer.bm:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SelectionCopyAction -> com.media.android.dbstarplayer.bn:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SelectionHidePanelAction -> com.media.android.dbstarplayer.bo:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SelectionPopup -> com.media.android.dbstarplayer.bp:
    java.lang.String getId() -> c
    void createControlPanel(com.media.android.dbstarplayer.DbStarPlayer,android.widget.RelativeLayout) -> a
    void move(int,int) -> a
com.media.android.dbstarplayer.SelectionShareAction -> com.media.android.dbstarplayer.bq:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SelectionShowPanelAction -> com.media.android.dbstarplayer.br:
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SelectionTranslateAction -> com.media.android.dbstarplayer.bs:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SetScreenOrientationAction -> com.media.android.dbstarplayer.bt:
    java.lang.String myOptionValue -> a
    void setOrientation(android.app.Activity,java.lang.String) -> a
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ShareBookAction -> com.media.android.dbstarplayer.bu:
    boolean isVisible() -> b
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ShowBookInfoAction -> com.media.android.dbstarplayer.bv:
    boolean isVisible() -> b
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ShowBookmarksAction -> com.media.android.dbstarplayer.bw:
    boolean isVisible() -> b
    void run(java.lang.Object[]) -> a
    void startBookmarksActivity(android.content.Intent) -> a
com.media.android.dbstarplayer.ShowCancelMenuAction -> com.media.android.dbstarplayer.bx:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ShowLibraryAction -> com.media.android.dbstarplayer.by:
    void run(java.lang.Object[]) -> a
    void startLibraryActivity(android.content.Intent) -> a
com.media.android.dbstarplayer.ShowMenuAction -> com.media.android.dbstarplayer.bz:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ShowNavigationAction -> com.media.android.dbstarplayer.ca:
    boolean isVisible() -> b
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ShowNetworkLibraryAction -> com.media.android.dbstarplayer.cb:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ShowPreferencesAction -> com.media.android.dbstarplayer.cc:
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.ShowTOCAction -> com.media.android.dbstarplayer.cd:
    boolean isVisible() -> b
    void run(java.lang.Object[]) -> a
com.media.android.dbstarplayer.SimpleContainer -> com.media.android.dbstarplayer.ce:
    android.view.View myEditText -> a
    android.widget.Button myOkButton -> b
    android.widget.Button myCancelButton -> c
    void onLayout(boolean,int,int,int,int) -> onLayout
com.media.android.dbstarplayer.TOCActivity -> com.media.android.dbstarplayer.TOCActivity:
    com.media.android.dbstarplayer.TOCActivity$TOCAdapter myAdapter -> a
    com.media.zlibrary.core.tree.ZLTree mySelectedItem -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onNewIntent(android.content.Intent) -> onNewIntent
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    com.media.zlibrary.core.tree.ZLTree access$0(com.media.android.dbstarplayer.TOCActivity) -> a
com.media.android.dbstarplayer.TOCActivity$TOCAdapter -> com.media.android.dbstarplayer.cf:
    com.media.android.dbstarplayer.TOCActivity this$0 -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void openBookText(com.media.dbstarplayer.bookmodel.TOCTree) -> a
    boolean runTreeItem(com.media.zlibrary.core.tree.ZLTree) -> a
com.media.android.dbstarplayer.TextSearchPopup -> com.media.android.dbstarplayer.cg:
    java.lang.String getId() -> c
    void hide_() -> f
    void createControlPanel(com.media.android.dbstarplayer.DbStarPlayer,android.widget.RelativeLayout) -> a
com.media.android.dbstarplayer.ZLTreeAdapter -> com.media.android.dbstarplayer.ch:
    android.widget.ListView myParent -> a
    com.media.zlibrary.core.tree.ZLTree myTree -> b
    com.media.zlibrary.core.tree.ZLTree[] myItems -> c
    java.util.HashSet myOpenItems -> d
    boolean isOpen(com.media.zlibrary.core.tree.ZLTree) -> b
    void selectItem(com.media.zlibrary.core.tree.ZLTree) -> c
    int getCount(com.media.zlibrary.core.tree.ZLTree) -> d
    int getCount() -> getCount
    int indexByPosition(int,com.media.zlibrary.core.tree.ZLTree) -> a
    com.media.zlibrary.core.tree.ZLTree getItem(int) -> a
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    long getItemId(int) -> getItemId
    boolean runTreeItem(com.media.zlibrary.core.tree.ZLTree) -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    java.lang.Object getItem(int) -> getItem
com.media.android.dbstarplayer.api.ApiInterface -> com.media.android.dbstarplayer.api.a:
    com.media.android.dbstarplayer.api.ApiObject request(int,com.media.android.dbstarplayer.api.ApiObject[]) -> a
    java.util.List requestList(int,com.media.android.dbstarplayer.api.ApiObject[]) -> b
    java.util.Map requestMap$56c5aa2c(int) -> a
com.media.android.dbstarplayer.api.ApiInterface$Stub -> com.media.android.dbstarplayer.api.b:
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.media.android.dbstarplayer.api.ApiObject -> com.media.android.dbstarplayer.api.ApiObject:
    android.os.Parcelable$Creator CREATOR -> CREATOR
    com.media.android.dbstarplayer.api.ApiObject envelope(int) -> a
    com.media.android.dbstarplayer.api.ApiObject envelope(boolean) -> a
    com.media.android.dbstarplayer.api.ApiObject envelope(java.lang.String) -> a
    com.media.android.dbstarplayer.api.ApiObject envelope$18c48570() -> a
    java.util.List envelopeStringList(java.util.List) -> a
    java.util.List envelopeIntegerList(java.util.List) -> b
    int type() -> b
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.ApiObject$1 -> com.media.android.dbstarplayer.api.c:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.media.android.dbstarplayer.api.ApiObject$Boolean -> com.media.android.dbstarplayer.api.ApiObject$Boolean:
    boolean Value -> a
    int type() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.ApiObject$Date -> com.media.android.dbstarplayer.api.ApiObject$Date:
    java.util.Date Value -> a
    int type() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.ApiObject$Error -> com.media.android.dbstarplayer.api.ApiObject$Error:
    java.lang.String Message -> a
    int type() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.ApiObject$Integer -> com.media.android.dbstarplayer.api.ApiObject$Integer:
    int Value -> a
    int type() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.ApiObject$Long -> com.media.android.dbstarplayer.api.ApiObject$Long:
    long Value -> a
    int type() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.ApiObject$String -> com.media.android.dbstarplayer.api.ApiObject$String:
    java.lang.String Value -> a
    int type() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.ApiObject$Void -> com.media.android.dbstarplayer.api.ApiObject$Void:
    com.media.android.dbstarplayer.api.ApiObject$Void Instance -> a
    int type() -> b
com.media.android.dbstarplayer.api.ApiServerImplementation -> com.media.android.dbstarplayer.api.d:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp myReader -> a
    void sendEvent(android.content.ContextWrapper,java.lang.String) -> a
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp getReader() -> a
    com.media.android.dbstarplayer.api.ApiObject$Error unsupportedMethodError(int) -> b
    com.media.android.dbstarplayer.api.ApiObject$Error exceptionInMethodError(int,java.lang.Throwable) -> a
    com.media.android.dbstarplayer.api.ApiObject request(int,com.media.android.dbstarplayer.api.ApiObject[]) -> a
    java.util.List requestList(int,com.media.android.dbstarplayer.api.ApiObject[]) -> b
    java.util.Map requestMap$56c5aa2c(int) -> a
    com.media.android.dbstarplayer.api.TextPosition getTextPosition(com.media.zlibrary.text.view.ZLTextWordCursor) -> a
    com.media.zlibrary.text.view.ZLTextFixedPosition getZLTextPosition(com.media.android.dbstarplayer.api.TextPosition) -> a
    java.util.List getParagraphWords(int) -> c
    java.util.ArrayList getParagraphWordIndices(int) -> d
com.media.android.dbstarplayer.api.ApiService -> com.media.android.dbstarplayer.api.ApiService:
    android.os.IBinder onBind(android.content.Intent) -> onBind
com.media.android.dbstarplayer.api.PluginApi -> com.media.android.dbstarplayer.api.PluginApi:
com.media.android.dbstarplayer.api.PluginApi$ActionInfo -> com.media.android.dbstarplayer.api.PluginApi$ActionInfo:
    java.lang.String myId -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.net.Uri getId() -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.PluginApi$ActionInfo$1 -> com.media.android.dbstarplayer.api.e:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.media.android.dbstarplayer.api.PluginApi$MenuActionInfo -> com.media.android.dbstarplayer.api.PluginApi$MenuActionInfo:
    java.lang.String MenuItemName -> a
    int Weight -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    int compareTo(java.lang.Object) -> compareTo
com.media.android.dbstarplayer.api.PluginApi$PluginInfo -> com.media.android.dbstarplayer.api.PluginApi$PluginInfo:
com.media.android.dbstarplayer.api.TextPosition -> com.media.android.dbstarplayer.api.TextPosition:
    int ParagraphIndex -> a
    int ElementIndex -> b
    int CharIndex -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int type() -> b
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
com.media.android.dbstarplayer.api.TextPosition$1 -> com.media.android.dbstarplayer.api.f:
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
com.media.android.dbstarplayer.covers.CoverCache -> com.media.android.dbstarplayer.a.a:
    java.lang.Object NULL_BITMAP -> b
    int HoldersCounter -> a
    java.util.Map myBitmaps -> c
    android.graphics.Bitmap getBitmap(com.media.dbstarplayer.tree.FBTree$Key) -> a
    void putBitmap(com.media.dbstarplayer.tree.FBTree$Key,android.graphics.Bitmap) -> a
com.media.android.dbstarplayer.covers.CoverCache$1 -> com.media.android.dbstarplayer.a.b:
    com.media.android.dbstarplayer.covers.CoverCache this$0 -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.media.android.dbstarplayer.covers.CoverCache$NullObjectException -> com.media.android.dbstarplayer.a.c:
com.media.android.dbstarplayer.covers.CoverHolder -> com.media.android.dbstarplayer.a.d:
    com.media.android.dbstarplayer.covers.CoverManager myManager -> d
    android.widget.ImageView CoverView -> a
    com.media.dbstarplayer.tree.FBTree$Key Key -> b
    com.media.android.dbstarplayer.covers.CoverHolder$CoverSyncRunnable coverSyncRunnable -> e
    java.util.concurrent.Future coverBitmapTask -> c
    java.lang.Runnable coverBitmapRunnable -> f
    void setKey(com.media.dbstarplayer.tree.FBTree$Key) -> a
    void access$0(com.media.android.dbstarplayer.covers.CoverHolder,com.media.android.dbstarplayer.covers.CoverHolder$CoverSyncRunnable) -> a
    com.media.android.dbstarplayer.covers.CoverHolder$CoverSyncRunnable access$1(com.media.android.dbstarplayer.covers.CoverHolder) -> a
    com.media.android.dbstarplayer.covers.CoverManager access$2(com.media.android.dbstarplayer.covers.CoverHolder) -> b
    void access$3(com.media.android.dbstarplayer.covers.CoverHolder,java.lang.Runnable) -> a
    java.lang.Runnable access$4(com.media.android.dbstarplayer.covers.CoverHolder) -> c
com.media.android.dbstarplayer.covers.CoverHolder$CoverBitmapRunnable -> com.media.android.dbstarplayer.a.e:
    com.media.zlibrary.core.image.ZLLoadableImage myImage -> b
    com.media.dbstarplayer.tree.FBTree$Key myKey -> c
    com.media.android.dbstarplayer.covers.CoverHolder this$0 -> a
    void run() -> run
    com.media.dbstarplayer.tree.FBTree$Key access$0(com.media.android.dbstarplayer.covers.CoverHolder$CoverBitmapRunnable) -> a
com.media.android.dbstarplayer.covers.CoverHolder$CoverBitmapRunnable$1 -> com.media.android.dbstarplayer.a.f:
    com.media.android.dbstarplayer.covers.CoverHolder$CoverBitmapRunnable this$1 -> a
    android.graphics.Bitmap val$coverBitmap -> b
    void run() -> run
com.media.android.dbstarplayer.covers.CoverHolder$CoverSyncRunnable -> com.media.android.dbstarplayer.a.g:
    com.media.zlibrary.core.image.ZLLoadableImage myImage -> b
    com.media.dbstarplayer.tree.FBTree$Key myKey -> c
    com.media.android.dbstarplayer.covers.CoverHolder this$0 -> a
    void run() -> run
    com.media.dbstarplayer.tree.FBTree$Key access$0(com.media.android.dbstarplayer.covers.CoverHolder$CoverSyncRunnable) -> a
    com.media.zlibrary.core.image.ZLLoadableImage access$1(com.media.android.dbstarplayer.covers.CoverHolder$CoverSyncRunnable) -> b
com.media.android.dbstarplayer.covers.CoverHolder$CoverSyncRunnable$1 -> com.media.android.dbstarplayer.a.h:
    com.media.android.dbstarplayer.covers.CoverHolder$CoverSyncRunnable this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.covers.CoverManager -> com.media.android.dbstarplayer.a.i:
    com.media.android.dbstarplayer.covers.CoverCache Cache -> a
    java.util.concurrent.ExecutorService myPool -> b
    android.app.Activity myActivity -> c
    int myCoverWidth -> d
    int myCoverHeight -> e
    void runOnUiThread(java.lang.Runnable) -> a
    void setupCoverView(android.widget.ImageView) -> a
    android.graphics.Bitmap getBitmap(com.media.zlibrary.core.image.ZLImage) -> a
    void setCoverForView(com.media.android.dbstarplayer.covers.CoverHolder,com.media.zlibrary.core.image.ZLLoadableImage) -> a
    boolean trySetCoverImage(android.widget.ImageView,com.media.dbstarplayer.tree.FBTree) -> a
com.media.android.dbstarplayer.covers.CoverManager$MinPriorityThreadFactory -> com.media.android.dbstarplayer.a.j:
    java.util.concurrent.ThreadFactory myDefaultThreadFactory -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.media.android.dbstarplayer.crash.FixBooksDirectoryActivity -> com.media.android.dbstarplayer.crash.FixBooksDirectoryActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.media.android.dbstarplayer.crash.FixBooksDirectoryActivity$1 -> com.media.android.dbstarplayer.crash.a:
    com.media.android.dbstarplayer.crash.FixBooksDirectoryActivity this$0 -> a
    android.widget.EditText val$directoryView -> b
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.crash.FixBooksDirectoryActivity$2 -> com.media.android.dbstarplayer.crash.b:
    com.media.android.dbstarplayer.crash.FixBooksDirectoryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.crash.MissingNativeLibraryActivity -> com.media.android.dbstarplayer.crash.MissingNativeLibraryActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.media.android.dbstarplayer.crash.MissingNativeLibraryActivity$1 -> com.media.android.dbstarplayer.crash.c:
    com.media.android.dbstarplayer.crash.MissingNativeLibraryActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.error.BookReadingErrorActivity -> com.media.android.dbstarplayer.error.BookReadingErrorActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.media.android.dbstarplayer.error.BookReadingErrorActivity$1 -> com.media.android.dbstarplayer.error.a:
    com.media.android.dbstarplayer.error.BookReadingErrorActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.error.BookReadingErrorActivity$2 -> com.media.android.dbstarplayer.error.b:
    com.media.android.dbstarplayer.error.BookReadingErrorActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.image.ImageViewActivity -> com.media.android.dbstarplayer.image.ImageViewActivity:
    android.graphics.Bitmap myBitmap -> a
    com.media.zlibrary.core.util.ZLColor myBgColor -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    com.media.zlibrary.core.util.ZLColor access$0(com.media.android.dbstarplayer.image.ImageViewActivity) -> a
    android.graphics.Bitmap access$1(com.media.android.dbstarplayer.image.ImageViewActivity) -> b
com.media.android.dbstarplayer.image.ImageViewActivity$ImageView -> com.media.android.dbstarplayer.image.a:
    android.graphics.Paint myPaint -> b
    int myDx -> c
    int myDy -> d
    float myZoomFactor -> e
    boolean myMotionControl -> f
    int mySavedX -> g
    int mySavedY -> h
    float myStartPinchDistance2 -> i
    float myStartZoomFactor -> j
    com.media.android.dbstarplayer.image.ImageViewActivity this$0 -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
com.media.android.dbstarplayer.library.BookInfoActivity -> com.media.android.dbstarplayer.library.BookInfoActivity:
    com.media.zlibrary.core.resources.ZLResource myResource -> a
    com.media.dbstarplayer.book.Book myBook -> b
    boolean myDontReloadBook -> c
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow myCollection -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    com.media.dbstarplayer.book.Book bookByIntent(android.content.Intent) -> a
    void setupButton(int,java.lang.String,android.view.View$OnClickListener) -> a
    void setupInfoPair(int,java.lang.String,java.lang.CharSequence) -> a
    void setupInfoPair(int,java.lang.String,java.lang.CharSequence,int) -> a
    void setupBookInfo(com.media.dbstarplayer.book.Book) -> a
    void onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> onBookEvent
    void onBuildEvent(com.media.dbstarplayer.book.IBookCollection$Status) -> onBuildEvent
    boolean access$0(com.media.android.dbstarplayer.library.BookInfoActivity) -> a
    com.media.dbstarplayer.book.Book access$1(com.media.android.dbstarplayer.library.BookInfoActivity) -> b
    void access$2(com.media.android.dbstarplayer.library.BookInfoActivity,com.media.dbstarplayer.book.Book) -> a
    void access$3$23a13dc7(com.media.android.dbstarplayer.library.BookInfoActivity) -> c
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow access$4(com.media.android.dbstarplayer.library.BookInfoActivity) -> d
com.media.android.dbstarplayer.library.BookInfoActivity$1 -> com.media.android.dbstarplayer.library.a:
    com.media.android.dbstarplayer.library.BookInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.library.BookInfoActivity$2 -> com.media.android.dbstarplayer.library.b:
    com.media.android.dbstarplayer.library.BookInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.library.BookInfoActivity$3 -> com.media.android.dbstarplayer.library.c:
    com.media.android.dbstarplayer.library.BookInfoActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.media.android.dbstarplayer.library.BookInfoActivity access$0(com.media.android.dbstarplayer.library.BookInfoActivity$3) -> a
com.media.android.dbstarplayer.library.BookInfoActivity$3$1 -> com.media.android.dbstarplayer.library.d:
    com.media.android.dbstarplayer.library.BookInfoActivity$3 this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.library.LibraryActivity -> com.media.android.dbstarplayer.library.LibraryActivity:
    com.media.dbstarplayer.library.RootTree myRootTree -> a
    com.media.dbstarplayer.book.Book mySelectedBook -> b
    com.media.zlibrary.core.options.ZLStringOption BookSearchPatternOption -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onDestroy() -> onDestroy
    boolean isTreeSelected(com.media.dbstarplayer.tree.FBTree) -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void showBookInfo(com.media.dbstarplayer.book.Book) -> a
    boolean onSearchRequested() -> onSearchRequested
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    android.view.MenuItem addMenuItem(android.view.Menu,int,java.lang.String,int) -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
    void onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> onBookEvent
    void onBuildEvent(com.media.dbstarplayer.book.IBookCollection$Status) -> onBuildEvent
    com.media.dbstarplayer.tree.FBTree getTreeByKey(com.media.dbstarplayer.tree.FBTree$Key) -> a
    com.media.dbstarplayer.tree.FBTree access$1(com.media.android.dbstarplayer.library.LibraryActivity) -> a
    com.media.dbstarplayer.library.RootTree access$2(com.media.android.dbstarplayer.library.LibraryActivity) -> b
    void access$3(com.media.android.dbstarplayer.library.LibraryActivity,boolean) -> a
    void access$4(com.media.android.dbstarplayer.library.LibraryActivity) -> c
com.media.android.dbstarplayer.library.LibraryActivity$1 -> com.media.android.dbstarplayer.library.e:
    com.media.android.dbstarplayer.library.LibraryActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.library.LibraryActivity$2 -> com.media.android.dbstarplayer.library.f:
    com.media.android.dbstarplayer.library.LibraryActivity this$0 -> a
    java.lang.String val$pattern -> b
    void run() -> run
com.media.android.dbstarplayer.library.LibraryActivity$3 -> com.media.android.dbstarplayer.library.g:
    com.media.android.dbstarplayer.library.LibraryActivity this$0 -> a
    boolean val$found -> b
    void run() -> run
com.media.android.dbstarplayer.library.LibraryActivity$BookDeleter -> com.media.android.dbstarplayer.library.h:
    com.media.dbstarplayer.book.Book myBook -> b
    com.media.android.dbstarplayer.library.LibraryActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.android.dbstarplayer.library.LibrarySearchActivity -> com.media.android.dbstarplayer.library.LibrarySearchActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.media.android.dbstarplayer.library.LibraryTreeAdapter -> com.media.android.dbstarplayer.library.i:
    com.media.android.dbstarplayer.covers.CoverManager myCoverManager -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.media.android.dbstarplayer.libraryService.BookCollectionShadow -> com.media.android.dbstarplayer.libraryService.a:
    android.content.Context myContext -> a
    com.media.android.dbstarplayer.libraryService.LibraryInterface myInterface -> b
    java.lang.Runnable myOnBindAction -> c
    android.content.BroadcastReceiver myReceiver -> d
    void bindToService(android.content.Context,java.lang.Runnable) -> a
    void unbind() -> a
    void reset(boolean) -> a
    int size() -> size
    com.media.dbstarplayer.book.IBookCollection$Status status() -> status
    java.util.List books(com.media.dbstarplayer.book.BookQuery) -> books
    boolean hasBooks(com.media.dbstarplayer.book.Filter) -> hasBooks
    java.util.List recentBooks() -> recentBooks
    com.media.dbstarplayer.book.Book getRecentBook(int) -> getRecentBook
    com.media.dbstarplayer.book.Book getBookByFile(com.media.zlibrary.core.filesystem.ZLFile) -> getBookByFile
    com.media.dbstarplayer.book.Book getBookById(long) -> getBookById
    com.media.dbstarplayer.book.Book getBookByUid(com.media.dbstarplayer.book.UID) -> getBookByUid
    java.util.List authors() -> authors
    java.util.List tags() -> tags
    boolean hasSeries() -> hasSeries
    java.util.List series() -> series
    java.util.List titles(com.media.dbstarplayer.book.BookQuery) -> titles
    java.util.List firstTitleLetters() -> firstTitleLetters
    boolean saveBook(com.media.dbstarplayer.book.Book,boolean) -> saveBook
    void removeBook(com.media.dbstarplayer.book.Book,boolean) -> removeBook
    void addBookToRecentList(com.media.dbstarplayer.book.Book) -> addBookToRecentList
    java.util.List labels() -> labels
    com.media.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    void storePosition(long,com.media.zlibrary.text.view.ZLTextPosition) -> storePosition
    boolean isHyperlinkVisited(com.media.dbstarplayer.book.Book,java.lang.String) -> isHyperlinkVisited
    void markHyperlinkAsVisited(com.media.dbstarplayer.book.Book,java.lang.String) -> markHyperlinkAsVisited
    java.util.List bookmarks(com.media.dbstarplayer.book.BookmarkQuery) -> bookmarks
    void saveBookmark(com.media.dbstarplayer.book.Bookmark) -> saveBookmark
    void deleteBookmark(com.media.dbstarplayer.book.Bookmark) -> deleteBookmark
    com.media.dbstarplayer.book.HighlightingStyle getHighlightingStyle(int) -> getHighlightingStyle
    java.util.List highlightingStyles() -> highlightingStyles
    void saveHighlightingStyle(com.media.dbstarplayer.book.HighlightingStyle) -> saveHighlightingStyle
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean access$0(com.media.android.dbstarplayer.libraryService.BookCollectionShadow) -> a
    void access$1(com.media.android.dbstarplayer.libraryService.BookCollectionShadow,com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    void access$2(com.media.android.dbstarplayer.libraryService.BookCollectionShadow,com.media.dbstarplayer.book.IBookCollection$Status) -> a
com.media.android.dbstarplayer.libraryService.BookCollectionShadow$1 -> com.media.android.dbstarplayer.libraryService.b:
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.media.android.dbstarplayer.libraryService.BookCollectionShadow$2 -> com.media.android.dbstarplayer.libraryService.c:
    java.lang.Runnable val$action0 -> a
    java.lang.Runnable val$action1 -> b
    void run() -> run
com.media.android.dbstarplayer.libraryService.LibraryInterface -> com.media.android.dbstarplayer.libraryService.d:
    void reset(java.util.List,boolean) -> a
    java.lang.String status() -> a
    int size() -> b
    java.util.List books(java.lang.String) -> a
    boolean hasBooks(java.lang.String) -> b
    java.util.List recentBooks() -> c
    java.lang.String getBookByFile(java.lang.String) -> c
    java.lang.String getBookById(long) -> a
    java.lang.String getBookByUid(java.lang.String,java.lang.String) -> a
    java.lang.String getRecentBook(int) -> a
    java.util.List authors() -> d
    boolean hasSeries() -> e
    java.util.List series() -> f
    java.util.List tags() -> g
    java.util.List labels() -> h
    java.util.List titles(java.lang.String) -> d
    java.util.List firstTitleLetters() -> i
    boolean saveBook(java.lang.String,boolean) -> a
    void removeBook(java.lang.String,boolean) -> b
    void addBookToRecentList(java.lang.String) -> e
    com.media.android.dbstarplayer.api.TextPosition getStoredPosition(long) -> b
    void storePosition(long,com.media.android.dbstarplayer.api.TextPosition) -> a
    boolean isHyperlinkVisited(java.lang.String,java.lang.String) -> b
    void markHyperlinkAsVisited(java.lang.String,java.lang.String) -> c
    java.util.List bookmarks(java.lang.String) -> f
    java.lang.String saveBookmark(java.lang.String) -> g
    void deleteBookmark(java.lang.String) -> h
    java.lang.String getHighlightingStyle(int) -> b
    java.util.List highlightingStyles() -> j
    void saveHighlightingStyle(java.lang.String) -> i
com.media.android.dbstarplayer.libraryService.LibraryInterface$Stub -> com.media.android.dbstarplayer.libraryService.e:
    com.media.android.dbstarplayer.libraryService.LibraryInterface asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.media.android.dbstarplayer.libraryService.LibraryInterface$Stub$Proxy -> com.media.android.dbstarplayer.libraryService.f:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    void reset(java.util.List,boolean) -> a
    java.lang.String status() -> a
    int size() -> b
    java.util.List books(java.lang.String) -> a
    boolean hasBooks(java.lang.String) -> b
    java.util.List recentBooks() -> c
    java.lang.String getBookByFile(java.lang.String) -> c
    java.lang.String getBookById(long) -> a
    java.lang.String getBookByUid(java.lang.String,java.lang.String) -> a
    java.lang.String getRecentBook(int) -> a
    java.util.List authors() -> d
    boolean hasSeries() -> e
    java.util.List series() -> f
    java.util.List tags() -> g
    java.util.List labels() -> h
    java.util.List titles(java.lang.String) -> d
    java.util.List firstTitleLetters() -> i
    boolean saveBook(java.lang.String,boolean) -> a
    void removeBook(java.lang.String,boolean) -> b
    void addBookToRecentList(java.lang.String) -> e
    com.media.android.dbstarplayer.api.TextPosition getStoredPosition(long) -> b
    void storePosition(long,com.media.android.dbstarplayer.api.TextPosition) -> a
    boolean isHyperlinkVisited(java.lang.String,java.lang.String) -> b
    void markHyperlinkAsVisited(java.lang.String,java.lang.String) -> c
    java.util.List bookmarks(java.lang.String) -> f
    java.lang.String saveBookmark(java.lang.String) -> g
    void deleteBookmark(java.lang.String) -> h
    java.lang.String getHighlightingStyle(int) -> b
    java.util.List highlightingStyles() -> j
    void saveHighlightingStyle(java.lang.String) -> i
com.media.android.dbstarplayer.libraryService.LibraryService -> com.media.android.dbstarplayer.libraryService.LibraryService:
    com.media.android.dbstarplayer.libraryService.LibraryService$LibraryImplementation myLibrary -> a
    void onStart(android.content.Intent,int) -> onStart
    int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onCreate() -> onCreate
    void onDestroy() -> onDestroy
com.media.android.dbstarplayer.libraryService.LibraryService$LibraryImplementation -> com.media.android.dbstarplayer.libraryService.g:
    com.media.dbstarplayer.book.BooksDatabase myDatabase -> b
    java.util.List myFileObservers -> c
    com.media.dbstarplayer.book.BookCollection myCollection -> d
    com.media.android.dbstarplayer.libraryService.LibraryService this$0 -> a
    void reset(java.util.List,boolean) -> a
    void deactivate() -> k
    java.lang.String status() -> a
    int size() -> b
    java.util.List books(java.lang.String) -> a
    boolean hasBooks(java.lang.String) -> b
    java.util.List recentBooks() -> c
    java.lang.String getRecentBook(int) -> a
    java.lang.String getBookByFile(java.lang.String) -> c
    java.lang.String getBookById(long) -> a
    java.lang.String getBookByUid(java.lang.String,java.lang.String) -> a
    java.util.List authors() -> d
    boolean hasSeries() -> e
    java.util.List series() -> f
    java.util.List tags() -> g
    java.util.List titles(java.lang.String) -> d
    java.util.List firstTitleLetters() -> i
    boolean saveBook(java.lang.String,boolean) -> a
    void removeBook(java.lang.String,boolean) -> b
    void addBookToRecentList(java.lang.String) -> e
    java.util.List labels() -> h
    com.media.android.dbstarplayer.api.TextPosition getStoredPosition(long) -> b
    void storePosition(long,com.media.android.dbstarplayer.api.TextPosition) -> a
    boolean isHyperlinkVisited(java.lang.String,java.lang.String) -> b
    void markHyperlinkAsVisited(java.lang.String,java.lang.String) -> c
    java.util.List bookmarks(java.lang.String) -> f
    java.lang.String saveBookmark(java.lang.String) -> g
    void deleteBookmark(java.lang.String) -> h
    java.lang.String getHighlightingStyle(int) -> b
    java.util.List highlightingStyles() -> j
    void saveHighlightingStyle(java.lang.String) -> i
    com.media.android.dbstarplayer.libraryService.LibraryService access$0(com.media.android.dbstarplayer.libraryService.LibraryService$LibraryImplementation) -> a
com.media.android.dbstarplayer.libraryService.LibraryService$LibraryImplementation$1 -> com.media.android.dbstarplayer.libraryService.h:
    com.media.android.dbstarplayer.libraryService.LibraryService$LibraryImplementation this$1 -> a
    void onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> onBookEvent
    void onBuildEvent(com.media.dbstarplayer.book.IBookCollection$Status) -> onBuildEvent
com.media.android.dbstarplayer.libraryService.LibraryService$Observer -> com.media.android.dbstarplayer.libraryService.i:
    java.lang.String myPrefix -> a
    com.media.dbstarplayer.book.BookCollection myCollection -> b
    void onEvent(int,java.lang.String) -> onEvent
com.media.android.dbstarplayer.libraryService.SQLiteBooksDatabase -> com.media.android.dbstarplayer.libraryService.j:
    com.media.dbstarplayer.book.BooksDatabase ourInstance -> a
    android.database.sqlite.SQLiteDatabase myDatabase -> b
    boolean myTagCacheIsInitialized -> c
    java.util.HashMap myIdByTag -> d
    java.util.HashMap myTagById -> e
    android.database.sqlite.SQLiteStatement myUpdateBookInfoStatement -> f
    android.database.sqlite.SQLiteStatement myInsertBookInfoStatement -> g
    android.database.sqlite.SQLiteStatement myDeleteBookAuthorsStatement -> h
    android.database.sqlite.SQLiteStatement myGetAuthorIdStatement -> i
    android.database.sqlite.SQLiteStatement myInsertAuthorStatement -> j
    android.database.sqlite.SQLiteStatement myInsertBookAuthorStatement -> k
    android.database.sqlite.SQLiteStatement myGetTagIdStatement -> l
    android.database.sqlite.SQLiteStatement myCreateTagIdStatement -> m
    android.database.sqlite.SQLiteStatement myDeleteBookTagsStatement -> n
    android.database.sqlite.SQLiteStatement myInsertBookTagStatement -> o
    android.database.sqlite.SQLiteStatement myDeleteBookUidsStatement -> p
    android.database.sqlite.SQLiteStatement myInsertBookUidStatement -> q
    android.database.sqlite.SQLiteStatement myGetSeriesIdStatement -> r
    android.database.sqlite.SQLiteStatement myInsertSeriesStatement -> s
    android.database.sqlite.SQLiteStatement myInsertBookSeriesStatement -> t
    android.database.sqlite.SQLiteStatement myDeleteBookSeriesStatement -> u
    android.database.sqlite.SQLiteStatement myRemoveFileInfoStatement -> v
    android.database.sqlite.SQLiteStatement myInsertFileInfoStatement -> w
    android.database.sqlite.SQLiteStatement myUpdateFileInfoStatement -> x
    android.database.sqlite.SQLiteStatement mySaveRecentBookStatement -> y
    android.database.sqlite.SQLiteStatement mySetLabelStatement -> z
    android.database.sqlite.SQLiteStatement myRemoveLabelStatement -> A
    android.database.sqlite.SQLiteStatement myInsertStyleStatement -> B
    android.database.sqlite.SQLiteStatement myInsertBookmarkStatement -> C
    android.database.sqlite.SQLiteStatement myUpdateBookmarkStatement -> D
    android.database.sqlite.SQLiteStatement myDeleteBookmarkStatement -> E
    android.database.sqlite.SQLiteStatement myStorePositionStatement -> F
    android.database.sqlite.SQLiteStatement myStoreVisitedHyperlinksStatement -> G
    com.media.dbstarplayer.book.BooksDatabase Instance(android.content.Context) -> a
    void executeAsTransaction(java.lang.Runnable) -> executeAsTransaction
    com.media.dbstarplayer.book.Book loadBook(long) -> loadBook
    com.media.dbstarplayer.book.Book loadBookByFile(long,com.media.zlibrary.core.filesystem.ZLFile) -> loadBookByFile
    void initTagCache() -> a
    java.util.Map loadBooks(com.media.dbstarplayer.book.FileInfoSet,boolean) -> loadBooks
    void setExistingFlag(java.util.Collection,boolean) -> setExistingFlag
    void updateBookInfo(long,long,java.lang.String,java.lang.String,java.lang.String) -> updateBookInfo
    long insertBookInfo(com.media.zlibrary.core.filesystem.ZLFile,java.lang.String,java.lang.String,java.lang.String) -> insertBookInfo
    void deleteAllBookAuthors(long) -> deleteAllBookAuthors
    void saveBookAuthorInfo(long,long,com.media.dbstarplayer.book.Author) -> saveBookAuthorInfo
    java.util.List listAuthors(long) -> listAuthors
    long getTagId(com.media.dbstarplayer.book.Tag) -> a
    void deleteAllBookTags(long) -> deleteAllBookTags
    void saveBookTagInfo(long,com.media.dbstarplayer.book.Tag) -> saveBookTagInfo
    com.media.dbstarplayer.book.Tag getTagById(long) -> a
    java.util.List listTags(long) -> listTags
    java.util.List listLabels(long) -> listLabels
    void deleteAllBookUids(long) -> deleteAllBookUids
    void saveBookUid(long,com.media.dbstarplayer.book.UID) -> saveBookUid
    java.util.List listUids(long) -> listUids
    java.lang.Long bookIdByUid(com.media.dbstarplayer.book.UID) -> bookIdByUid
    void saveBookSeriesInfo(long,com.media.dbstarplayer.book.SeriesInfo) -> saveBookSeriesInfo
    com.media.dbstarplayer.book.SeriesInfo getSeriesInfo(long) -> getSeriesInfo
    void removeFileInfo(long) -> removeFileInfo
    void saveFileInfo(com.media.dbstarplayer.book.FileInfo) -> saveFileInfo
    java.util.Collection loadFileInfos() -> loadFileInfos
    java.util.Collection loadFileInfos(com.media.zlibrary.core.filesystem.ZLFile) -> loadFileInfos
    java.util.Collection loadFileInfos(long) -> loadFileInfos
    void saveRecentBookIds(java.util.List) -> saveRecentBookIds
    java.util.List loadRecentBookIds() -> loadRecentBookIds
    void setLabel(long,java.lang.String) -> setLabel
    void removeLabel(long,java.lang.String) -> removeLabel
    boolean hasVisibleBookmark(long) -> hasVisibleBookmark
    java.util.List loadBookmarks(com.media.dbstarplayer.book.BookmarkQuery) -> loadBookmarks
    java.util.List loadStyles() -> loadStyles
    void saveStyle(com.media.dbstarplayer.book.HighlightingStyle) -> saveStyle
    long saveBookmark(com.media.dbstarplayer.book.Bookmark) -> saveBookmark
    void deleteBookmark(com.media.dbstarplayer.book.Bookmark) -> deleteBookmark
    com.media.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    void storePosition(long,com.media.zlibrary.text.view.ZLTextPosition) -> storePosition
    void addVisitedHyperlink(long,java.lang.String) -> addVisitedHyperlink
    java.util.Collection loadVisitedHyperlinks(long) -> loadVisitedHyperlinks
    void updateTables4() -> b
    void updateTables5() -> c
    void updateTables6() -> d
    void updateTables7() -> e
    void updateTables18() -> f
    android.database.sqlite.SQLiteDatabase access$0(com.media.android.dbstarplayer.libraryService.SQLiteBooksDatabase) -> a
    android.database.sqlite.SQLiteStatement access$1(com.media.android.dbstarplayer.libraryService.SQLiteBooksDatabase) -> b
com.media.android.dbstarplayer.libraryService.SQLiteBooksDatabase$1 -> com.media.android.dbstarplayer.libraryService.k:
    com.media.android.dbstarplayer.libraryService.SQLiteBooksDatabase this$0 -> a
    java.util.List val$ids -> b
    void run() -> run
com.media.android.dbstarplayer.network.AddCatalogMenuActivity -> com.media.android.dbstarplayer.network.AddCatalogMenuActivity:
    com.media.zlibrary.core.resources.ZLResource myResource -> b
    void init() -> a
    java.lang.String getAction() -> b
    void runItem(com.media.android.dbstarplayer.api.PluginApi$MenuActionInfo) -> a
com.media.android.dbstarplayer.network.AddCustomCatalogActivity -> com.media.android.dbstarplayer.network.AddCustomCatalogActivity:
    com.media.zlibrary.core.resources.ZLResource myResource -> a
    com.media.dbstarplayer.network.ICustomNetworkLink myLink -> b
    boolean myEditNotAdd -> c
    com.media.dbstarplayer.network.INetworkLink$Type myType -> d
    void onCreate(android.os.Bundle) -> onCreate
    boolean isEmptyString(java.lang.String) -> a
    void setExtraFieldsVisibility(boolean) -> a
    void setTextById(int,java.lang.String) -> a
    java.lang.String getTextById(int) -> a
    void setupButton(int,java.lang.String,android.view.View$OnClickListener) -> a
    void setTextFromResource(int,java.lang.String) -> b
    void setErrorText(java.lang.String) -> b
    void setErrorByKey(java.lang.String) -> c
    void loadInfoByUri(android.net.Uri) -> a
    void access$0(com.media.android.dbstarplayer.network.AddCustomCatalogActivity) -> a
    com.media.dbstarplayer.network.ICustomNetworkLink access$1(com.media.android.dbstarplayer.network.AddCustomCatalogActivity) -> b
    void access$2(com.media.android.dbstarplayer.network.AddCustomCatalogActivity,int,java.lang.String) -> a
    void access$3$53d212bc(com.media.android.dbstarplayer.network.AddCustomCatalogActivity) -> c
    void access$4$791d1b3d(com.media.android.dbstarplayer.network.AddCustomCatalogActivity) -> d
    void access$5(com.media.android.dbstarplayer.network.AddCustomCatalogActivity,java.lang.String) -> a
com.media.android.dbstarplayer.network.AddCustomCatalogActivity$1 -> com.media.android.dbstarplayer.network.a:
    com.media.android.dbstarplayer.network.AddCustomCatalogActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.AddCustomCatalogActivity$2 -> com.media.android.dbstarplayer.network.b:
    com.media.android.dbstarplayer.network.AddCustomCatalogActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.AddCustomCatalogActivity$3 -> com.media.android.dbstarplayer.network.c:
    com.media.android.dbstarplayer.network.AddCustomCatalogActivity this$0 -> a
    int val$visibility -> b
    void run() -> run
com.media.android.dbstarplayer.network.AddCustomCatalogActivity$4 -> com.media.android.dbstarplayer.network.d:
    com.media.android.dbstarplayer.network.AddCustomCatalogActivity this$0 -> a
    java.lang.String val$errorText -> b
    void run() -> run
com.media.android.dbstarplayer.network.AddCustomCatalogActivity$5 -> com.media.android.dbstarplayer.network.e:
    java.lang.String myError -> b
    com.media.android.dbstarplayer.network.AddCustomCatalogActivity this$0 -> a
    void run() -> run
    java.lang.String access$0(com.media.android.dbstarplayer.network.AddCustomCatalogActivity$5) -> a
com.media.android.dbstarplayer.network.AddCustomCatalogActivity$5$1 -> com.media.android.dbstarplayer.network.f:
    com.media.android.dbstarplayer.network.AddCustomCatalogActivity$5 this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.network.AuthenticationActivity -> com.media.android.dbstarplayer.network.AuthenticationActivity:
    java.util.Map ourOnSuccessRunnableMap -> a
    long ourNextCode -> b
    com.media.zlibrary.core.resources.ZLResource myResource -> c
    com.media.dbstarplayer.network.INetworkLink myLink -> d
    android.widget.Button myOkButton -> e
    java.util.Timer myOkButtonUpdater -> f
    android.widget.TextView myUsernameView -> g
    boolean myCustomAuthentication -> h
    java.lang.Runnable myOnSuccessRunnable -> i
    android.content.Intent registerRunnable(android.content.Intent,java.lang.Runnable) -> a
    void initCredentialsCreator(android.content.Context) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void setError(java.lang.String) -> a
    android.widget.TextView findTextView(int) -> a
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    android.widget.TextView access$0(com.media.android.dbstarplayer.network.AuthenticationActivity) -> a
    android.widget.TextView access$1$b60cce8(com.media.android.dbstarplayer.network.AuthenticationActivity) -> b
    boolean access$2(com.media.android.dbstarplayer.network.AuthenticationActivity) -> c
    void access$3(com.media.android.dbstarplayer.network.AuthenticationActivity,java.lang.String,java.lang.String) -> a
    void access$4(com.media.android.dbstarplayer.network.AuthenticationActivity,java.lang.String,java.lang.String) -> b
    com.media.dbstarplayer.network.INetworkLink access$5(com.media.android.dbstarplayer.network.AuthenticationActivity) -> d
    java.lang.Runnable access$6(com.media.android.dbstarplayer.network.AuthenticationActivity) -> e
    void access$7(com.media.android.dbstarplayer.network.AuthenticationActivity,java.lang.String) -> a
    android.widget.Button access$8(com.media.android.dbstarplayer.network.AuthenticationActivity) -> f
com.media.android.dbstarplayer.network.AuthenticationActivity$1 -> com.media.android.dbstarplayer.network.g:
    com.media.android.dbstarplayer.network.AuthenticationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.AuthenticationActivity$2 -> com.media.android.dbstarplayer.network.h:
    com.media.android.dbstarplayer.network.AuthenticationActivity this$0 -> a
    void onClick(android.view.View) -> onClick
    com.media.android.dbstarplayer.network.AuthenticationActivity access$0(com.media.android.dbstarplayer.network.AuthenticationActivity$2) -> a
com.media.android.dbstarplayer.network.AuthenticationActivity$2$1 -> com.media.android.dbstarplayer.network.i:
    com.media.android.dbstarplayer.network.AuthenticationActivity$2 this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.network.AuthenticationActivity$3 -> com.media.android.dbstarplayer.network.j:
    com.media.android.dbstarplayer.network.AuthenticationActivity this$0 -> a
    com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager val$mgr -> b
    java.lang.String val$username -> c
    java.lang.String val$password -> d
    void run() -> run
com.media.android.dbstarplayer.network.AuthenticationActivity$3$1 -> com.media.android.dbstarplayer.network.k:
    com.media.android.dbstarplayer.network.AuthenticationActivity$3 this$1 -> a
    com.media.zlibrary.core.network.ZLNetworkException val$e -> b
    void run() -> run
com.media.android.dbstarplayer.network.AuthenticationActivity$4 -> com.media.android.dbstarplayer.network.l:
    com.media.android.dbstarplayer.network.AuthenticationActivity this$0 -> a
    void run() -> run
    com.media.android.dbstarplayer.network.AuthenticationActivity access$0(com.media.android.dbstarplayer.network.AuthenticationActivity$4) -> a
com.media.android.dbstarplayer.network.AuthenticationActivity$4$1 -> com.media.android.dbstarplayer.network.m:
    com.media.android.dbstarplayer.network.AuthenticationActivity$4 this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.network.AuthenticationActivity$CredentialsCreator -> com.media.android.dbstarplayer.network.n:
    android.content.Context myContext -> a
    void startAuthenticationDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.media.android.dbstarplayer.network.AuthorizationMenuActivity -> com.media.android.dbstarplayer.network.AuthorizationMenuActivity:
    com.media.dbstarplayer.network.INetworkLink myLink -> b
    void runMenu(android.content.Context,com.media.dbstarplayer.network.INetworkLink) -> a
    void runMenu$193850b2(android.app.Activity,com.media.dbstarplayer.network.INetworkLink) -> a
    void init() -> a
    java.lang.String getAction() -> b
    void runItem(com.media.android.dbstarplayer.api.PluginApi$MenuActionInfo) -> a
com.media.android.dbstarplayer.network.BookDownloader -> com.media.android.dbstarplayer.network.BookDownloader:
    boolean acceptsUri(android.net.Uri) -> a
    void onCreate(android.os.Bundle) -> onCreate
com.media.android.dbstarplayer.network.BookDownloaderInterface -> com.media.android.dbstarplayer.network.o:
    boolean isBeingDownloaded(java.lang.String) -> a
com.media.android.dbstarplayer.network.BookDownloaderInterface$Stub -> com.media.android.dbstarplayer.network.p:
    com.media.android.dbstarplayer.network.BookDownloaderInterface asInterface(android.os.IBinder) -> a
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.media.android.dbstarplayer.network.BookDownloaderInterface$Stub$Proxy -> com.media.android.dbstarplayer.network.q:
    android.os.IBinder mRemote -> a
    android.os.IBinder asBinder() -> asBinder
    boolean isBeingDownloaded(java.lang.String) -> a
com.media.android.dbstarplayer.network.BookDownloaderService -> com.media.android.dbstarplayer.network.BookDownloaderService:
    java.util.Set myDownloadingURLs -> a
    java.util.Set myOngoingNotifications -> b
    int myServiceCounter -> c
    void doStop() -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onDestroy() -> onDestroy
    void onStart(android.content.Intent,int) -> onStart
    void showMessage(java.lang.String) -> a
    void showMessage(java.lang.String,java.lang.String) -> a
    android.content.Intent getDbStarPlayerIntent(java.io.File) -> a
    void sendDownloaderCallback() -> b
    java.util.Set access$0(com.media.android.dbstarplayer.network.BookDownloaderService) -> a
    java.util.Set access$1(com.media.android.dbstarplayer.network.BookDownloaderService) -> b
    android.app.Notification access$2(com.media.android.dbstarplayer.network.BookDownloaderService,java.io.File,java.lang.String,boolean) -> a
    void access$3(com.media.android.dbstarplayer.network.BookDownloaderService) -> c
    void access$4(com.media.android.dbstarplayer.network.BookDownloaderService) -> d
com.media.android.dbstarplayer.network.BookDownloaderService$1 -> com.media.android.dbstarplayer.network.r:
    com.media.android.dbstarplayer.network.BookDownloaderService this$0 -> a
    boolean isBeingDownloaded(java.lang.String) -> a
com.media.android.dbstarplayer.network.BookDownloaderService$2 -> com.media.android.dbstarplayer.network.s:
    com.media.android.dbstarplayer.network.BookDownloaderService this$0 -> a
    android.app.Notification val$progressNotification -> b
    int val$notificationId -> c
    void handleMessage(android.os.Message) -> handleMessage
com.media.android.dbstarplayer.network.BookDownloaderService$3 -> com.media.android.dbstarplayer.network.t:
    com.media.android.dbstarplayer.network.BookDownloaderService this$0 -> a
    java.lang.String val$urlString -> b
    int val$notificationId -> c
    java.io.File val$file -> d
    java.lang.String val$title -> e
    void handleMessage(android.os.Message) -> handleMessage
com.media.android.dbstarplayer.network.BookDownloaderService$4 -> com.media.android.dbstarplayer.network.u:
    com.media.android.dbstarplayer.network.BookDownloaderService this$0 -> a
    android.os.Handler val$progressHandler -> f
    java.io.File val$file -> g
    void handleStream(java.io.InputStream,int) -> a
com.media.android.dbstarplayer.network.BookDownloaderService$5 -> com.media.android.dbstarplayer.network.v:
    com.media.android.dbstarplayer.network.BookDownloaderService this$0 -> a
    android.os.Handler val$downloadFinishHandler -> b
    com.media.zlibrary.core.network.ZLNetworkRequest val$request -> c
    java.io.File val$file -> d
    void run() -> run
com.media.android.dbstarplayer.network.BookDownloaderServiceConnection -> com.media.android.dbstarplayer.network.w:
    java.lang.Runnable myAction -> a
    com.media.android.dbstarplayer.network.BookDownloaderInterface myInterface -> b
    void bindToService(android.content.Context,java.lang.Runnable) -> a
    void unbind(android.content.Context) -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    boolean isBeingDownloaded(java.lang.String) -> a
com.media.android.dbstarplayer.network.BuyBooksActivity -> com.media.android.dbstarplayer.network.BuyBooksActivity:
    com.media.dbstarplayer.network.NetworkLibrary myLibrary -> a
    com.media.dbstarplayer.network.INetworkLink myLink -> b
    java.util.List myBooks -> c
    com.media.zlibrary.core.money.Money myCost -> d
    com.media.zlibrary.core.money.Money myAccount -> e
    int[] $SWITCH_TABLE$com$media$android$dbstarplayer$network$BuyBooksActivity$AuthorizationState -> f
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$NetworkLibrary$ChangeListener$Code -> g
    void run(android.app.Activity,com.media.dbstarplayer.network.tree.NetworkBookTree) -> a
    void run(android.app.Activity,java.util.List) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void setupUI(com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState) -> a
    void onDestroy() -> onDestroy
    void onResume() -> onResume
    com.media.zlibrary.core.money.Money calculateCost() -> a
    void onLibraryChanged(com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code,java.lang.Object[]) -> a
    void updateAuthorizationState() -> b
    void access$0(com.media.android.dbstarplayer.network.BuyBooksActivity,com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState) -> a
    com.media.dbstarplayer.network.INetworkLink access$1(com.media.android.dbstarplayer.network.BuyBooksActivity) -> a
    void access$2(com.media.android.dbstarplayer.network.BuyBooksActivity) -> b
    com.media.zlibrary.core.money.Money access$3(com.media.android.dbstarplayer.network.BuyBooksActivity) -> c
    com.media.zlibrary.core.money.Money access$4(com.media.android.dbstarplayer.network.BuyBooksActivity) -> d
    java.lang.Runnable access$5(com.media.android.dbstarplayer.network.BuyBooksActivity) -> e
    int[] $SWITCH_TABLE$com$media$android$dbstarplayer$network$BuyBooksActivity$AuthorizationState() -> c
    void access$7(com.media.android.dbstarplayer.network.BuyBooksActivity) -> f
    void access$8(com.media.android.dbstarplayer.network.BuyBooksActivity,com.media.zlibrary.core.money.Money) -> a
    com.media.zlibrary.core.money.Money access$9(com.media.android.dbstarplayer.network.BuyBooksActivity) -> g
    void access$10(com.media.android.dbstarplayer.network.BuyBooksActivity,com.media.zlibrary.core.money.Money) -> b
    void access$11(com.media.android.dbstarplayer.network.BuyBooksActivity,com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState) -> b
    com.media.dbstarplayer.network.NetworkLibrary access$12(com.media.android.dbstarplayer.network.BuyBooksActivity) -> h
    java.util.List access$13(com.media.android.dbstarplayer.network.BuyBooksActivity) -> i
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$NetworkLibrary$ChangeListener$Code() -> d
com.media.android.dbstarplayer.network.BuyBooksActivity$1 -> com.media.android.dbstarplayer.network.x:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState val$state -> b
    void run() -> run
com.media.android.dbstarplayer.network.BuyBooksActivity$10 -> com.media.android.dbstarplayer.network.y:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.BuyBooksActivity$11 -> com.media.android.dbstarplayer.network.z:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.BuyBooksActivity$11$1 -> com.media.android.dbstarplayer.network.aa:
    com.media.android.dbstarplayer.network.BuyBooksActivity$11 this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.network.BuyBooksActivity$12 -> com.media.android.dbstarplayer.network.ab:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.BuyBooksActivity$12$1 -> com.media.android.dbstarplayer.network.ac:
    com.media.android.dbstarplayer.network.BuyBooksActivity$12 this$1 -> a
    com.media.dbstarplayer.network.NetworkBookItem val$b -> b
    void run() -> run
com.media.android.dbstarplayer.network.BuyBooksActivity$12$2 -> com.media.android.dbstarplayer.network.ad:
    com.media.android.dbstarplayer.network.BuyBooksActivity$12 this$1 -> a
    com.media.zlibrary.core.resources.ZLResource val$boxResource -> b
    com.media.zlibrary.core.network.ZLNetworkException val$e -> c
    com.media.zlibrary.core.resources.ZLResource val$buttonResource -> d
    void run() -> run
com.media.android.dbstarplayer.network.BuyBooksActivity$13 -> com.media.android.dbstarplayer.network.ae:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.BuyBooksActivity$2 -> com.media.android.dbstarplayer.network.af:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.BuyBooksActivity$3 -> com.media.android.dbstarplayer.network.ag:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.BuyBooksActivity$4 -> com.media.android.dbstarplayer.network.ah:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.BuyBooksActivity$5 -> com.media.android.dbstarplayer.network.ai:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.BuyBooksActivity$6 -> com.media.android.dbstarplayer.network.aj:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.BuyBooksActivity$7 -> com.media.android.dbstarplayer.network.ak:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.BuyBooksActivity$8 -> com.media.android.dbstarplayer.network.al:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.BuyBooksActivity$9 -> com.media.android.dbstarplayer.network.am:
    com.media.android.dbstarplayer.network.BuyBooksActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState -> com.media.android.dbstarplayer.network.an:
    com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState Authorized -> a
    com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState NotAuthorized -> b
    com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState[] ENUM$VALUES -> c
    com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState[] values() -> values
    com.media.android.dbstarplayer.network.BuyBooksActivity$AuthorizationState valueOf(java.lang.String) -> valueOf
com.media.android.dbstarplayer.network.ListenerCallback -> com.media.android.dbstarplayer.network.ListenerCallback:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void access$0(com.media.dbstarplayer.network.authentication.litres.LitResAuthenticationManager,android.content.Intent) -> a
com.media.android.dbstarplayer.network.ListenerCallback$1 -> com.media.android.dbstarplayer.network.ao:
    com.media.android.dbstarplayer.network.ListenerCallback this$0 -> a
    com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager val$mgr -> b
    android.content.Intent val$intent -> c
    void run() -> run
com.media.android.dbstarplayer.network.MenuActivity -> com.media.android.dbstarplayer.network.ap:
    java.util.List myInfos -> a
    void onCreate(android.os.Bundle) -> onCreate
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    boolean finishInitialization() -> c
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void init() -> a
    java.lang.String getAction() -> b
    void runItem(com.media.android.dbstarplayer.api.PluginApi$MenuActionInfo) -> a
com.media.android.dbstarplayer.network.MenuActivity$ActionListAdapter -> com.media.android.dbstarplayer.network.aq:
    com.media.android.dbstarplayer.network.MenuActivity this$0 -> a
    int getCount() -> getCount
    com.media.android.dbstarplayer.api.PluginApi$MenuActionInfo getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    java.lang.Object getItem(int) -> getItem
com.media.android.dbstarplayer.network.NetworkBookInfoActivity -> com.media.android.dbstarplayer.network.NetworkBookInfoActivity:
    com.media.dbstarplayer.network.tree.NetworkBookTree myTree -> a
    com.media.dbstarplayer.network.NetworkBookItem myBook -> b
    android.view.View myMainView -> c
    com.media.zlibrary.core.resources.ZLResource myResource -> d
    com.media.android.dbstarplayer.network.BookDownloaderServiceConnection myConnection -> e
    boolean myInitializerStarted -> f
    java.lang.Runnable myInitializer -> g
    java.lang.Runnable myViewInitializer -> h
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void setTextFromResource(int,java.lang.String) -> a
    void onDestroy() -> onDestroy
    void setPairLabelTextFromResource(int,java.lang.String) -> b
    void setPairLabelTextFromResource(int,java.lang.String,int) -> a
    void setPairValueText(int,java.lang.CharSequence) -> a
    void setupButtons() -> a
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onStop() -> onStop
    void onLibraryChanged(com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code,java.lang.Object[]) -> a
    boolean access$0(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> a
    void access$1$710f642(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> b
    com.media.dbstarplayer.network.NetworkBookItem access$2(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> c
    void access$3(com.media.android.dbstarplayer.network.NetworkBookInfoActivity,com.media.dbstarplayer.network.NetworkBookItem) -> a
    void access$4(com.media.android.dbstarplayer.network.NetworkBookInfoActivity,com.media.dbstarplayer.network.tree.NetworkBookTree) -> a
    com.media.dbstarplayer.network.tree.NetworkBookTree access$5(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> d
    java.lang.Runnable access$6(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> e
    void access$7(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> f
    void access$8(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> g
    void access$9(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> h
    void access$10(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> i
    void access$11(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> j
    java.lang.Runnable access$12(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> k
    void access$13(com.media.android.dbstarplayer.network.NetworkBookInfoActivity) -> l
com.media.android.dbstarplayer.network.NetworkBookInfoActivity$1 -> com.media.android.dbstarplayer.network.ar:
    com.media.android.dbstarplayer.network.NetworkBookInfoActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.NetworkBookInfoActivity$2 -> com.media.android.dbstarplayer.network.as:
    com.media.android.dbstarplayer.network.NetworkBookInfoActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.NetworkBookInfoActivity$3 -> com.media.android.dbstarplayer.network.at:
    com.media.android.dbstarplayer.network.NetworkBookInfoActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.NetworkBookInfoActivity$4 -> com.media.android.dbstarplayer.network.au:
    com.media.android.dbstarplayer.network.NetworkBookInfoActivity this$0 -> a
    com.media.dbstarplayer.network.urlInfo.RelatedUrlInfo val$relatedInfo -> b
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.NetworkBookInfoActivity$5 -> com.media.android.dbstarplayer.network.av:
    com.media.android.dbstarplayer.network.NetworkBookInfoActivity this$0 -> a
    com.media.zlibrary.core.image.ZLLoadableImage val$img -> b
    com.media.zlibrary.ui.android.image.ZLAndroidImageManager val$mgr -> c
    int val$maxWidth -> d
    int val$maxHeight -> e
    android.widget.ImageView val$coverView -> f
    android.view.View val$rootView -> g
    void run() -> run
com.media.android.dbstarplayer.network.NetworkBookInfoActivity$6 -> com.media.android.dbstarplayer.network.aw:
    com.media.android.dbstarplayer.network.NetworkBookInfoActivity this$0 -> a
    com.media.android.dbstarplayer.network.action.NetworkBookActions$NBAction val$a -> b
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.network.NetworkBookInfoActivity$7 -> com.media.android.dbstarplayer.network.ax:
    com.media.android.dbstarplayer.network.NetworkBookInfoActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.NetworkLibraryActivity -> com.media.android.dbstarplayer.network.NetworkLibraryActivity:
    com.media.android.dbstarplayer.network.BookDownloaderServiceConnection Connection -> a
    java.util.List myOptionsMenuActions -> b
    java.util.List myContextMenuActions -> c
    java.util.List myListClickActions -> d
    android.content.Intent myDeferredIntent -> e
    boolean mySingleCatalog -> f
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3 -> g
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onResume() -> onResume
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    boolean openTreeByIntent(android.content.Intent) -> b
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onSearchRequested() -> onSearchRequested
    boolean isTreeSelected(com.media.dbstarplayer.tree.FBTree) -> a
    boolean isTreeInvisible(com.media.dbstarplayer.tree.FBTree) -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    java.util.List getContextMenuActions(com.media.dbstarplayer.network.NetworkTree) -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    boolean onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    void onLibraryChanged(com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code,java.lang.Object[]) -> a
    void onCurrentTreeChanged() -> a
    void checkAndRun(com.media.android.dbstarplayer.network.action.Action,com.media.dbstarplayer.network.NetworkTree) -> a
    void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
    com.media.dbstarplayer.tree.FBTree getTreeByKey(com.media.dbstarplayer.tree.FBTree$Key) -> a
    void access$1(com.media.android.dbstarplayer.network.NetworkLibraryActivity) -> a
    com.media.dbstarplayer.tree.FBTree access$2(com.media.android.dbstarplayer.network.NetworkLibraryActivity) -> b
    void access$3(com.media.android.dbstarplayer.network.NetworkLibraryActivity,java.lang.String) -> a
    android.content.Intent access$4(com.media.android.dbstarplayer.network.NetworkLibraryActivity) -> c
    boolean access$5(com.media.android.dbstarplayer.network.NetworkLibraryActivity,android.content.Intent) -> a
    void access$6$795b6559(com.media.android.dbstarplayer.network.NetworkLibraryActivity) -> d
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3() -> d
com.media.android.dbstarplayer.network.NetworkLibraryActivity$1 -> com.media.android.dbstarplayer.network.ay:
    com.media.android.dbstarplayer.network.NetworkLibraryActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.network.NetworkLibraryActivity$2 -> com.media.android.dbstarplayer.network.az:
    com.media.android.dbstarplayer.network.NetworkLibraryActivity this$0 -> a
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code val$code -> b
    java.lang.Object[] val$params -> c
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$NetworkLibrary$ChangeListener$Code -> d
    void run() -> run
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$NetworkLibrary$ChangeListener$Code() -> a
com.media.android.dbstarplayer.network.NetworkLibraryActivity$3 -> com.media.android.dbstarplayer.network.ba:
    com.media.android.dbstarplayer.network.NetworkLibraryActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.android.dbstarplayer.network.NetworkLibraryActivity$4 -> com.media.android.dbstarplayer.network.bb:
    com.media.android.dbstarplayer.network.NetworkLibraryActivity this$0 -> a
    android.content.DialogInterface$OnClickListener val$listener -> b
    void onCancel(android.content.DialogInterface) -> onCancel
com.media.android.dbstarplayer.network.NetworkLibraryActivity$5 -> com.media.android.dbstarplayer.network.bc:
    com.media.android.dbstarplayer.network.NetworkLibraryActivity this$0 -> a
    com.media.dbstarplayer.network.tree.NetworkCatalogTree val$catalogTree -> b
    com.media.android.dbstarplayer.network.action.Action val$action -> c
    com.media.dbstarplayer.network.NetworkTree val$tree -> d
    void run() -> run
com.media.android.dbstarplayer.network.NetworkLibraryAdapter -> com.media.android.dbstarplayer.network.bd:
    com.media.android.dbstarplayer.covers.CoverManager myCoverManager -> a
    void setSubviewText(android.view.View,int,java.lang.String) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.media.android.dbstarplayer.network.NetworkLibraryPrimaryActivity -> com.media.android.dbstarplayer.network.NetworkLibraryPrimaryActivity:
com.media.android.dbstarplayer.network.NetworkLibrarySecondaryActivity -> com.media.android.dbstarplayer.network.NetworkLibrarySecondaryActivity:
com.media.android.dbstarplayer.network.NetworkNotifications -> com.media.android.dbstarplayer.network.be:
    com.media.android.dbstarplayer.network.NetworkNotifications ourInstance -> a
    int myBookDownloadingId -> b
    com.media.android.dbstarplayer.network.NetworkNotifications Instance() -> a
    int getBookDownloadingId() -> b
com.media.android.dbstarplayer.network.NetworkSearchActivity -> com.media.android.dbstarplayer.network.NetworkSearchActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.media.android.dbstarplayer.network.SQLiteNetworkDatabase -> com.media.android.dbstarplayer.network.bf:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    android.database.sqlite.SQLiteStatement myInsertCustomLinkStatement -> b
    android.database.sqlite.SQLiteStatement myUpdateCustomLinkStatement -> c
    android.database.sqlite.SQLiteStatement myInsertCustomLinkUrlStatement -> d
    android.database.sqlite.SQLiteStatement myUpdateCustomLinkUrlStatement -> e
    void executeAsTransaction(java.lang.Runnable) -> a
    java.util.List listLinks() -> a
    void saveLink(com.media.dbstarplayer.network.INetworkLink) -> a
    void deleteLink(com.media.dbstarplayer.network.INetworkLink) -> b
    android.database.sqlite.SQLiteStatement access$0(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase) -> a
    android.database.sqlite.SQLiteDatabase access$1(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase) -> b
    void access$2(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase,android.database.sqlite.SQLiteStatement) -> a
    android.database.sqlite.SQLiteStatement access$3(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase) -> c
    void access$4(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase,android.database.sqlite.SQLiteStatement) -> b
    android.database.sqlite.SQLiteStatement access$5(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase) -> d
    void access$6(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase,android.database.sqlite.SQLiteStatement) -> c
    android.database.sqlite.SQLiteStatement access$7(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase) -> e
    void access$8(com.media.android.dbstarplayer.network.SQLiteNetworkDatabase,android.database.sqlite.SQLiteStatement) -> d
com.media.android.dbstarplayer.network.SQLiteNetworkDatabase$1 -> com.media.android.dbstarplayer.network.bg:
    com.media.android.dbstarplayer.network.SQLiteNetworkDatabase this$0 -> a
    com.media.dbstarplayer.network.INetworkLink val$link -> b
    void run() -> run
com.media.android.dbstarplayer.network.SQLiteNetworkDatabase$2 -> com.media.android.dbstarplayer.network.bh:
    com.media.android.dbstarplayer.network.SQLiteNetworkDatabase this$0 -> a
    com.media.dbstarplayer.network.INetworkLink val$link -> b
    void run() -> run
com.media.android.dbstarplayer.network.TopupMenuActivity -> com.media.android.dbstarplayer.network.TopupMenuActivity:
    com.media.dbstarplayer.network.INetworkLink myLink -> b
    com.media.zlibrary.core.money.Money myAmount -> c
    boolean isTopupSupported(com.media.dbstarplayer.network.INetworkLink) -> a
    void runMenu(android.content.Context,com.media.dbstarplayer.network.INetworkLink,com.media.zlibrary.core.money.Money) -> a
    void init() -> a
    java.lang.String getAction() -> b
    void runItem(com.media.android.dbstarplayer.api.PluginApi$MenuActionInfo) -> a
    com.media.dbstarplayer.network.INetworkLink access$0(com.media.android.dbstarplayer.network.TopupMenuActivity) -> a
    com.media.zlibrary.core.money.Money access$1(com.media.android.dbstarplayer.network.TopupMenuActivity) -> b
com.media.android.dbstarplayer.network.TopupMenuActivity$1 -> com.media.android.dbstarplayer.network.bi:
    com.media.android.dbstarplayer.network.TopupMenuActivity this$0 -> a
    com.media.android.dbstarplayer.api.PluginApi$MenuActionInfo val$info -> b
    void run() -> run
com.media.android.dbstarplayer.network.Util -> com.media.android.dbstarplayer.network.bj:
    android.content.Intent intentByLink(android.content.Intent,com.media.dbstarplayer.network.INetworkLink) -> a
    void initLibrary(android.app.Activity) -> a
    android.content.Intent authorizationIntent(com.media.dbstarplayer.network.INetworkLink,android.net.Uri) -> a
    android.content.Intent registrationIntent(com.media.dbstarplayer.network.INetworkLink) -> a
    boolean isRegistrationSupported(android.app.Activity,com.media.dbstarplayer.network.INetworkLink) -> a
    void runRegistrationDialog(android.app.Activity,com.media.dbstarplayer.network.INetworkLink) -> b
    void runAuthenticationDialog(android.app.Activity,com.media.dbstarplayer.network.INetworkLink,java.lang.Runnable) -> a
    void openInBrowser(android.app.Activity,java.lang.String) -> a
    void doDownloadBook(android.app.Activity,com.media.dbstarplayer.network.NetworkBookItem,boolean) -> a
com.media.android.dbstarplayer.network.Util$1 -> com.media.android.dbstarplayer.network.bk:
    android.app.Activity val$activity -> a
    com.media.dbstarplayer.network.NetworkLibrary val$library -> b
    void run() -> run
com.media.android.dbstarplayer.network.action.Action -> com.media.android.dbstarplayer.network.a.a:
    int Code -> a
    int IconId -> b
    android.app.Activity myActivity -> c
    java.lang.String myResourceKey -> d
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    boolean isEnabled(com.media.dbstarplayer.network.NetworkTree) -> b
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
    java.lang.String getContextLabel(com.media.dbstarplayer.network.NetworkTree) -> d
    java.lang.String getOptionsLabel(com.media.dbstarplayer.network.NetworkTree) -> e
com.media.android.dbstarplayer.network.action.AddCustomCatalogAction -> com.media.android.dbstarplayer.network.a.b:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.BookAction -> com.media.android.dbstarplayer.network.a.c:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
com.media.android.dbstarplayer.network.action.BuyBasketBooksAction -> com.media.android.dbstarplayer.network.a.d:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    boolean isEnabled(com.media.dbstarplayer.network.NetworkTree) -> b
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.CatalogAction -> com.media.android.dbstarplayer.network.a.e:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
com.media.android.dbstarplayer.network.action.ClearBasketAction -> com.media.android.dbstarplayer.network.a.f:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.EditCustomCatalogAction -> com.media.android.dbstarplayer.network.a.g:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.LanguageFilterAction -> com.media.android.dbstarplayer.network.a.h:
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.LanguageFilterAction$1 -> com.media.android.dbstarplayer.network.a.i:
    com.media.android.dbstarplayer.network.action.LanguageFilterAction this$0 -> a
    boolean[] val$checked -> b
    void onClick(android.content.DialogInterface,int,boolean) -> onClick
com.media.android.dbstarplayer.network.action.LanguageFilterAction$2 -> com.media.android.dbstarplayer.network.a.j:
    com.media.android.dbstarplayer.network.action.LanguageFilterAction this$0 -> a
    boolean[] val$checked -> b
    java.util.List val$allLanguages -> c
    com.media.dbstarplayer.network.NetworkLibrary val$library -> d
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.android.dbstarplayer.network.action.NetworkBookActions -> com.media.android.dbstarplayer.network.a.k:
    boolean useFullReferences(com.media.dbstarplayer.network.NetworkBookItem) -> a
    boolean useDemoReferences(com.media.dbstarplayer.network.NetworkBookItem) -> b
    int getBookStatus(com.media.dbstarplayer.network.NetworkBookItem,com.media.android.dbstarplayer.network.BookDownloaderServiceConnection) -> a
    java.util.List getContextMenuActions(android.app.Activity,com.media.dbstarplayer.network.tree.NetworkBookTree,com.media.android.dbstarplayer.network.BookDownloaderServiceConnection) -> a
    void doReadBook(android.app.Activity,com.media.dbstarplayer.network.NetworkBookItem,boolean) -> a
    void tryToDeleteBook(android.app.Activity,com.media.dbstarplayer.network.NetworkBookItem,boolean) -> b
    boolean access$0(android.app.Activity,com.media.dbstarplayer.network.tree.NetworkBookTree,int) -> a
com.media.android.dbstarplayer.network.action.NetworkBookActions$1 -> com.media.android.dbstarplayer.network.a.l:
    boolean val$demo -> a
    com.media.dbstarplayer.network.NetworkBookItem val$book -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.android.dbstarplayer.network.action.NetworkBookActions$NBAction -> com.media.android.dbstarplayer.network.a.m:
    int myId -> d
    java.lang.String myArg -> e
    boolean isEnabled(com.media.dbstarplayer.network.NetworkTree) -> b
    java.lang.String getContextLabel(com.media.dbstarplayer.network.NetworkTree) -> d
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
com.media.android.dbstarplayer.network.action.OpenCatalogAction -> com.media.android.dbstarplayer.network.a.n:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
    void doOpenTree(com.media.dbstarplayer.network.NetworkTree) -> f
    void doLoadCatalog(com.media.dbstarplayer.network.tree.NetworkCatalogTree) -> a
    void access$0(com.media.android.dbstarplayer.network.action.OpenCatalogAction,com.media.dbstarplayer.network.tree.NetworkCatalogTree) -> a
    void access$1(com.media.android.dbstarplayer.network.action.OpenCatalogAction,com.media.dbstarplayer.network.NetworkTree) -> a
com.media.android.dbstarplayer.network.action.OpenCatalogAction$1 -> com.media.android.dbstarplayer.network.a.o:
    com.media.android.dbstarplayer.network.action.OpenCatalogAction this$0 -> a
    com.media.dbstarplayer.network.tree.NetworkCatalogTree val$tree -> b
    void run() -> run
com.media.android.dbstarplayer.network.action.OpenCatalogAction$2 -> com.media.android.dbstarplayer.network.a.p:
    com.media.android.dbstarplayer.network.action.OpenCatalogAction this$0 -> a
    com.media.dbstarplayer.network.tree.NetworkCatalogTree val$tree -> b
    void run() -> run
com.media.android.dbstarplayer.network.action.OpenInBrowserAction -> com.media.android.dbstarplayer.network.a.q:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.OpenInBrowserAction$1 -> com.media.android.dbstarplayer.network.a.r:
    com.media.android.dbstarplayer.network.action.OpenInBrowserAction this$0 -> a
    java.lang.String val$url -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.android.dbstarplayer.network.action.RefreshRootCatalogAction -> com.media.android.dbstarplayer.network.a.s:
    boolean isEnabled(com.media.dbstarplayer.network.NetworkTree) -> b
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.ReloadCatalogAction -> com.media.android.dbstarplayer.network.a.t:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    boolean isEnabled(com.media.dbstarplayer.network.NetworkTree) -> b
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.RemoveCustomCatalogAction -> com.media.android.dbstarplayer.network.a.u:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.RootAction -> com.media.android.dbstarplayer.network.a.v:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
com.media.android.dbstarplayer.network.action.RunSearchAction -> com.media.android.dbstarplayer.network.a.w:
    boolean myFromContextMenu -> d
    com.media.dbstarplayer.network.tree.SearchCatalogTree getSearchTree(com.media.dbstarplayer.tree.FBTree) -> a
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    boolean isEnabled(com.media.dbstarplayer.network.NetworkTree) -> b
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.ShowBookInfoAction -> com.media.android.dbstarplayer.network.a.x:
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
    void showBookInfo(com.media.dbstarplayer.network.NetworkTree) -> f
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void access$1(com.media.android.dbstarplayer.network.action.ShowBookInfoAction,com.media.dbstarplayer.network.NetworkTree) -> a
com.media.android.dbstarplayer.network.action.ShowBookInfoAction$1 -> com.media.android.dbstarplayer.network.a.y:
    com.media.android.dbstarplayer.network.action.ShowBookInfoAction this$0 -> a
    com.media.dbstarplayer.network.NetworkTree val$tree -> b
    void run() -> run
com.media.android.dbstarplayer.network.action.ShowBookInfoAction$1$1 -> com.media.android.dbstarplayer.network.a.z:
    com.media.android.dbstarplayer.network.action.ShowBookInfoAction$1 this$1 -> a
    com.media.dbstarplayer.network.NetworkTree val$tree -> b
    void run() -> run
com.media.android.dbstarplayer.network.action.SignInAction -> com.media.android.dbstarplayer.network.a.aa:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.SignOutAction -> com.media.android.dbstarplayer.network.a.ab:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
    java.lang.String getOptionsLabel(com.media.dbstarplayer.network.NetworkTree) -> e
    java.lang.String getContextLabel(com.media.dbstarplayer.network.NetworkTree) -> d
com.media.android.dbstarplayer.network.action.SignOutAction$1 -> com.media.android.dbstarplayer.network.a.ac:
    com.media.android.dbstarplayer.network.action.SignOutAction this$0 -> a
    com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager val$mgr -> b
    void run() -> run
com.media.android.dbstarplayer.network.action.SignOutAction$1$1 -> com.media.android.dbstarplayer.network.a.ad:
    com.media.android.dbstarplayer.network.action.SignOutAction$1 this$1 -> a
    void run() -> run
com.media.android.dbstarplayer.network.action.SignUpAction -> com.media.android.dbstarplayer.network.a.ae:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
com.media.android.dbstarplayer.network.action.TopupAction -> com.media.android.dbstarplayer.network.a.af:
    boolean isVisible(com.media.dbstarplayer.network.NetworkTree) -> a
    void run(com.media.dbstarplayer.network.NetworkTree) -> c
    java.lang.String getContextLabel(com.media.dbstarplayer.network.NetworkTree) -> d
com.media.android.dbstarplayer.preferences.AnimationSpeedPreference -> com.media.android.dbstarplayer.preferences.a:
    com.media.zlibrary.core.options.ZLIntegerRangeOption myOption -> a
    com.media.zlibrary.core.resources.ZLResource myResource -> b
    android.widget.SeekBar mySlider -> c
    void onBindDialogView(android.view.View) -> onBindDialogView
    void onClick(android.content.DialogInterface,int) -> onClick
    android.widget.SeekBar access$0(com.media.android.dbstarplayer.preferences.AnimationSpeedPreference) -> a
    com.media.zlibrary.core.resources.ZLResource access$1(com.media.android.dbstarplayer.preferences.AnimationSpeedPreference) -> b
com.media.android.dbstarplayer.preferences.AnimationSpeedPreference$SeekBarDrawable -> com.media.android.dbstarplayer.preferences.b:
    android.graphics.drawable.Drawable myBase -> b
    android.graphics.Paint myPaint -> c
    android.graphics.Paint myOutlinePaint -> d
    com.media.android.dbstarplayer.preferences.AnimationSpeedPreference this$0 -> a
    void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    boolean onStateChange(int[]) -> onStateChange
    boolean isStateful() -> isStateful
    boolean onLevelChange(int) -> onLevelChange
    void draw(android.graphics.Canvas) -> draw
    int getOpacity() -> getOpacity
    void setAlpha(int) -> setAlpha
    void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
com.media.android.dbstarplayer.preferences.BatteryLevelToTurnScreenOffPreference -> com.media.android.dbstarplayer.preferences.c:
    com.media.zlibrary.core.options.ZLIntegerRangeOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.BookLanguagePreference -> com.media.android.dbstarplayer.preferences.d:
    com.media.dbstarplayer.book.Book myBook -> a
    java.util.List languages() -> b
    void init() -> a
    void setLanguage(java.lang.String) -> a
com.media.android.dbstarplayer.preferences.BookTitlePreference -> com.media.android.dbstarplayer.preferences.e:
    com.media.dbstarplayer.book.Book myBook -> a
    void setValue(java.lang.String) -> a
com.media.android.dbstarplayer.preferences.ColorPreference -> com.media.android.dbstarplayer.preferences.ColorPreference:
    java.lang.String getTitle() -> a
    com.media.zlibrary.core.util.ZLColor getSavedColor() -> b
    void onBindView(android.view.View) -> onBindView
    void onClick() -> onClick
    java.lang.CharSequence getTitle() -> getTitle
com.media.android.dbstarplayer.preferences.DictionaryPreference -> com.media.android.dbstarplayer.preferences.f:
    com.media.zlibrary.core.options.ZLStringOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.EditBookInfoActivity -> com.media.android.dbstarplayer.preferences.EditBookInfoActivity:
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow myCollection -> c
    boolean myInitialized -> d
    com.media.dbstarplayer.book.Book myBook -> e
    void saveBook() -> a
    void init$14d1abce() -> b
    void onStart() -> onStart
    void onStop() -> onStop
    android.preference.Preference addPreference(android.preference.Preference) -> a
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow access$2(com.media.android.dbstarplayer.preferences.EditBookInfoActivity) -> a
    com.media.dbstarplayer.book.Book access$3(com.media.android.dbstarplayer.preferences.EditBookInfoActivity) -> b
    boolean access$4(com.media.android.dbstarplayer.preferences.EditBookInfoActivity) -> c
    void access$5$640bfac(com.media.android.dbstarplayer.preferences.EditBookInfoActivity) -> d
com.media.android.dbstarplayer.preferences.EditBookInfoActivity$1 -> com.media.android.dbstarplayer.preferences.g:
    com.media.android.dbstarplayer.preferences.EditBookInfoActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.preferences.EditBookInfoActivity$2 -> com.media.android.dbstarplayer.preferences.h:
    com.media.android.dbstarplayer.preferences.EditBookInfoActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.preferences.EncodingPreference -> com.media.android.dbstarplayer.preferences.i:
    com.media.dbstarplayer.book.Book myBook -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.EncodingPreference$1 -> com.media.android.dbstarplayer.preferences.j:
    com.media.android.dbstarplayer.preferences.EncodingPreference this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.media.android.dbstarplayer.preferences.FontOption -> com.media.android.dbstarplayer.preferences.k:
    com.media.zlibrary.core.options.ZLStringOption myOption -> a
    java.lang.String UNCHANGED -> b
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.FontStylePreference -> com.media.android.dbstarplayer.preferences.l:
    com.media.zlibrary.core.options.ZLBooleanOption myBoldOption -> a
    com.media.zlibrary.core.options.ZLBooleanOption myItalicOption -> b
    java.lang.String[] myValues -> d
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.InfoPreference -> com.media.android.dbstarplayer.preferences.m:
com.media.android.dbstarplayer.preferences.LanguagePreference -> com.media.android.dbstarplayer.preferences.n:
    void onDialogClosed(boolean) -> onDialogClosed
    void init() -> a
    void setLanguage(java.lang.String) -> a
com.media.android.dbstarplayer.preferences.PreferenceActivity -> com.media.android.dbstarplayer.preferences.PreferenceActivity:
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow myCollection -> c
    void onStart() -> onStart
    void onStop() -> onStop
    void init$14d1abce() -> b
    android.preference.Preference addPreference(android.preference.Preference) -> a
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow access$2(com.media.android.dbstarplayer.preferences.PreferenceActivity) -> a
com.media.android.dbstarplayer.preferences.PreferenceActivity$1 -> com.media.android.dbstarplayer.preferences.o:
    com.media.android.dbstarplayer.preferences.PreferenceActivity this$0 -> a
    void setValue(java.lang.String) -> a
com.media.android.dbstarplayer.preferences.PreferenceActivity$2 -> com.media.android.dbstarplayer.preferences.p:
    com.media.android.dbstarplayer.preferences.PreferenceActivity this$0 -> a
    void init() -> a
    void setLanguage(java.lang.String) -> a
com.media.android.dbstarplayer.preferences.PreferenceActivity$3 -> com.media.android.dbstarplayer.preferences.q:
    int myLevel -> b
    com.media.android.dbstarplayer.preferences.PreferenceActivity this$0 -> a
    com.media.zlibrary.ui.android.library.ZLAndroidLibrary val$androidLibrary -> c
    void onClick() -> onClick
com.media.android.dbstarplayer.preferences.PreferenceActivity$4 -> com.media.android.dbstarplayer.preferences.r:
    com.media.android.dbstarplayer.preferences.PreferenceActivity this$0 -> a
    com.media.android.dbstarplayer.preferences.ZLPreferenceSet val$bgPreferences -> b
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.PreferenceActivity$5 -> com.media.android.dbstarplayer.preferences.s:
    com.media.android.dbstarplayer.preferences.PreferenceActivity this$0 -> a
    com.media.android.dbstarplayer.preferences.ZLPreferenceSet val$footerPreferences -> d
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.PreferenceActivity$6 -> com.media.android.dbstarplayer.preferences.t:
    com.media.android.dbstarplayer.preferences.PreferenceActivity this$0 -> a
    com.media.zlibrary.core.application.ZLKeyBindings val$keyBindings -> b
    com.media.android.dbstarplayer.preferences.ZLPreferenceSet val$volumeKeysPreferences -> c
    void onClick() -> onClick
com.media.android.dbstarplayer.preferences.PreferenceActivity$7 -> com.media.android.dbstarplayer.preferences.u:
    com.media.android.dbstarplayer.preferences.PreferenceActivity this$0 -> a
    com.media.zlibrary.core.application.ZLKeyBindings val$keyBindings -> b
    void onClick() -> onClick
com.media.android.dbstarplayer.preferences.UrlPreference -> com.media.android.dbstarplayer.preferences.v:
    java.lang.String myUrl -> a
    boolean onPreferenceClick(android.preference.Preference) -> onPreferenceClick
com.media.android.dbstarplayer.preferences.WallpaperPreference -> com.media.android.dbstarplayer.preferences.w:
    com.media.zlibrary.core.options.ZLStringOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.ZLBoolean3Preference -> com.media.android.dbstarplayer.preferences.x:
    com.media.zlibrary.core.options.ZLBoolean3Option myOption -> a
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3 -> b
    void onDialogClosed(boolean) -> onDialogClosed
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3() -> a
com.media.android.dbstarplayer.preferences.ZLBooleanPreference -> com.media.android.dbstarplayer.preferences.y:
    com.media.zlibrary.core.options.ZLBooleanOption myOption -> a
    void onClick() -> onClick
com.media.android.dbstarplayer.preferences.ZLCheckBoxPreference -> com.media.android.dbstarplayer.preferences.ZLCheckBoxPreference:
com.media.android.dbstarplayer.preferences.ZLChoicePreference -> com.media.android.dbstarplayer.preferences.z:
    com.media.zlibrary.core.options.ZLIntegerRangeOption myOption -> a
    boolean $assertionsDisabled -> b
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.ZLColorPreference -> com.media.android.dbstarplayer.preferences.aa:
    com.media.zlibrary.core.options.ZLColorOption myOption -> a
    java.lang.String myTitle -> b
    java.lang.String getTitle() -> a
    com.media.zlibrary.core.util.ZLColor getSavedColor() -> b
com.media.android.dbstarplayer.preferences.ZLEnumPreference -> com.media.android.dbstarplayer.preferences.ab:
    com.media.zlibrary.core.options.ZLEnumOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.ZLIntegerChoicePreference -> com.media.android.dbstarplayer.preferences.ac:
    com.media.zlibrary.core.options.ZLIntegerOption myOption -> b
    int[] myValues -> d
    boolean $assertionsDisabled -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.ZLIntegerRangePreference -> com.media.android.dbstarplayer.preferences.ad:
    com.media.zlibrary.core.options.ZLIntegerRangeOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.ZLPreferenceActivity -> com.media.android.dbstarplayer.preferences.ae:
    java.lang.String SCREEN_KEY -> a
    java.util.HashMap myScreenMap -> c
    android.preference.PreferenceScreen myScreen -> d
    com.media.zlibrary.core.resources.ZLResource Resource -> b
    com.media.android.dbstarplayer.preferences.ZLPreferenceActivity$Screen createPreferenceScreen(java.lang.String) -> a
    android.preference.Preference addPreference(android.preference.Preference) -> a
    void init$14d1abce() -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onNewIntent(android.content.Intent) -> onNewIntent
com.media.android.dbstarplayer.preferences.ZLPreferenceActivity$Screen -> com.media.android.dbstarplayer.preferences.af:
    com.media.zlibrary.core.resources.ZLResource Resource -> a
    android.preference.PreferenceScreen myScreen -> c
    com.media.android.dbstarplayer.preferences.ZLPreferenceActivity this$0 -> b
    com.media.android.dbstarplayer.preferences.ZLPreferenceActivity$Screen createPreferenceScreen(java.lang.String) -> a
    android.preference.Preference addPreference(android.preference.Preference) -> a
    android.preference.Preference addOption(com.media.zlibrary.core.options.ZLBooleanOption,java.lang.String) -> a
    android.preference.Preference addOption(com.media.zlibrary.core.options.ZLStringOption,java.lang.String) -> a
    android.preference.Preference addOption(com.media.zlibrary.core.options.ZLColorOption,java.lang.String) -> a
    android.preference.Preference addOption(com.media.zlibrary.core.options.ZLEnumOption,java.lang.String) -> a
    android.preference.PreferenceScreen access$1(com.media.android.dbstarplayer.preferences.ZLPreferenceActivity$Screen) -> a
com.media.android.dbstarplayer.preferences.ZLPreferenceSet -> com.media.android.dbstarplayer.preferences.ag:
    java.util.LinkedList myPreferences -> a
    void add(android.preference.Preference) -> a
    void setEnabled(boolean) -> a
com.media.android.dbstarplayer.preferences.ZLStringChoicePreference -> com.media.android.dbstarplayer.preferences.ah:
    com.media.zlibrary.core.options.ZLStringOption myOption -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.ZLStringListPreference -> com.media.android.dbstarplayer.preferences.ai:
    com.media.zlibrary.core.resources.ZLResource myResource -> a
    boolean $assertionsDisabled -> c
    void setList(java.lang.String[]) -> a
    void setLists(java.lang.String[],java.lang.String[]) -> a
    boolean setInitialValue(java.lang.String) -> b
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.preferences.ZLStringOptionPreference -> com.media.android.dbstarplayer.preferences.aj:
    com.media.zlibrary.core.options.ZLStringOption myOption -> a
    void setValue(java.lang.String) -> a
com.media.android.dbstarplayer.preferences.ZLStringPreference -> com.media.android.dbstarplayer.preferences.ZLStringPreference:
    java.lang.String myValue -> a
    void setValue(java.lang.String) -> a
    void onDialogClosed(boolean) -> onDialogClosed
com.media.android.dbstarplayer.style.EditStyleActivity -> com.media.android.dbstarplayer.style.EditStyleActivity:
    com.media.zlibrary.core.resources.ZLResource myRootResource -> a
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow myCollection -> b
    com.media.dbstarplayer.book.HighlightingStyle myStyle -> c
    com.media.android.dbstarplayer.style.EditStyleActivity$BgColorPreference myBgColorPreference -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    com.media.zlibrary.core.resources.ZLResource access$0(com.media.android.dbstarplayer.style.EditStyleActivity) -> a
    com.media.dbstarplayer.book.HighlightingStyle access$1(com.media.android.dbstarplayer.style.EditStyleActivity) -> b
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow access$2(com.media.android.dbstarplayer.style.EditStyleActivity) -> c
    com.media.android.dbstarplayer.style.EditStyleActivity$BgColorPreference access$3(com.media.android.dbstarplayer.style.EditStyleActivity) -> d
    void access$4(com.media.android.dbstarplayer.style.EditStyleActivity,com.media.dbstarplayer.book.HighlightingStyle) -> a
    void access$5(com.media.android.dbstarplayer.style.EditStyleActivity,com.media.android.dbstarplayer.style.EditStyleActivity$BgColorPreference) -> a
com.media.android.dbstarplayer.style.EditStyleActivity$1 -> com.media.android.dbstarplayer.style.a:
    com.media.android.dbstarplayer.style.EditStyleActivity this$0 -> a
    android.preference.PreferenceScreen val$screen -> b
    void run() -> run
com.media.android.dbstarplayer.style.EditStyleActivity$BgColorPreference -> com.media.android.dbstarplayer.style.b:
    com.media.android.dbstarplayer.style.EditStyleActivity this$0 -> a
    java.lang.String getTitle() -> a
    com.media.zlibrary.core.util.ZLColor getSavedColor() -> b
com.media.android.dbstarplayer.style.EditStyleActivity$InvisiblePreference -> com.media.android.dbstarplayer.style.c:
    com.media.zlibrary.core.util.ZLColor mySavedBgColor -> b
    com.media.android.dbstarplayer.style.EditStyleActivity this$0 -> a
    void onClick() -> onClick
com.media.android.dbstarplayer.style.EditStyleActivity$NamePreference -> com.media.android.dbstarplayer.style.d:
    com.media.android.dbstarplayer.style.EditStyleActivity this$0 -> a
    void setValue(java.lang.String) -> a
com.media.android.dbstarplayer.style.StyleListActivity -> com.media.android.dbstarplayer.style.StyleListActivity:
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow myCollection -> a
    boolean myExistingBookmark -> b
    com.media.dbstarplayer.book.Bookmark myBookmark -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onDestroy() -> onDestroy
    void onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> onBookEvent
    void onBuildEvent(com.media.dbstarplayer.book.IBookCollection$Status) -> onBuildEvent
    boolean access$0(com.media.android.dbstarplayer.style.StyleListActivity) -> a
    com.media.android.dbstarplayer.libraryService.BookCollectionShadow access$1(com.media.android.dbstarplayer.style.StyleListActivity) -> b
    com.media.dbstarplayer.book.Bookmark access$2(com.media.android.dbstarplayer.style.StyleListActivity) -> c
    void access$3(com.media.android.dbstarplayer.style.StyleListActivity,boolean) -> a
    void access$4(com.media.android.dbstarplayer.style.StyleListActivity,com.media.dbstarplayer.book.Bookmark) -> a
com.media.android.dbstarplayer.style.StyleListActivity$1 -> com.media.android.dbstarplayer.style.e:
    com.media.android.dbstarplayer.style.StyleListActivity this$0 -> a
    void run() -> run
com.media.android.dbstarplayer.style.StyleListActivity$ActionListAdapter -> com.media.android.dbstarplayer.style.f:
    java.util.List myStyles -> b
    com.media.android.dbstarplayer.style.StyleListActivity this$0 -> a
    void setStyleList(java.util.List) -> a
    int getCount() -> getCount
    com.media.dbstarplayer.book.HighlightingStyle getItem(int) -> a
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    java.lang.Object getItem(int) -> getItem
    com.media.android.dbstarplayer.style.StyleListActivity access$1(com.media.android.dbstarplayer.style.StyleListActivity$ActionListAdapter) -> a
com.media.android.dbstarplayer.style.StyleListActivity$ActionListAdapter$1 -> com.media.android.dbstarplayer.style.g:
    com.media.android.dbstarplayer.style.StyleListActivity$ActionListAdapter this$1 -> a
    com.media.dbstarplayer.book.HighlightingStyle val$style -> b
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.style.StyleListActivity$ActionListAdapter$2 -> com.media.android.dbstarplayer.style.h:
    com.media.android.dbstarplayer.style.StyleListActivity$ActionListAdapter this$1 -> a
    com.media.dbstarplayer.book.HighlightingStyle val$style -> b
    void run() -> run
com.media.android.dbstarplayer.tips.TipsActivity -> com.media.android.dbstarplayer.tips.TipsActivity:
    com.media.dbstarplayer.tips.TipsManager myManager -> a
    void onCreate(android.os.Bundle) -> onCreate
    void showTip(android.widget.Button) -> a
    void showText(java.lang.CharSequence) -> a
    com.media.dbstarplayer.tips.TipsManager access$0(com.media.android.dbstarplayer.tips.TipsActivity) -> a
    void access$1(com.media.android.dbstarplayer.tips.TipsActivity,android.widget.Button) -> a
com.media.android.dbstarplayer.tips.TipsActivity$1 -> com.media.android.dbstarplayer.tips.a:
    com.media.android.dbstarplayer.tips.TipsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.tips.TipsActivity$2 -> com.media.android.dbstarplayer.tips.b:
    com.media.android.dbstarplayer.tips.TipsActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.tips.TipsActivity$3 -> com.media.android.dbstarplayer.tips.c:
    com.media.android.dbstarplayer.tips.TipsActivity this$0 -> a
    android.widget.CheckBox val$checkBox -> b
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.tips.TipsActivity$4 -> com.media.android.dbstarplayer.tips.d:
    com.media.android.dbstarplayer.tips.TipsActivity this$0 -> a
    android.widget.Button val$nextTipButton -> b
    void onClick(android.view.View) -> onClick
com.media.android.dbstarplayer.tree.TreeActivity -> com.media.android.dbstarplayer.tree.TreeActivity:
    com.media.dbstarplayer.tree.FBTree myCurrentTree -> a
    com.media.dbstarplayer.tree.FBTree$Key myCurrentKey -> b
    java.util.ArrayList myHistory -> c
    int[] $SWITCH_TABLE$com$media$dbstarplayer$tree$FBTree$Status -> d
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    com.media.android.dbstarplayer.tree.TreeAdapter getListAdapter() -> b
    com.media.dbstarplayer.tree.FBTree getCurrentTree() -> c
    void onNewIntent(android.content.Intent) -> onNewIntent
    com.media.dbstarplayer.tree.FBTree getTreeByKey(com.media.dbstarplayer.tree.FBTree$Key) -> a
    boolean isTreeSelected(com.media.dbstarplayer.tree.FBTree) -> a
    boolean isTreeInvisible(com.media.dbstarplayer.tree.FBTree) -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void openTree(com.media.dbstarplayer.tree.FBTree) -> c
    void onCurrentTreeChanged() -> a
    void openTree(com.media.dbstarplayer.tree.FBTree,com.media.dbstarplayer.tree.FBTree,boolean) -> a
    void init(android.content.Intent) -> a
    void openTreeInternal(com.media.dbstarplayer.tree.FBTree,com.media.dbstarplayer.tree.FBTree,boolean) -> b
    android.widget.ListAdapter getListAdapter() -> getListAdapter
    void access$1(com.media.android.dbstarplayer.tree.TreeActivity,com.media.dbstarplayer.tree.FBTree,com.media.dbstarplayer.tree.FBTree,boolean) -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$tree$FBTree$Status() -> d
com.media.android.dbstarplayer.tree.TreeActivity$1 -> com.media.android.dbstarplayer.tree.a:
    com.media.android.dbstarplayer.tree.TreeActivity this$0 -> a
    android.content.Intent val$intent -> b
    void run() -> run
com.media.android.dbstarplayer.tree.TreeActivity$2 -> com.media.android.dbstarplayer.tree.b:
    com.media.android.dbstarplayer.tree.TreeActivity this$0 -> a
    com.media.dbstarplayer.tree.FBTree val$tree -> b
    void run() -> run
com.media.android.dbstarplayer.tree.TreeActivity$3 -> com.media.android.dbstarplayer.tree.c:
    com.media.android.dbstarplayer.tree.TreeActivity this$0 -> a
    com.media.dbstarplayer.tree.FBTree val$tree -> b
    com.media.dbstarplayer.tree.FBTree val$treeToSelect -> c
    boolean val$storeInHistory -> d
    void run() -> run
com.media.android.dbstarplayer.tree.TreeActivity$4 -> com.media.android.dbstarplayer.tree.d:
    com.media.android.dbstarplayer.tree.TreeActivity this$0 -> a
    int val$index -> b
    void run() -> run
com.media.android.dbstarplayer.tree.TreeAdapter -> com.media.android.dbstarplayer.tree.e:
    com.media.android.dbstarplayer.tree.TreeActivity myActivity -> a
    java.util.List myItems -> b
    com.media.android.dbstarplayer.tree.TreeActivity getActivity() -> a
    void remove(com.media.dbstarplayer.tree.FBTree) -> a
    void replaceAll(java.util.Collection) -> a
    int getCount() -> getCount
    com.media.dbstarplayer.tree.FBTree getItem(int) -> a
    long getItemId(int) -> getItemId
    int getIndex(com.media.dbstarplayer.tree.FBTree) -> b
    com.media.dbstarplayer.tree.FBTree getFirstSelectedItem() -> b
    java.lang.Object getItem(int) -> getItem
    java.util.List access$1(com.media.android.dbstarplayer.tree.TreeAdapter) -> a
com.media.android.dbstarplayer.tree.TreeAdapter$1 -> com.media.android.dbstarplayer.tree.f:
    com.media.android.dbstarplayer.tree.TreeAdapter this$0 -> a
    com.media.dbstarplayer.tree.FBTree val$item -> b
    void run() -> run
com.media.android.dbstarplayer.tree.TreeAdapter$4 -> com.media.android.dbstarplayer.tree.g:
    com.media.android.dbstarplayer.tree.TreeAdapter this$0 -> a
    boolean val$force -> b
    java.util.Collection val$items -> c
    void run() -> run
com.media.android.util.PackageUtil -> com.media.android.a.a:
    boolean canBeStarted(android.content.Context,android.content.Intent,boolean) -> a
    boolean installFromMarket(android.app.Activity,java.lang.String) -> a
    void runInstallPluginDialog(android.app.Activity,java.util.Map,java.lang.Runnable) -> a
com.media.android.util.PackageUtil$1 -> com.media.android.a.b:
    android.app.Activity val$activity -> a
    java.lang.String val$plugin -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.android.util.PackageUtil$2 -> com.media.android.a.c:
    com.media.zlibrary.core.options.ZLBooleanOption val$doNotInstallOption -> a
    android.widget.CheckBox val$checkBox -> b
    java.lang.Runnable val$postRunnable -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.android.util.SQLiteUtil -> com.media.android.a.d:
    void bindString(android.database.sqlite.SQLiteStatement,int,java.lang.String) -> a
    void bindDate(android.database.sqlite.SQLiteStatement,int,java.util.Date) -> a
    java.util.Date getDate(android.database.Cursor,int) -> a
com.media.android.util.UIUtil -> com.media.android.a.e:
    java.lang.Object ourMonitor -> a
    android.app.ProgressDialog ourProgress -> b
    java.util.Queue ourTaskQueue -> c
    android.os.Handler ourProgressHandler -> d
    boolean init() -> f
    void wait(java.lang.String,java.lang.Runnable,android.content.Context) -> a
    void runWithMessage(android.app.Activity,java.lang.String,java.lang.Runnable,java.lang.Runnable,boolean) -> a
    void showMessageText(android.content.Context,java.lang.String) -> a
    void showErrorMessage(android.content.Context,java.lang.String) -> b
    void showErrorMessage(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.Object access$0() -> a
    java.util.Queue access$1() -> b
    android.app.ProgressDialog access$2() -> c
    void access$3$7db20201() -> d
    android.os.Handler access$4() -> e
com.media.android.util.UIUtil$1 -> com.media.android.a.f:
    void handleMessage(android.os.Message) -> handleMessage
com.media.android.util.UIUtil$2 -> com.media.android.a.g:
    android.app.ProgressDialog val$currentProgress -> a
    void run() -> run
com.media.android.util.UIUtil$3 -> com.media.android.a.h:
    android.app.Activity val$activity -> a
    java.lang.String val$message -> b
    boolean val$minPriority -> c
    java.lang.Runnable val$action -> d
    java.lang.Runnable val$postAction -> e
    void run() -> run
com.media.android.util.UIUtil$3$1 -> com.media.android.a.i:
    com.media.android.util.UIUtil$3 this$1 -> a
    java.lang.Runnable val$action -> b
    android.app.Activity val$activity -> c
    android.app.ProgressDialog val$progress -> d
    java.lang.Runnable val$postAction -> e
    void run() -> run
com.media.android.util.UIUtil$3$1$1 -> com.media.android.a.j:
    com.media.android.util.UIUtil$3$1 this$2 -> a
    android.app.ProgressDialog val$progress -> b
    java.lang.Runnable val$postAction -> c
    void run() -> run
com.media.android.util.UIUtil$Pair -> com.media.android.a.k:
    java.lang.Runnable Action -> a
    java.lang.String Message -> b
com.media.dbstarplayer.Paths -> com.media.dbstarplayer.Paths:
    java.lang.String cardDirectory() -> cardDirectory
    com.media.zlibrary.core.options.ZLStringOption BooksDirectoryOption() -> BooksDirectoryOption
    com.media.zlibrary.core.options.ZLStringOption FontsDirectoryOption() -> FontsDirectoryOption
    com.media.zlibrary.core.options.ZLStringOption WallpapersDirectoryOption() -> WallpapersDirectoryOption
    java.lang.String mainBookDirectory() -> mainBookDirectory
    java.lang.String cacheDirectory() -> cacheDirectory
    java.lang.String networkCacheDirectory() -> networkCacheDirectory
    java.lang.String systemShareDirectory() -> systemShareDirectory
com.media.dbstarplayer.book.AbstractBookCollection -> com.media.dbstarplayer.book.AbstractBookCollection:
    java.util.List myListeners -> myListeners
    void addListener(com.media.dbstarplayer.book.IBookCollection$Listener) -> addListener
    void removeListener(com.media.dbstarplayer.book.IBookCollection$Listener) -> removeListener
    boolean hasListeners() -> hasListeners
    void fireBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> fireBookEvent
    void fireBuildEvent(com.media.dbstarplayer.book.IBookCollection$Status) -> fireBuildEvent
com.media.dbstarplayer.book.AbstractSerializer -> com.media.dbstarplayer.book.AbstractSerializer:
    java.lang.String serialize(com.media.dbstarplayer.book.BookQuery) -> serialize
    com.media.dbstarplayer.book.BookQuery deserializeBookQuery(java.lang.String) -> deserializeBookQuery
    java.lang.String serialize(com.media.dbstarplayer.book.BookmarkQuery) -> serialize
    com.media.dbstarplayer.book.BookmarkQuery deserializeBookmarkQuery(java.lang.String) -> deserializeBookmarkQuery
    java.lang.String serialize(com.media.dbstarplayer.book.Book) -> serialize
    com.media.dbstarplayer.book.Book deserializeBook(java.lang.String) -> deserializeBook
    java.lang.String serialize(com.media.dbstarplayer.book.Bookmark) -> serialize
    com.media.dbstarplayer.book.Bookmark deserializeBookmark(java.lang.String) -> deserializeBookmark
    java.lang.String serialize(com.media.dbstarplayer.book.HighlightingStyle) -> serialize
    com.media.dbstarplayer.book.HighlightingStyle deserializeStyle(java.lang.String) -> deserializeStyle
com.media.dbstarplayer.book.Author -> com.media.dbstarplayer.book.Author:
    com.media.dbstarplayer.book.Author NULL -> NULL
    java.lang.String DisplayName -> DisplayName
    java.lang.String SortKey -> SortKey
    int hashCode(com.media.dbstarplayer.book.Author) -> hashCode
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(com.media.dbstarplayer.book.Author) -> compareTo
    int compareTo(java.lang.Object) -> compareTo
com.media.dbstarplayer.book.Book -> com.media.dbstarplayer.book.Book:
    java.lang.String FAVORITE_LABEL -> FAVORITE_LABEL
    java.lang.String READ_LABEL -> READ_LABEL
    com.media.zlibrary.core.filesystem.ZLFile File -> File
    long myId -> myId
    java.lang.String myEncoding -> myEncoding
    java.lang.String myLanguage -> myLanguage
    java.util.List myAuthors -> myAuthors
    java.util.List myTags -> myTags
    java.util.List myLabels -> myLabels
    com.media.dbstarplayer.book.SeriesInfo mySeriesInfo -> mySeriesInfo
    java.util.List myUids -> myUids
    boolean HasBookmark -> HasBookmark
    boolean myIsSaved -> myIsSaved
    java.lang.ref.WeakReference NULL_IMAGE -> NULL_IMAGE
    java.lang.ref.WeakReference myCover -> myCover
    java.util.Set myVisitedHyperlinks -> myVisitedHyperlinks
    void updateFrom(com.media.dbstarplayer.book.Book) -> updateFrom
    void reloadInfoFromFile() -> reloadInfoFromFile
    com.media.dbstarplayer.formats.FormatPlugin getPlugin(com.media.zlibrary.core.filesystem.ZLFile) -> getPlugin
    com.media.dbstarplayer.formats.FormatPlugin getPlugin() -> getPlugin
    void readMetaInfo() -> readMetaInfo
    void readMetaInfo(com.media.dbstarplayer.formats.FormatPlugin) -> readMetaInfo
    void loadLists(com.media.dbstarplayer.book.BooksDatabase) -> loadLists
    java.util.List authors() -> authors
    void addAuthorWithNoCheck(com.media.dbstarplayer.book.Author) -> addAuthorWithNoCheck
    void removeAllAuthors() -> removeAllAuthors
    void addAuthor(com.media.dbstarplayer.book.Author) -> addAuthor
    void addAuthor(java.lang.String) -> addAuthor
    void addAuthor(java.lang.String,java.lang.String) -> addAuthor
    long getId() -> getId
    void setTitle(java.lang.String) -> setTitle
    com.media.dbstarplayer.book.SeriesInfo getSeriesInfo() -> getSeriesInfo
    void setSeriesInfoWithNoCheck(java.lang.String,java.lang.String) -> setSeriesInfoWithNoCheck
    void setSeriesInfo(java.lang.String,java.lang.String) -> setSeriesInfo
    void setSeriesInfo(java.lang.String,java.math.BigDecimal) -> setSeriesInfo
    java.lang.String getLanguage() -> getLanguage
    void setLanguage(java.lang.String) -> setLanguage
    java.lang.String getEncoding() -> getEncoding
    java.lang.String getEncodingNoDetection() -> getEncodingNoDetection
    void setEncoding(java.lang.String) -> setEncoding
    java.util.List tags() -> tags
    void addTagWithNoCheck(com.media.dbstarplayer.book.Tag) -> addTagWithNoCheck
    void removeAllTags() -> removeAllTags
    void addTag(com.media.dbstarplayer.book.Tag) -> addTag
    void addTag(java.lang.String) -> addTag
    java.util.List labels() -> labels
    void addLabelWithNoCheck(java.lang.String) -> addLabelWithNoCheck
    void addLabel(java.lang.String) -> addLabel
    void removeLabel(java.lang.String) -> removeLabel
    java.util.List uids() -> uids
    void addUid(java.lang.String,java.lang.String) -> addUid
    void addUidWithNoCheck(com.media.dbstarplayer.book.UID) -> addUidWithNoCheck
    void addUid(com.media.dbstarplayer.book.UID) -> addUid
    boolean matchesUid(com.media.dbstarplayer.book.UID) -> matchesUid
    boolean matches(java.lang.String) -> matches
    boolean save(com.media.dbstarplayer.book.BooksDatabase,boolean) -> save
    void initHyperlinkSet(com.media.dbstarplayer.book.BooksDatabase) -> initHyperlinkSet
    boolean isHyperlinkVisited(com.media.dbstarplayer.book.BooksDatabase,java.lang.String) -> isHyperlinkVisited
    void markHyperlinkAsVisited(com.media.dbstarplayer.book.BooksDatabase,java.lang.String) -> markHyperlinkAsVisited
    com.media.zlibrary.core.image.ZLImage getCover() -> getCover
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    long access$0(com.media.dbstarplayer.book.Book) -> access$0
    java.lang.String access$1(com.media.dbstarplayer.book.Book) -> access$1
    java.lang.String access$2(com.media.dbstarplayer.book.Book) -> access$2
    void access$3(com.media.dbstarplayer.book.Book,long) -> access$3
    java.util.Set access$4(com.media.dbstarplayer.book.Book) -> access$4
    java.util.List access$5(com.media.dbstarplayer.book.Book) -> access$5
    com.media.dbstarplayer.book.SeriesInfo access$6(com.media.dbstarplayer.book.Book) -> access$6
com.media.dbstarplayer.book.Book$1 -> com.media.dbstarplayer.book.Book$1:
    com.media.dbstarplayer.book.Book this$0 -> this$0
    com.media.dbstarplayer.book.BooksDatabase val$database -> val$database
    void run() -> run
com.media.dbstarplayer.book.BookCollection -> com.media.dbstarplayer.book.BookCollection:
    com.media.dbstarplayer.book.BooksDatabase myDatabase -> myDatabase
    java.util.List BookDirectories -> BookDirectories
    java.util.Map myBooksByFile -> myBooksByFile
    java.util.Map myBooksById -> myBooksById
    java.util.List myFilesToRescan -> myFilesToRescan
    com.media.dbstarplayer.book.IBookCollection$Status myStatus -> myStatus
    java.util.Map myStyles -> myStyles
    int size() -> size
    com.media.dbstarplayer.book.Book getBookByFile(com.media.zlibrary.core.filesystem.ZLFile) -> getBookByFile
    com.media.dbstarplayer.book.Book getBookById(long) -> getBookById
    com.media.dbstarplayer.book.Book getBookByUid(com.media.dbstarplayer.book.UID) -> getBookByUid
    void addBook(com.media.dbstarplayer.book.Book,boolean) -> addBook
    boolean saveBook(com.media.dbstarplayer.book.Book,boolean) -> saveBook
    void removeBook(com.media.dbstarplayer.book.Book,boolean) -> removeBook
    com.media.dbstarplayer.book.IBookCollection$Status status() -> status
    java.util.List books(com.media.dbstarplayer.book.BookQuery) -> books
    boolean hasBooks(com.media.dbstarplayer.book.Filter) -> hasBooks
    java.util.List titles(com.media.dbstarplayer.book.BookQuery) -> titles
    java.util.List recentBooks() -> recentBooks
    java.util.List books(java.util.List) -> books
    java.util.List authors() -> authors
    java.util.List tags() -> tags
    java.util.List labels() -> labels
    boolean hasSeries() -> hasSeries
    java.util.List series() -> series
    java.util.List firstTitleLetters() -> firstTitleLetters
    com.media.dbstarplayer.book.Book getRecentBook(int) -> getRecentBook
    void addBookToRecentList(com.media.dbstarplayer.book.Book) -> addBookToRecentList
    void setStatus(com.media.dbstarplayer.book.IBookCollection$Status) -> setStatus
    void startBuild() -> startBuild
    void rescan(java.lang.String) -> rescan
    void processFilesQueue() -> processFilesQueue
    void build() -> build
    java.util.List collectPhysicalFiles(java.util.List) -> collectPhysicalFiles
    void collectBooks(com.media.zlibrary.core.filesystem.ZLFile,com.media.dbstarplayer.book.FileInfoSet,java.util.Map,java.util.Map,java.util.Set,boolean) -> collectBooks
    java.util.List bookmarks(com.media.dbstarplayer.book.BookmarkQuery) -> bookmarks
    void saveBookmark(com.media.dbstarplayer.book.Bookmark) -> saveBookmark
    void deleteBookmark(com.media.dbstarplayer.book.Bookmark) -> deleteBookmark
    com.media.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    void storePosition(long,com.media.zlibrary.text.view.ZLTextPosition) -> storePosition
    boolean isHyperlinkVisited(com.media.dbstarplayer.book.Book,java.lang.String) -> isHyperlinkVisited
    void markHyperlinkAsVisited(com.media.dbstarplayer.book.Book,java.lang.String) -> markHyperlinkAsVisited
    void initStylesTable() -> initStylesTable
    com.media.dbstarplayer.book.HighlightingStyle getHighlightingStyle(int) -> getHighlightingStyle
    java.util.List highlightingStyles() -> highlightingStyles
    void saveHighlightingStyle(com.media.dbstarplayer.book.HighlightingStyle) -> saveHighlightingStyle
    java.util.List access$0(com.media.dbstarplayer.book.BookCollection) -> access$0
    void access$1(com.media.dbstarplayer.book.BookCollection) -> access$1
    void access$2(com.media.dbstarplayer.book.BookCollection) -> access$2
    void access$3(com.media.dbstarplayer.book.BookCollection,com.media.dbstarplayer.book.IBookCollection$Status) -> access$3
com.media.dbstarplayer.book.BookCollection$1 -> com.media.dbstarplayer.book.BookCollection$1:
    com.media.dbstarplayer.book.BookCollection this$0 -> this$0
    void run() -> run
com.media.dbstarplayer.book.BookCollection$2 -> com.media.dbstarplayer.book.BookCollection$2:
    com.media.dbstarplayer.book.BookCollection this$0 -> this$0
    java.util.Set val$newBooks -> val$newBooks
    void run() -> run
com.media.dbstarplayer.book.BookEvent -> com.media.dbstarplayer.book.BookEvent:
    com.media.dbstarplayer.book.BookEvent Added -> Added
    com.media.dbstarplayer.book.BookEvent Updated -> Updated
    com.media.dbstarplayer.book.BookEvent Removed -> Removed
    com.media.dbstarplayer.book.BookEvent BookmarksUpdated -> BookmarksUpdated
    com.media.dbstarplayer.book.BookEvent BookmarkStyleChanged -> BookmarkStyleChanged
    com.media.dbstarplayer.book.BookEvent[] ENUM$VALUES -> ENUM$VALUES
    com.media.dbstarplayer.book.BookEvent[] values() -> values
    com.media.dbstarplayer.book.BookEvent valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.book.BookQuery -> com.media.dbstarplayer.book.BookQuery:
    com.media.dbstarplayer.book.Filter Filter -> Filter
    int Limit -> Limit
    int Page -> Page
    com.media.dbstarplayer.book.BookQuery next() -> next
com.media.dbstarplayer.book.BookUtil -> com.media.dbstarplayer.book.BookUtil:
    com.media.zlibrary.core.image.ZLImage getCover(com.media.dbstarplayer.book.Book) -> getCover
    java.lang.String getAnnotation(com.media.dbstarplayer.book.Book) -> getAnnotation
    com.media.zlibrary.core.filesystem.ZLResourceFile getHelpFile() -> getHelpFile
    boolean canRemoveBookFile(com.media.dbstarplayer.book.Book) -> canRemoveBookFile
    com.media.dbstarplayer.book.UID createSHA256Uid(com.media.zlibrary.core.filesystem.ZLFile) -> createSHA256Uid
com.media.dbstarplayer.book.Bookmark -> com.media.dbstarplayer.book.Bookmark:
    int MAX_LENGTH -> MAX_LENGTH
    long myId -> myId
    long myBookId -> myBookId
    java.lang.String myBookTitle -> myBookTitle
    java.lang.String myText -> myText
    java.util.Date myCreationDate -> myCreationDate
    java.util.Date myModificationDate -> myModificationDate
    java.util.Date myAccessDate -> myAccessDate
    int myAccessCount -> myAccessCount
    java.util.Date myLatestDate -> myLatestDate
    com.media.zlibrary.text.view.ZLTextFixedPosition myEnd -> myEnd
    int myLength -> myLength
    int myStyleId -> myStyleId
    java.lang.String ModelId -> ModelId
    boolean IsVisible -> IsVisible
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$Bookmark$DateType -> $SWITCH_TABLE$com$media$dbstarplayer$book$Bookmark$DateType
    com.media.dbstarplayer.book.Bookmark createBookmark(com.media.dbstarplayer.book.Book,java.lang.String,com.media.zlibrary.text.view.ZLTextWordCursor,int,boolean) -> createBookmark
    void findEnd(com.media.zlibrary.text.view.ZLTextView) -> findEnd
    long getId() -> getId
    long getBookId() -> getBookId
    int getStyleId() -> getStyleId
    void setStyleId(int) -> setStyleId
    java.lang.String getText() -> getText
    java.lang.String getBookTitle() -> getBookTitle
    java.util.Date getDate(com.media.dbstarplayer.book.Bookmark$DateType) -> getDate
    int getAccessCount() -> getAccessCount
    com.media.zlibrary.text.view.ZLTextPosition getEnd() -> getEnd
    int getLength() -> getLength
    void setText(java.lang.String) -> setText
    void markAsAccessed() -> markAsAccessed
    void setId(long) -> setId
    void update(com.media.dbstarplayer.book.Bookmark) -> update
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$Bookmark$DateType() -> $SWITCH_TABLE$com$media$dbstarplayer$book$Bookmark$DateType
com.media.dbstarplayer.book.Bookmark$Buffer -> com.media.dbstarplayer.book.Bookmark$Buffer:
    java.lang.StringBuilder Builder -> Builder
    com.media.zlibrary.text.view.ZLTextWordCursor Cursor -> Cursor
    boolean isEmpty() -> isEmpty
    void append(com.media.dbstarplayer.book.Bookmark$Buffer) -> append
    void append(java.lang.CharSequence) -> append
com.media.dbstarplayer.book.Bookmark$ByTimeComparator -> com.media.dbstarplayer.book.Bookmark$ByTimeComparator:
    int compare(com.media.dbstarplayer.book.Bookmark,com.media.dbstarplayer.book.Bookmark) -> compare
    int compare(java.lang.Object,java.lang.Object) -> compare
com.media.dbstarplayer.book.Bookmark$DateType -> com.media.dbstarplayer.book.Bookmark$DateType:
    com.media.dbstarplayer.book.Bookmark$DateType Creation -> Creation
    com.media.dbstarplayer.book.Bookmark$DateType Modification -> Modification
    com.media.dbstarplayer.book.Bookmark$DateType Access -> Access
    com.media.dbstarplayer.book.Bookmark$DateType Latest -> Latest
    com.media.dbstarplayer.book.Bookmark$DateType[] ENUM$VALUES -> ENUM$VALUES
    com.media.dbstarplayer.book.Bookmark$DateType[] values() -> values
    com.media.dbstarplayer.book.Bookmark$DateType valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.book.BookmarkQuery -> com.media.dbstarplayer.book.BookmarkQuery:
    com.media.dbstarplayer.book.Book Book -> Book
    boolean Visible -> Visible
    int Limit -> Limit
    int Page -> Page
    com.media.dbstarplayer.book.BookmarkQuery next() -> next
com.media.dbstarplayer.book.BooksDatabase -> com.media.dbstarplayer.book.BooksDatabase:
    com.media.dbstarplayer.book.Book createBook(long,long,java.lang.String,java.lang.String,java.lang.String) -> createBook
    com.media.dbstarplayer.book.Book createBook(long,com.media.zlibrary.core.filesystem.ZLFile,java.lang.String,java.lang.String,java.lang.String) -> createBook
    void addAuthor(com.media.dbstarplayer.book.Book,com.media.dbstarplayer.book.Author) -> addAuthor
    void addTag(com.media.dbstarplayer.book.Book,com.media.dbstarplayer.book.Tag) -> addTag
    void setSeriesInfo(com.media.dbstarplayer.book.Book,java.lang.String,java.lang.String) -> setSeriesInfo
    void executeAsTransaction(java.lang.Runnable) -> executeAsTransaction
    java.util.Map loadBooks(com.media.dbstarplayer.book.FileInfoSet,boolean) -> loadBooks
    void setExistingFlag(java.util.Collection,boolean) -> setExistingFlag
    com.media.dbstarplayer.book.Book loadBook(long) -> loadBook
    com.media.dbstarplayer.book.Book loadBookByFile(long,com.media.zlibrary.core.filesystem.ZLFile) -> loadBookByFile
    java.util.List listAuthors(long) -> listAuthors
    java.util.List listTags(long) -> listTags
    java.util.List listLabels(long) -> listLabels
    com.media.dbstarplayer.book.SeriesInfo getSeriesInfo(long) -> getSeriesInfo
    java.util.List listUids(long) -> listUids
    boolean hasVisibleBookmark(long) -> hasVisibleBookmark
    java.lang.Long bookIdByUid(com.media.dbstarplayer.book.UID) -> bookIdByUid
    void updateBookInfo(long,long,java.lang.String,java.lang.String,java.lang.String) -> updateBookInfo
    long insertBookInfo(com.media.zlibrary.core.filesystem.ZLFile,java.lang.String,java.lang.String,java.lang.String) -> insertBookInfo
    void deleteAllBookAuthors(long) -> deleteAllBookAuthors
    void saveBookAuthorInfo(long,long,com.media.dbstarplayer.book.Author) -> saveBookAuthorInfo
    void deleteAllBookTags(long) -> deleteAllBookTags
    void saveBookTagInfo(long,com.media.dbstarplayer.book.Tag) -> saveBookTagInfo
    void saveBookSeriesInfo(long,com.media.dbstarplayer.book.SeriesInfo) -> saveBookSeriesInfo
    void deleteAllBookUids(long) -> deleteAllBookUids
    void saveBookUid(long,com.media.dbstarplayer.book.UID) -> saveBookUid
    com.media.dbstarplayer.book.FileInfo createFileInfo(long,java.lang.String,com.media.dbstarplayer.book.FileInfo) -> createFileInfo
    java.util.Collection loadFileInfos() -> loadFileInfos
    java.util.Collection loadFileInfos(com.media.zlibrary.core.filesystem.ZLFile) -> loadFileInfos
    java.util.Collection loadFileInfos(long) -> loadFileInfos
    void removeFileInfo(long) -> removeFileInfo
    void saveFileInfo(com.media.dbstarplayer.book.FileInfo) -> saveFileInfo
    java.util.List loadRecentBookIds() -> loadRecentBookIds
    void saveRecentBookIds(java.util.List) -> saveRecentBookIds
    void setLabel(long,java.lang.String) -> setLabel
    void removeLabel(long,java.lang.String) -> removeLabel
    com.media.dbstarplayer.book.Bookmark createBookmark(long,long,java.lang.String,java.lang.String,java.util.Date,java.util.Date,java.util.Date,int,java.lang.String,int,int,int,int,int,int,boolean,int) -> createBookmark
    java.util.List loadBookmarks(com.media.dbstarplayer.book.BookmarkQuery) -> loadBookmarks
    long saveBookmark(com.media.dbstarplayer.book.Bookmark) -> saveBookmark
    void deleteBookmark(com.media.dbstarplayer.book.Bookmark) -> deleteBookmark
    com.media.dbstarplayer.book.HighlightingStyle createStyle(int,java.lang.String,int) -> createStyle
    java.util.List loadStyles() -> loadStyles
    void saveStyle(com.media.dbstarplayer.book.HighlightingStyle) -> saveStyle
    com.media.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    void storePosition(long,com.media.zlibrary.text.view.ZLTextPosition) -> storePosition
    java.util.Collection loadVisitedHyperlinks(long) -> loadVisitedHyperlinks
    void addVisitedHyperlink(long,java.lang.String) -> addVisitedHyperlink
com.media.dbstarplayer.book.FileInfo -> com.media.dbstarplayer.book.FileInfo:
    java.lang.String Name -> Name
    long Id -> Id
    long FileSize -> FileSize
com.media.dbstarplayer.book.FileInfoSet -> com.media.dbstarplayer.book.FileInfoSet:
    java.util.HashMap myInfosByFile -> myInfosByFile
    java.util.HashMap myFilesByInfo -> myFilesByInfo
    java.util.HashMap myInfosByPair -> myInfosByPair
    java.util.HashMap myInfosById -> myInfosById
    java.util.LinkedHashSet myInfosToSave -> myInfosToSave
    java.util.LinkedHashSet myInfosToRemove -> myInfosToRemove
    com.media.dbstarplayer.book.BooksDatabase myDatabase -> myDatabase
    void load(java.util.Collection) -> load
    void save() -> save
    boolean check(com.media.zlibrary.core.filesystem.ZLPhysicalFile,boolean) -> check
    java.util.List archiveEntries(com.media.zlibrary.core.filesystem.ZLFile) -> archiveEntries
    com.media.dbstarplayer.book.FileInfo get(java.lang.String,com.media.dbstarplayer.book.FileInfo) -> get
    com.media.dbstarplayer.book.FileInfo get(com.media.zlibrary.core.filesystem.ZLFile) -> get
    long getId(com.media.zlibrary.core.filesystem.ZLFile) -> getId
    com.media.zlibrary.core.filesystem.ZLFile getFile(com.media.dbstarplayer.book.FileInfo) -> getFile
    com.media.zlibrary.core.filesystem.ZLFile getFile(long) -> getFile
    void removeChildren(com.media.dbstarplayer.book.FileInfo) -> removeChildren
    void addChildren(com.media.zlibrary.core.filesystem.ZLFile) -> addChildren
    java.util.LinkedHashSet access$0(com.media.dbstarplayer.book.FileInfoSet) -> access$0
    com.media.dbstarplayer.book.BooksDatabase access$1(com.media.dbstarplayer.book.FileInfoSet) -> access$1
    java.util.HashMap access$2(com.media.dbstarplayer.book.FileInfoSet) -> access$2
    java.util.LinkedHashSet access$3(com.media.dbstarplayer.book.FileInfoSet) -> access$3
com.media.dbstarplayer.book.FileInfoSet$1 -> com.media.dbstarplayer.book.FileInfoSet$1:
    com.media.dbstarplayer.book.FileInfoSet this$0 -> this$0
    void run() -> run
com.media.dbstarplayer.book.FileInfoSet$Pair -> com.media.dbstarplayer.book.FileInfoSet$Pair:
    java.lang.String myName -> myName
    com.media.dbstarplayer.book.FileInfo myParent -> myParent
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.media.dbstarplayer.book.Filter -> com.media.dbstarplayer.book.Filter:
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$And -> com.media.dbstarplayer.book.Filter$And:
    com.media.dbstarplayer.book.Filter First -> First
    com.media.dbstarplayer.book.Filter Second -> Second
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$ByAuthor -> com.media.dbstarplayer.book.Filter$ByAuthor:
    com.media.dbstarplayer.book.Author Author -> Author
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$ByLabel -> com.media.dbstarplayer.book.Filter$ByLabel:
    java.lang.String Label -> Label
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$ByPattern -> com.media.dbstarplayer.book.Filter$ByPattern:
    java.lang.String Pattern -> Pattern
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$BySeries -> com.media.dbstarplayer.book.Filter$BySeries:
    com.media.dbstarplayer.book.Series Series -> Series
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$ByTag -> com.media.dbstarplayer.book.Filter$ByTag:
    com.media.dbstarplayer.book.Tag Tag -> Tag
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$ByTitlePrefix -> com.media.dbstarplayer.book.Filter$ByTitlePrefix:
    java.lang.String Prefix -> Prefix
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$Empty -> com.media.dbstarplayer.book.Filter$Empty:
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$HasBookmark -> com.media.dbstarplayer.book.Filter$HasBookmark:
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.Filter$Or -> com.media.dbstarplayer.book.Filter$Or:
    com.media.dbstarplayer.book.Filter First -> First
    com.media.dbstarplayer.book.Filter Second -> Second
    boolean matches(com.media.dbstarplayer.book.Book) -> matches
com.media.dbstarplayer.book.HighlightingStyle -> com.media.dbstarplayer.book.HighlightingStyle:
    int Id -> Id
    java.lang.String myName -> myName
    com.media.zlibrary.core.util.ZLColor myBackgroundColor -> myBackgroundColor
    java.lang.String defaultName() -> defaultName
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    com.media.zlibrary.core.util.ZLColor getBackgroundColor() -> getBackgroundColor
    void setBackgroundColor(com.media.zlibrary.core.util.ZLColor) -> setBackgroundColor
com.media.dbstarplayer.book.IBookCollection -> com.media.dbstarplayer.book.IBookCollection:
    void addListener(com.media.dbstarplayer.book.IBookCollection$Listener) -> addListener
    void removeListener(com.media.dbstarplayer.book.IBookCollection$Listener) -> removeListener
    com.media.dbstarplayer.book.IBookCollection$Status status() -> status
    int size() -> size
    java.util.List books(com.media.dbstarplayer.book.BookQuery) -> books
    boolean hasBooks(com.media.dbstarplayer.book.Filter) -> hasBooks
    java.util.List titles(com.media.dbstarplayer.book.BookQuery) -> titles
    java.util.List recentBooks() -> recentBooks
    com.media.dbstarplayer.book.Book getRecentBook(int) -> getRecentBook
    void addBookToRecentList(com.media.dbstarplayer.book.Book) -> addBookToRecentList
    com.media.dbstarplayer.book.Book getBookByFile(com.media.zlibrary.core.filesystem.ZLFile) -> getBookByFile
    com.media.dbstarplayer.book.Book getBookById(long) -> getBookById
    com.media.dbstarplayer.book.Book getBookByUid(com.media.dbstarplayer.book.UID) -> getBookByUid
    java.util.List labels() -> labels
    java.util.List authors() -> authors
    boolean hasSeries() -> hasSeries
    java.util.List series() -> series
    java.util.List tags() -> tags
    java.util.List firstTitleLetters() -> firstTitleLetters
    boolean saveBook(com.media.dbstarplayer.book.Book,boolean) -> saveBook
    void removeBook(com.media.dbstarplayer.book.Book,boolean) -> removeBook
    com.media.zlibrary.text.view.ZLTextPosition getStoredPosition(long) -> getStoredPosition
    void storePosition(long,com.media.zlibrary.text.view.ZLTextPosition) -> storePosition
    boolean isHyperlinkVisited(com.media.dbstarplayer.book.Book,java.lang.String) -> isHyperlinkVisited
    void markHyperlinkAsVisited(com.media.dbstarplayer.book.Book,java.lang.String) -> markHyperlinkAsVisited
    java.util.List bookmarks(com.media.dbstarplayer.book.BookmarkQuery) -> bookmarks
    void saveBookmark(com.media.dbstarplayer.book.Bookmark) -> saveBookmark
    void deleteBookmark(com.media.dbstarplayer.book.Bookmark) -> deleteBookmark
    com.media.dbstarplayer.book.HighlightingStyle getHighlightingStyle(int) -> getHighlightingStyle
    java.util.List highlightingStyles() -> highlightingStyles
    void saveHighlightingStyle(com.media.dbstarplayer.book.HighlightingStyle) -> saveHighlightingStyle
com.media.dbstarplayer.book.IBookCollection$Listener -> com.media.dbstarplayer.book.IBookCollection$Listener:
    void onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> onBookEvent
    void onBuildEvent(com.media.dbstarplayer.book.IBookCollection$Status) -> onBuildEvent
com.media.dbstarplayer.book.IBookCollection$Status -> com.media.dbstarplayer.book.IBookCollection$Status:
    com.media.dbstarplayer.book.IBookCollection$Status NotStarted -> NotStarted
    com.media.dbstarplayer.book.IBookCollection$Status Started -> Started
    com.media.dbstarplayer.book.IBookCollection$Status Succeeded -> Succeeded
    com.media.dbstarplayer.book.IBookCollection$Status Failed -> Failed
    java.lang.Boolean IsCompleted -> IsCompleted
    com.media.dbstarplayer.book.IBookCollection$Status[] ENUM$VALUES -> ENUM$VALUES
    com.media.dbstarplayer.book.IBookCollection$Status[] values() -> values
    com.media.dbstarplayer.book.IBookCollection$Status valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.book.SerializerUtil -> com.media.dbstarplayer.book.SerializerUtil:
    com.media.dbstarplayer.book.AbstractSerializer defaultSerializer -> defaultSerializer
    java.lang.String serialize(com.media.dbstarplayer.book.BookQuery) -> serialize
    com.media.dbstarplayer.book.BookQuery deserializeBookQuery(java.lang.String) -> deserializeBookQuery
    java.lang.String serialize(com.media.dbstarplayer.book.BookmarkQuery) -> serialize
    com.media.dbstarplayer.book.BookmarkQuery deserializeBookmarkQuery(java.lang.String) -> deserializeBookmarkQuery
    java.lang.String serialize(com.media.dbstarplayer.book.Book) -> serialize
    com.media.dbstarplayer.book.Book deserializeBook(java.lang.String) -> deserializeBook
    java.util.List serializeBookList(java.util.List) -> serializeBookList
    java.util.List deserializeBookList(java.util.List) -> deserializeBookList
    java.lang.String serialize(com.media.dbstarplayer.book.Bookmark) -> serialize
    com.media.dbstarplayer.book.Bookmark deserializeBookmark(java.lang.String) -> deserializeBookmark
    java.util.List serializeBookmarkList(java.util.List) -> serializeBookmarkList
    java.util.List deserializeBookmarkList(java.util.List) -> deserializeBookmarkList
    java.lang.String serialize(com.media.dbstarplayer.book.HighlightingStyle) -> serialize
    com.media.dbstarplayer.book.HighlightingStyle deserializeStyle(java.lang.String) -> deserializeStyle
    java.util.List serializeStyleList(java.util.List) -> serializeStyleList
    java.util.List deserializeStyleList(java.util.List) -> deserializeStyleList
com.media.dbstarplayer.book.Series -> com.media.dbstarplayer.book.Series:
    java.lang.String getLanguage() -> getLanguage
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.dbstarplayer.book.SeriesInfo -> com.media.dbstarplayer.book.SeriesInfo:
    com.media.dbstarplayer.book.Series Series -> Series
    java.math.BigDecimal Index -> Index
    com.media.dbstarplayer.book.SeriesInfo createSeriesInfo(java.lang.String,java.lang.String) -> createSeriesInfo
    java.math.BigDecimal createIndex(java.lang.String) -> createIndex
com.media.dbstarplayer.book.Tag -> com.media.dbstarplayer.book.Tag:
    com.media.dbstarplayer.book.Tag NULL -> NULL
    java.util.HashMap ourTagSet -> ourTagSet
    com.media.dbstarplayer.book.Tag Parent -> Parent
    java.lang.String Name -> Name
    com.media.dbstarplayer.book.Tag getTag(com.media.dbstarplayer.book.Tag,java.lang.String) -> getTag
    com.media.dbstarplayer.book.Tag getTag(java.lang.String[]) -> getTag
    com.media.dbstarplayer.book.Tag getTag(java.lang.String[],int) -> getTag
    java.lang.String toString(java.lang.String) -> toString
    java.lang.StringBuilder toStringBuilder(java.lang.String) -> toStringBuilder
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.dbstarplayer.book.UID -> com.media.dbstarplayer.book.UID:
    java.lang.String Type -> Type
    java.lang.String Id -> Id
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.dbstarplayer.book.XMLSerializer -> com.media.dbstarplayer.book.XMLSerializer:
    java.text.DateFormat ourDateFormatter -> ourDateFormatter
    java.lang.String serialize(com.media.dbstarplayer.book.BookQuery) -> serialize
    void serialize(java.lang.StringBuilder,com.media.dbstarplayer.book.Filter) -> serialize
    com.media.dbstarplayer.book.BookQuery deserializeBookQuery(java.lang.String) -> deserializeBookQuery
    java.lang.String serialize(com.media.dbstarplayer.book.BookmarkQuery) -> serialize
    com.media.dbstarplayer.book.BookmarkQuery deserializeBookmarkQuery(java.lang.String) -> deserializeBookmarkQuery
    java.lang.String serialize(com.media.dbstarplayer.book.Book) -> serialize
    void serialize(java.lang.StringBuilder,com.media.dbstarplayer.book.Book) -> serialize
    com.media.dbstarplayer.book.Book deserializeBook(java.lang.String) -> deserializeBook
    java.lang.String serialize(com.media.dbstarplayer.book.Bookmark) -> serialize
    com.media.dbstarplayer.book.Bookmark deserializeBookmark(java.lang.String) -> deserializeBookmark
    java.lang.String serialize(com.media.dbstarplayer.book.HighlightingStyle) -> serialize
    com.media.dbstarplayer.book.HighlightingStyle deserializeStyle(java.lang.String) -> deserializeStyle
    java.lang.String formatDate(java.util.Date) -> formatDate
    java.util.Date parseDate(java.lang.String) -> parseDate
    void appendTag(java.lang.StringBuilder,java.lang.String,boolean,java.lang.String[]) -> appendTag
    void closeTag(java.lang.StringBuilder,java.lang.String) -> closeTag
    void appendTagWithContent(java.lang.StringBuilder,java.lang.String,java.lang.String) -> appendTagWithContent
    void appendTagWithContent(java.lang.StringBuilder,java.lang.String,java.lang.Object) -> appendTagWithContent
    java.lang.String escapeForXml(java.lang.String) -> escapeForXml
    void clear(java.lang.StringBuilder) -> clear
    java.lang.String string(java.lang.StringBuilder) -> string
    void access$0(java.lang.StringBuilder) -> access$0
    java.lang.String access$1(java.lang.StringBuilder) -> access$1
    java.util.Date access$2(java.lang.String) -> access$2
com.media.dbstarplayer.book.XMLSerializer$BookDeserializer -> com.media.dbstarplayer.book.XMLSerializer$BookDeserializer:
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State myState -> myState
    long myId -> myId
    java.lang.String myUrl -> myUrl
    java.lang.StringBuilder myTitle -> myTitle
    java.lang.StringBuilder myLanguage -> myLanguage
    java.lang.StringBuilder myEncoding -> myEncoding
    java.lang.String myScheme -> myScheme
    java.lang.StringBuilder myUid -> myUid
    java.util.ArrayList myUidList -> myUidList
    java.util.ArrayList myAuthors -> myAuthors
    java.util.ArrayList myTags -> myTags
    java.util.ArrayList myLabels -> myLabels
    java.lang.StringBuilder myAuthorSortKey -> myAuthorSortKey
    java.lang.StringBuilder myAuthorName -> myAuthorName
    java.lang.StringBuilder mySeriesTitle -> mySeriesTitle
    java.lang.StringBuilder mySeriesIndex -> mySeriesIndex
    boolean myHasBookmark -> myHasBookmark
    com.media.dbstarplayer.book.Book myBook -> myBook
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookDeserializer$State -> $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookDeserializer$State
    com.media.dbstarplayer.book.Book getBook() -> getBook
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookDeserializer$State() -> $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookDeserializer$State
com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State -> com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State:
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_NOTHING -> READ_NOTHING
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_ENTRY -> READ_ENTRY
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_ID -> READ_ID
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_UID -> READ_UID
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_TITLE -> READ_TITLE
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_LANGUAGE -> READ_LANGUAGE
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_ENCODING -> READ_ENCODING
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_AUTHOR -> READ_AUTHOR
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_AUTHOR_URI -> READ_AUTHOR_URI
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_AUTHOR_NAME -> READ_AUTHOR_NAME
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_SERIES_TITLE -> READ_SERIES_TITLE
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State READ_SERIES_INDEX -> READ_SERIES_INDEX
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State[] ENUM$VALUES -> ENUM$VALUES
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State[] values() -> values
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer$State valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer -> com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer:
    java.util.LinkedList myStateStack -> myStateStack
    java.util.LinkedList myFilterStack -> myFilterStack
    com.media.dbstarplayer.book.Filter myFilter -> myFilter
    int myLimit -> myLimit
    int myPage -> myPage
    com.media.dbstarplayer.book.BookQuery myQuery -> myQuery
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookQueryDeserializer$State -> $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookQueryDeserializer$State
    com.media.dbstarplayer.book.BookQuery getQuery() -> getQuery
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookQueryDeserializer$State() -> $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookQueryDeserializer$State
com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State -> com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State:
    com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State READ_QUERY -> READ_QUERY
    com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State READ_FILTER_AND -> READ_FILTER_AND
    com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State READ_FILTER_OR -> READ_FILTER_OR
    com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State READ_FILTER_SIMPLE -> READ_FILTER_SIMPLE
    com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State[] ENUM$VALUES -> ENUM$VALUES
    com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State[] values() -> values
    com.media.dbstarplayer.book.XMLSerializer$BookQueryDeserializer$State valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer -> com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer:
    com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State myState -> myState
    com.media.dbstarplayer.book.Bookmark myBookmark -> myBookmark
    long myId -> myId
    long myBookId -> myBookId
    java.lang.String myBookTitle -> myBookTitle
    java.lang.StringBuilder myText -> myText
    java.util.Date myCreationDate -> myCreationDate
    java.util.Date myModificationDate -> myModificationDate
    java.util.Date myAccessDate -> myAccessDate
    int myAccessCount -> myAccessCount
    java.lang.String myModelId -> myModelId
    int myStartParagraphIndex -> myStartParagraphIndex
    int myStartElementIndex -> myStartElementIndex
    int myStartCharIndex -> myStartCharIndex
    int myEndParagraphIndex -> myEndParagraphIndex
    int myEndElementIndex -> myEndElementIndex
    int myEndCharIndex -> myEndCharIndex
    boolean myIsVisible -> myIsVisible
    int myStyle -> myStyle
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookmarkDeserializer$State -> $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookmarkDeserializer$State
    com.media.dbstarplayer.book.Bookmark getBookmark() -> getBookmark
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookmarkDeserializer$State() -> $SWITCH_TABLE$com$media$dbstarplayer$book$XMLSerializer$BookmarkDeserializer$State
com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State -> com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State:
    com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State READ_NOTHING -> READ_NOTHING
    com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State READ_BOOKMARK -> READ_BOOKMARK
    com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State READ_TEXT -> READ_TEXT
    com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State[] ENUM$VALUES -> ENUM$VALUES
    com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State[] values() -> values
    com.media.dbstarplayer.book.XMLSerializer$BookmarkDeserializer$State valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.book.XMLSerializer$BookmarkQueryDeserializer -> com.media.dbstarplayer.book.XMLSerializer$BookmarkQueryDeserializer:
    boolean myVisible -> myVisible
    int myLimit -> myLimit
    int myPage -> myPage
    com.media.dbstarplayer.book.XMLSerializer$BookDeserializer myBookDeserializer -> myBookDeserializer
    com.media.dbstarplayer.book.BookmarkQuery myQuery -> myQuery
    com.media.dbstarplayer.book.BookmarkQuery getQuery() -> getQuery
    void startDocument() -> startDocument
    void endDocument() -> endDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
    void endElement(java.lang.String,java.lang.String,java.lang.String) -> endElement
    void characters(char[],int,int) -> characters
com.media.dbstarplayer.book.XMLSerializer$StyleDeserializer -> com.media.dbstarplayer.book.XMLSerializer$StyleDeserializer:
    com.media.dbstarplayer.book.HighlightingStyle myStyle -> myStyle
    com.media.dbstarplayer.book.HighlightingStyle getStyle() -> getStyle
    void startDocument() -> startDocument
    void startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes) -> startElement
com.media.dbstarplayer.bookmodel.BookModel -> com.media.dbstarplayer.bookmodel.BookModel:
    com.media.dbstarplayer.book.Book Book -> Book
    com.media.dbstarplayer.bookmodel.TOCTree TOCTree -> TOCTree
    com.media.dbstarplayer.bookmodel.BookModel$LabelResolver myResolver -> myResolver
    int[] $SWITCH_TABLE$com$media$dbstarplayer$formats$FormatPlugin$Type -> $SWITCH_TABLE$com$media$dbstarplayer$formats$FormatPlugin$Type
    com.media.dbstarplayer.bookmodel.BookModel createModel(com.media.dbstarplayer.book.Book) -> createModel
    com.media.zlibrary.text.model.ZLTextModel getTextModel() -> getTextModel
    com.media.zlibrary.text.model.ZLTextModel getFootnoteModel(java.lang.String) -> getFootnoteModel
    com.media.dbstarplayer.bookmodel.BookModel$Label getLabelInternal(java.lang.String) -> getLabelInternal
    void setLabelResolver(com.media.dbstarplayer.bookmodel.BookModel$LabelResolver) -> setLabelResolver
    com.media.dbstarplayer.bookmodel.BookModel$Label getLabel(java.lang.String) -> getLabel
    int[] $SWITCH_TABLE$com$media$dbstarplayer$formats$FormatPlugin$Type() -> $SWITCH_TABLE$com$media$dbstarplayer$formats$FormatPlugin$Type
com.media.dbstarplayer.bookmodel.BookModel$Label -> com.media.dbstarplayer.bookmodel.BookModel$Label:
    java.lang.String ModelId -> ModelId
    int ParagraphIndex -> ParagraphIndex
com.media.dbstarplayer.bookmodel.BookModel$LabelResolver -> com.media.dbstarplayer.bookmodel.BookModel$LabelResolver:
    java.util.List getCandidates(java.lang.String) -> getCandidates
com.media.dbstarplayer.bookmodel.BookModelImpl -> com.media.dbstarplayer.bookmodel.BookModelImpl:
    com.media.zlibrary.text.model.CharStorage myInternalHyperlinks -> myInternalHyperlinks
    java.util.HashMap myImageMap -> myImageMap
    java.util.HashMap myFootnotes -> myFootnotes
    com.media.dbstarplayer.bookmodel.BookModel$Label getLabelInternal(java.lang.String) -> getLabelInternal
    void addImage(java.lang.String,com.media.zlibrary.core.image.ZLImage) -> addImage
com.media.dbstarplayer.bookmodel.BookReader -> com.media.dbstarplayer.bookmodel.BookReader:
    com.media.dbstarplayer.bookmodel.JavaBookModel Model -> Model
    com.media.zlibrary.text.model.ZLTextWritableModel myCurrentTextModel -> myCurrentTextModel
    boolean myTextParagraphExists -> myTextParagraphExists
    boolean myTextParagraphIsNonEmpty -> myTextParagraphIsNonEmpty
    char[] myTextBuffer -> myTextBuffer
    int myTextBufferLength -> myTextBufferLength
    java.lang.StringBuilder myContentsBuffer -> myContentsBuffer
    byte[] myKindStack -> myKindStack
    int myKindStackSize -> myKindStackSize
    byte myHyperlinkKind -> myHyperlinkKind
    java.lang.String myHyperlinkReference -> myHyperlinkReference
    boolean myInsideTitle -> myInsideTitle
    boolean mySectionContainsRegularContents -> mySectionContainsRegularContents
    com.media.dbstarplayer.bookmodel.TOCTree myCurrentContentsTree -> myCurrentContentsTree
    java.nio.charset.CharsetDecoder myByteDecoder -> myByteDecoder
    byte[] myUnderflowByteBuffer -> myUnderflowByteBuffer
    int myUnderflowLength -> myUnderflowLength
    void setByteDecoder(java.nio.charset.CharsetDecoder) -> setByteDecoder
    void flushTextBufferToParagraph() -> flushTextBufferToParagraph
    void addControl(byte,boolean) -> addControl
    void pushKind(byte) -> pushKind
    boolean popKind() -> popKind
    void beginParagraph() -> beginParagraph
    void beginParagraph(byte) -> beginParagraph
    void endParagraph() -> endParagraph
    void insertEndParagraph(byte) -> insertEndParagraph
    void insertEndOfSectionParagraph() -> insertEndOfSectionParagraph
    void unsetCurrentTextModel() -> unsetCurrentTextModel
    void enterTitle() -> enterTitle
    void exitTitle() -> exitTitle
    void setMainTextModel() -> setMainTextModel
    void setFootnoteTextModel(java.lang.String) -> setFootnoteTextModel
    void addData(char[]) -> addData
    void addData(char[],int,int,boolean) -> addData
    void addByteData(byte[],int,int) -> addByteData
    byte hyperlinkType(byte) -> hyperlinkType
    void addHyperlinkControl(byte,java.lang.String) -> addHyperlinkControl
    void addHyperlinkLabel(java.lang.String) -> addHyperlinkLabel
    void addHyperlinkLabel(java.lang.String,int) -> addHyperlinkLabel
    void addContentsData(char[]) -> addContentsData
    void addContentsData(char[],int,int) -> addContentsData
    boolean hasContentsData() -> hasContentsData
    void beginContentsParagraph(int) -> beginContentsParagraph
    void beginContentsParagraph(com.media.zlibrary.text.model.ZLTextModel,int) -> beginContentsParagraph
    void endContentsParagraph() -> endContentsParagraph
    boolean paragraphIsOpen() -> paragraphIsOpen
    boolean paragraphIsNonEmpty() -> paragraphIsNonEmpty
    boolean contentsParagraphIsOpen() -> contentsParagraphIsOpen
    void beginContentsParagraph() -> beginContentsParagraph
    void addImageReference(java.lang.String,boolean) -> addImageReference
    void addImageReference(java.lang.String,short,boolean) -> addImageReference
    void addImage(java.lang.String,com.media.zlibrary.core.image.ZLImage) -> addImage
    void addFixedHSpace(short) -> addFixedHSpace
com.media.dbstarplayer.bookmodel.BookReadingException -> com.media.dbstarplayer.bookmodel.BookReadingException:
    com.media.zlibrary.core.filesystem.ZLFile File -> File
    void throwForFile(java.lang.String,com.media.zlibrary.core.filesystem.ZLFile) -> throwForFile
    java.lang.String getResourceText(java.lang.String) -> getResourceText
com.media.dbstarplayer.bookmodel.FBHyperlinkType -> com.media.dbstarplayer.bookmodel.FBHyperlinkType:
    byte NONE -> NONE
    byte INTERNAL -> INTERNAL
    byte EXTERNAL -> EXTERNAL
com.media.dbstarplayer.bookmodel.FBTextKind -> com.media.dbstarplayer.bookmodel.FBTextKind:
    byte REGULAR -> REGULAR
    byte TITLE -> TITLE
    byte SECTION_TITLE -> SECTION_TITLE
    byte POEM_TITLE -> POEM_TITLE
    byte SUBTITLE -> SUBTITLE
    byte ANNOTATION -> ANNOTATION
    byte EPIGRAPH -> EPIGRAPH
    byte STANZA -> STANZA
    byte VERSE -> VERSE
    byte PREFORMATTED -> PREFORMATTED
    byte IMAGE -> IMAGE
    byte CITE -> CITE
    byte AUTHOR -> AUTHOR
    byte DATE -> DATE
    byte INTERNAL_HYPERLINK -> INTERNAL_HYPERLINK
    byte FOOTNOTE -> FOOTNOTE
    byte EMPHASIS -> EMPHASIS
    byte STRONG -> STRONG
    byte SUB -> SUB
    byte SUP -> SUP
    byte CODE -> CODE
    byte STRIKETHROUGH -> STRIKETHROUGH
    byte ITALIC -> ITALIC
    byte BOLD -> BOLD
    byte DEFINITION -> DEFINITION
    byte DEFINITION_DESCRIPTION -> DEFINITION_DESCRIPTION
    byte H1 -> H1
    byte H2 -> H2
    byte H3 -> H3
    byte H4 -> H4
    byte H5 -> H5
    byte H6 -> H6
    byte EXTERNAL_HYPERLINK -> EXTERNAL_HYPERLINK
com.media.dbstarplayer.bookmodel.JavaBookModel -> com.media.dbstarplayer.bookmodel.JavaBookModel:
    com.media.zlibrary.text.model.ZLTextModel BookTextModel -> BookTextModel
    char[] myCurrentLinkBlock -> myCurrentLinkBlock
    int myCurrentLinkBlockOffset -> myCurrentLinkBlockOffset
    com.media.zlibrary.text.model.ZLTextModel getTextModel() -> getTextModel
    com.media.zlibrary.text.model.ZLTextModel getFootnoteModel(java.lang.String) -> getFootnoteModel
    void addHyperlinkLabel(java.lang.String,com.media.zlibrary.text.model.ZLTextModel,int) -> addHyperlinkLabel
    void addImage(java.lang.String,com.media.zlibrary.core.image.ZLImage) -> addImage
com.media.dbstarplayer.bookmodel.NativeBookModel -> com.media.dbstarplayer.bookmodel.NativeBookModel:
    com.media.zlibrary.text.model.ZLTextModel myBookTextModel -> myBookTextModel
    com.media.dbstarplayer.bookmodel.TOCTree myCurrentTree -> myCurrentTree
    void initInternalHyperlinks(java.lang.String,java.lang.String,int) -> initInternalHyperlinks
    void addTOCItem(java.lang.String,int) -> addTOCItem
    void leaveTOCItem() -> leaveTOCItem
    com.media.zlibrary.text.model.ZLTextModel createTextModel(java.lang.String,java.lang.String,int,int[],int[],int[],int[],byte[],java.lang.String,java.lang.String,int) -> createTextModel
    void setBookTextModel(com.media.zlibrary.text.model.ZLTextModel) -> setBookTextModel
    void setFootnoteModel(com.media.zlibrary.text.model.ZLTextModel) -> setFootnoteModel
    com.media.zlibrary.text.model.ZLTextModel getTextModel() -> getTextModel
    com.media.zlibrary.text.model.ZLTextModel getFootnoteModel(java.lang.String) -> getFootnoteModel
    void addImage(java.lang.String,com.media.zlibrary.core.image.ZLImage) -> addImage
com.media.dbstarplayer.bookmodel.TOCTree -> com.media.dbstarplayer.bookmodel.TOCTree:
    java.lang.String myText -> myText
    com.media.dbstarplayer.bookmodel.TOCTree$Reference myReference -> myReference
    java.lang.String getText() -> getText
    void setText(java.lang.String) -> setText
    com.media.dbstarplayer.bookmodel.TOCTree$Reference getReference() -> getReference
    void setReference(com.media.zlibrary.text.model.ZLTextModel,int) -> setReference
com.media.dbstarplayer.bookmodel.TOCTree$Reference -> com.media.dbstarplayer.bookmodel.TOCTree$Reference:
    int ParagraphIndex -> ParagraphIndex
    com.media.zlibrary.text.model.ZLTextModel Model -> Model
com.media.dbstarplayer.dbstarplayer.BookmarkHighlighting -> com.media.dbstarplayer.a.a:
    com.media.dbstarplayer.book.IBookCollection Collection -> a
    com.media.dbstarplayer.book.Bookmark Bookmark -> b
    com.media.dbstarplayer.book.Bookmark getHightlightingBookmark() -> a
    com.media.zlibrary.core.util.ZLColor getBackgroundColor() -> b
com.media.dbstarplayer.dbstarplayer.ChangeFontSizeAction -> com.media.dbstarplayer.a.b:
    int myDelta -> a
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.ChapterNavigateAction -> com.media.dbstarplayer.a.c:
    boolean mAhead -> a
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.ClearFindResultsAction -> com.media.dbstarplayer.a.d:
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.ColorProfile -> com.media.dbstarplayer.a.e:
    java.util.ArrayList ourNames -> j
    java.util.HashMap ourProfiles -> k
    com.media.zlibrary.core.options.ZLStringOption WallpaperOption -> a
    com.media.zlibrary.core.options.ZLColorOption BackgroundOption -> b
    com.media.zlibrary.core.options.ZLColorOption SelectionBackgroundOption -> c
    com.media.zlibrary.core.options.ZLColorOption SelectionForegroundOption -> d
    com.media.zlibrary.core.options.ZLColorOption HighlightingOption -> e
    com.media.zlibrary.core.options.ZLColorOption RegularTextOption -> f
    com.media.zlibrary.core.options.ZLColorOption HyperlinkTextOption -> g
    com.media.zlibrary.core.options.ZLColorOption VisitedHyperlinkTextOption -> h
    com.media.zlibrary.core.options.ZLColorOption FooterFillOption -> i
    com.media.dbstarplayer.dbstarplayer.ColorProfile get(java.lang.String) -> a
    com.media.zlibrary.core.options.ZLColorOption createOption(java.lang.String,java.lang.String,int,int,int) -> a
com.media.dbstarplayer.dbstarplayer.DbStarAction -> com.media.dbstarplayer.a.f:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp Reader -> f
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp -> com.media.dbstarplayer.a.g:
    java.lang.String TAG -> B
    com.media.zlibrary.text.view.ZLTextWordCursor mCursorAudioSpeek -> a
    int WIDTH_MARGIN_LEFT_DEFAULT -> C
    int WIDTH_MARGIN_RIGHT_DEFAULT -> D
    int HEIGHT_MARGIN_TOP_DEFAULT -> E
    int HEIGHT_MARGIN_BOTTOM_DEFAULT -> F
    int mEdgeWidth -> G
    int mEdgeBottom -> H
    int MSG_OPEN_BOOK_FAILED -> I
    java.util.ArrayList mChapterList -> b
    android.content.Context mContext -> c
    com.media.dbstarplayer.book.Book curBook -> J
    com.media.zlibrary.core.options.ZLBooleanOption AllowScreenBrightnessAdjustmentOption -> d
    com.media.zlibrary.core.options.ZLStringOption TextSearchPatternOption -> e
    com.media.zlibrary.core.options.ZLBooleanOption UseSeparateBindingsOption -> f
    com.media.zlibrary.core.options.ZLBooleanOption EnableDoubleTapOption -> g
    com.media.zlibrary.core.options.ZLBooleanOption NavigateAllWordsOption -> h
    com.media.zlibrary.core.options.ZLEnumOption WordTappingActionOption -> i
    com.media.zlibrary.core.options.ZLColorOption ImageViewBackgroundOption -> j
    com.media.zlibrary.core.options.ZLEnumOption FitImagesToScreenOption -> k
    com.media.zlibrary.core.options.ZLEnumOption ImageTappingActionOption -> l
    com.media.zlibrary.core.options.ZLIntegerRangeOption LeftMarginOption -> m
    com.media.zlibrary.core.options.ZLIntegerRangeOption RightMarginOption -> n
    com.media.zlibrary.core.options.ZLIntegerRangeOption TopMarginOption -> o
    com.media.zlibrary.core.options.ZLIntegerRangeOption BottomMarginOption -> p
    com.media.zlibrary.core.options.ZLIntegerRangeOption SpaceBetweenColumnsOption -> q
    com.media.zlibrary.core.options.ZLIntegerRangeOption FooterHeightOption -> r
    com.media.zlibrary.core.options.ZLIntegerRangeOption ScrollbarTypeOption -> s
    com.media.zlibrary.core.options.ZLStringOption ColorProfileOption -> t
    com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions PageTurningOptions -> u
    com.media.dbstarplayer.dbstarplayer.options.FooterOptions FooterOptions -> v
    com.media.dbstarplayer.dbstarplayer.options.CancelMenuOptions CancelMenuOptions -> w
    com.media.zlibrary.core.application.ZLKeyBindings myBindings -> K
    com.media.dbstarplayer.dbstarplayer.DbStarView BookTextView -> x
    com.media.dbstarplayer.dbstarplayer.DbStarView FootnoteView -> y
    java.lang.String myFootnoteModelId -> L
    com.media.dbstarplayer.bookmodel.BookModel Model -> z
    com.media.zlibrary.text.view.ZLTextPosition myJumpEndPosition -> M
    java.util.Date myJumpTimeStamp -> N
    com.media.dbstarplayer.book.IBookCollection Collection -> A
    com.media.dbstarplayer.dbstarplayer.ColorProfile myColorProfile -> O
    java.util.ArrayList myCancelActionsList -> P
    android.os.Handler mHandler -> Q
    int[] $SWITCH_TABLE$com$media$dbstarplayer$dbstarplayer$DbStarPlayerApp$CancelActionType -> R
    void openBook(com.media.dbstarplayer.book.Book,com.media.dbstarplayer.book.Bookmark,java.lang.Runnable) -> a
    com.media.dbstarplayer.dbstarplayer.ColorProfile getColorProfile() -> a
    void setColorProfileName(java.lang.String) -> a
    com.media.zlibrary.core.application.ZLKeyBindings keyBindings() -> b
    void tryOpenFootnote(java.lang.String) -> b
    void clearTextCaches() -> c
    void setBookmarkHighlightings(com.media.zlibrary.text.view.ZLTextView,java.lang.String) -> a
    void setFootnoteModel(java.lang.String) -> i
    void openBookInternal(com.media.dbstarplayer.book.Book,com.media.dbstarplayer.book.Bookmark,boolean) -> a
    boolean jumpBack() -> d
    void gotoBookmark(com.media.dbstarplayer.book.Bookmark) -> a
    void showBookTextView() -> e
    void onWindowClosing() -> f
    void storePosition() -> g
    java.util.List getCancelActionsList() -> h
    void runCancelAction(int) -> a
    com.media.dbstarplayer.book.Bookmark createBookmark$5facdf88() -> i
    com.media.dbstarplayer.bookmodel.TOCTree getCurrentTOCElement() -> j
    void onBookUpdated(com.media.dbstarplayer.book.Book) -> a
    int getEdgeWidth() -> k
    com.media.dbstarplayer.book.Book getCurBook() -> l
    void updateFont(java.lang.String) -> c
    void initChapterList(com.media.dbstarplayer.bookmodel.TOCTree) -> a
    java.util.List getChapterList() -> m
    void access$1(com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp,com.media.zlibrary.text.view.ZLTextView,java.lang.String) -> a
    java.lang.String access$2(com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp) -> a
    void access$3(com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp,com.media.dbstarplayer.book.Book) -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$dbstarplayer$DbStarPlayerApp$CancelActionType() -> z
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$1 -> com.media.dbstarplayer.a.h:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$2 -> com.media.dbstarplayer.a.i:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp this$0 -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent -> b
    void onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> onBookEvent
    void onBuildEvent(com.media.dbstarplayer.book.IBookCollection$Status) -> onBuildEvent
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent() -> a
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$3 -> com.media.dbstarplayer.a.j:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp this$0 -> a
    com.media.dbstarplayer.book.Book val$book -> b
    com.media.dbstarplayer.book.Bookmark val$bookmark -> c
    void run() -> run
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$4 -> com.media.dbstarplayer.a.k:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp this$0 -> a
    void run() -> run
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$5 -> com.media.dbstarplayer.a.l:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$6 -> com.media.dbstarplayer.a.m:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$BookmarkDescription -> com.media.dbstarplayer.a.n:
    com.media.dbstarplayer.book.Bookmark Bookmark -> a
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionDescription -> com.media.dbstarplayer.a.o:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType Type -> b
    java.lang.String Title -> c
    java.lang.String Summary -> d
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType -> com.media.dbstarplayer.a.p:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType library -> a
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType networkLibrary -> b
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType previousBook -> c
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType returnTo -> d
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType close -> e
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType[] ENUM$VALUES -> f
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType[] values() -> values
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$CancelActionType valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$ImageTappingAction -> com.media.dbstarplayer.a.q:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$ImageTappingAction doNothing -> a
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$ImageTappingAction selectImage -> b
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$ImageTappingAction openImageView -> c
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$ImageTappingAction[] ENUM$VALUES -> d
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$ImageTappingAction[] values() -> values
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$ImageTappingAction valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$WordTappingAction -> com.media.dbstarplayer.a.r:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$WordTappingAction doNothing -> a
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$WordTappingAction selectSingleWord -> b
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$WordTappingAction startSelecting -> c
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$WordTappingAction openDictionary -> d
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$WordTappingAction[] ENUM$VALUES -> e
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$WordTappingAction[] values() -> values
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp$WordTappingAction valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.dbstarplayer.DbStarView -> com.media.dbstarplayer.a.s:
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp myReader -> f
    com.media.dbstarplayer.dbstarplayer.TapZoneMap myZoneMap -> g
    int[] $SWITCH_TABLE$com$media$dbstarplayer$dbstarplayer$DbStarPlayerApp$WordTappingAction -> h
    void setModel(com.media.zlibrary.text.model.ZLTextModel) -> a
    boolean onFingerSingleTap(int,int) -> a
    boolean onFingerPress(int,int) -> b
    boolean isFlickScrollingEnabled() -> Y
    boolean onFingerMove(int,int) -> c
    boolean onFingerRelease(int,int) -> d
    boolean onFingerLongPress(int,int) -> e
    boolean onFingerMoveAfterLongPress(int,int) -> f
    boolean onFingerReleaseAfterLongPress(int,int) -> g
    boolean onTrackballRotated(int,int) -> h
    int getLeftMargin() -> a
    int getRightMargin() -> b
    int getTopMargin() -> c
    int getBottomMargin() -> d
    com.media.zlibrary.core.util.ZLColor getSelectionBackgroundColor() -> e
    com.media.zlibrary.core.util.ZLColor getSelectionForegroundColor() -> f
    com.media.zlibrary.core.util.ZLColor getTextColor(com.media.zlibrary.text.view.ZLTextHyperlink) -> a
    com.media.zlibrary.core.util.ZLColor getHighlightingBackgroundColor() -> g
    void releaseSelectionCursor() -> h
    java.lang.String getSelectedText() -> i
    int getCountOfSelectedWords() -> j
    int scrollbarType() -> k
    com.media.zlibrary.core.view.ZLView$Animation getAnimationType() -> l
    int[] $SWITCH_TABLE$com$media$dbstarplayer$dbstarplayer$DbStarPlayerApp$WordTappingAction() -> Z
com.media.dbstarplayer.dbstarplayer.ExitAction -> com.media.dbstarplayer.a.t:
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.FindNextAction -> com.media.dbstarplayer.a.u:
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.FindPreviousAction -> com.media.dbstarplayer.a.v:
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.MoveCursorAction -> com.media.dbstarplayer.a.w:
    com.media.zlibrary.core.view.ZLView$Direction myDirection -> a
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction -> b
    void run(java.lang.Object[]) -> a
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction() -> c
com.media.dbstarplayer.dbstarplayer.PopViewAction -> com.media.dbstarplayer.a.x:
    com.media.reader.dialog.DialogBaseLayout dialogBase -> a
    com.media.android.dbstarplayer.DbStarPlayer activity -> b
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp mReader -> c
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.SelectionClearAction -> com.media.dbstarplayer.a.y:
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.SwitchProfileAction -> com.media.dbstarplayer.a.z:
    java.lang.String myProfileName -> a
    boolean isVisible() -> b
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.TapZoneMap -> com.media.dbstarplayer.a.aa:
    java.util.List ourPredefinedMaps -> b
    com.media.zlibrary.core.options.ZLStringListOption ourMapsOption -> c
    java.util.Map ourMaps -> d
    java.lang.String Name -> a
    java.lang.String myOptionGroupName -> e
    com.media.zlibrary.core.options.ZLIntegerRangeOption myHeight -> f
    com.media.zlibrary.core.options.ZLIntegerRangeOption myWidth -> g
    java.util.HashMap myZoneMap -> h
    java.util.HashMap myZoneMap2 -> i
    int[] $SWITCH_TABLE$com$media$dbstarplayer$dbstarplayer$TapZoneMap$Tap -> j
    java.util.List zoneMapNames() -> a
    com.media.dbstarplayer.dbstarplayer.TapZoneMap zoneMap(java.lang.String) -> a
    com.media.dbstarplayer.dbstarplayer.TapZoneMap createZoneMap(java.lang.String,int,int) -> a
    void deleteZoneMap(java.lang.String) -> b
    boolean isCustom() -> b
    int getHeight() -> c
    int getWidth() -> d
    java.lang.String getActionByCoordinates(int,int,int,int,com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap) -> a
    java.lang.String getActionByZone(int,int,com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap) -> a
    com.media.zlibrary.core.options.ZLStringOption createOptionForZone(com.media.dbstarplayer.dbstarplayer.TapZoneMap$Zone,boolean,java.lang.String) -> a
    void setActionForZone(int,int,boolean,java.lang.String) -> a
    java.util.HashMap access$0(com.media.dbstarplayer.dbstarplayer.TapZoneMap) -> a
    com.media.zlibrary.core.options.ZLStringOption access$1(com.media.dbstarplayer.dbstarplayer.TapZoneMap,com.media.dbstarplayer.dbstarplayer.TapZoneMap$Zone,boolean,java.lang.String) -> a
    java.util.HashMap access$2(com.media.dbstarplayer.dbstarplayer.TapZoneMap) -> b
    com.media.zlibrary.core.options.ZLIntegerRangeOption access$3(com.media.dbstarplayer.dbstarplayer.TapZoneMap) -> c
    com.media.zlibrary.core.options.ZLIntegerRangeOption access$4(com.media.dbstarplayer.dbstarplayer.TapZoneMap) -> d
    int[] $SWITCH_TABLE$com$media$dbstarplayer$dbstarplayer$TapZoneMap$Tap() -> e
com.media.dbstarplayer.dbstarplayer.TapZoneMap$Reader -> com.media.dbstarplayer.a.ab:
    com.media.dbstarplayer.dbstarplayer.TapZoneMap this$0 -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap -> com.media.dbstarplayer.a.ac:
    com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap singleTap -> a
    com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap singleNotDoubleTap -> b
    com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap doubleTap -> c
    com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap[] ENUM$VALUES -> d
    com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap[] values() -> values
    com.media.dbstarplayer.dbstarplayer.TapZoneMap$Tap valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.dbstarplayer.TapZoneMap$Zone -> com.media.dbstarplayer.a.ad:
    int HIndex -> a
    int VIndex -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.dbstarplayer.dbstarplayer.TextBuildTraverser -> com.media.dbstarplayer.a.ae:
    java.lang.StringBuilder myBuffer -> a
    void processWord(com.media.zlibrary.text.view.ZLTextWord) -> a
    void processSpace() -> a
    void processEndOfParagraph() -> b
    java.lang.String getText() -> c
com.media.dbstarplayer.dbstarplayer.TurnPageAction -> com.media.dbstarplayer.a.af:
    boolean myForward -> a
    boolean isEnabled() -> a
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.VolumeKeyTurnPageAction -> com.media.dbstarplayer.a.ag:
    boolean myForward -> a
    void run(java.lang.Object[]) -> a
com.media.dbstarplayer.dbstarplayer.WordCountTraverser -> com.media.dbstarplayer.a.ah:
    int myCount -> a
    void processWord(com.media.zlibrary.text.view.ZLTextWord) -> a
    void processSpace() -> a
    void processEndOfParagraph() -> b
    int getCount() -> c
com.media.dbstarplayer.dbstarplayer.options.CancelMenuOptions -> com.media.dbstarplayer.a.a.a:
    com.media.zlibrary.core.options.ZLBooleanOption ShowLibraryItem -> a
    com.media.zlibrary.core.options.ZLBooleanOption ShowNetworkLibraryItem -> b
    com.media.zlibrary.core.options.ZLBooleanOption ShowPreviousBookItem -> c
    com.media.zlibrary.core.options.ZLBooleanOption ShowPositionItems -> d
com.media.dbstarplayer.dbstarplayer.options.FooterOptions -> com.media.dbstarplayer.a.a.b:
    com.media.zlibrary.core.options.ZLBooleanOption ShowTOCMarks -> a
    com.media.zlibrary.core.options.ZLBooleanOption ShowClock -> b
    com.media.zlibrary.core.options.ZLBooleanOption ShowBattery -> c
    com.media.zlibrary.core.options.ZLBooleanOption ShowProgress -> d
    com.media.zlibrary.core.options.ZLStringOption Font -> e
com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions -> com.media.dbstarplayer.a.a.c:
    com.media.zlibrary.core.options.ZLEnumOption FingerScrolling -> a
    com.media.zlibrary.core.options.ZLEnumOption Animation -> b
    com.media.zlibrary.core.options.ZLIntegerRangeOption AnimationSpeed -> c
    com.media.zlibrary.core.options.ZLBooleanOption ShowDoublePageOption -> d
    com.media.zlibrary.core.options.ZLBooleanOption Horizontal -> e
    com.media.zlibrary.core.options.ZLStringOption TapZoneMap -> f
com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions$FingerScrollingType -> com.media.dbstarplayer.a.a.d:
    com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions$FingerScrollingType byTap -> a
    com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions$FingerScrollingType byFlick -> b
    com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions$FingerScrollingType byTapAndFlick -> c
    com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions$FingerScrollingType[] ENUM$VALUES -> d
    com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions$FingerScrollingType[] values() -> values
    com.media.dbstarplayer.dbstarplayer.options.PageTurningOptions$FingerScrollingType valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.formats.FormatPlugin -> com.media.dbstarplayer.formats.FormatPlugin:
    java.lang.String myFileType -> myFileType
    java.lang.String supportedFileType() -> supportedFileType
    com.media.zlibrary.core.filesystem.ZLFile realBookFile(com.media.zlibrary.core.filesystem.ZLFile) -> realBookFile
    void readMetaInfo(com.media.dbstarplayer.book.Book) -> readMetaInfo
    void readUids(com.media.dbstarplayer.book.Book) -> readUids
    void readModel(com.media.dbstarplayer.bookmodel.BookModel) -> readModel
    void detectLanguageAndEncoding(com.media.dbstarplayer.book.Book) -> detectLanguageAndEncoding
    com.media.zlibrary.core.image.ZLImage readCover(com.media.zlibrary.core.filesystem.ZLFile) -> readCover
    java.lang.String readAnnotation(com.media.zlibrary.core.filesystem.ZLFile) -> readAnnotation
    com.media.dbstarplayer.formats.FormatPlugin$Type type() -> type
    com.media.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> supportedEncodings
com.media.dbstarplayer.formats.FormatPlugin$Type -> com.media.dbstarplayer.formats.FormatPlugin$Type:
    com.media.dbstarplayer.formats.FormatPlugin$Type ANY -> ANY
    com.media.dbstarplayer.formats.FormatPlugin$Type JAVA -> JAVA
    com.media.dbstarplayer.formats.FormatPlugin$Type NATIVE -> NATIVE
    com.media.dbstarplayer.formats.FormatPlugin$Type EXTERNAL -> EXTERNAL
    com.media.dbstarplayer.formats.FormatPlugin$Type NONE -> NONE
    com.media.dbstarplayer.formats.FormatPlugin$Type[] ENUM$VALUES -> ENUM$VALUES
    com.media.dbstarplayer.formats.FormatPlugin$Type[] values() -> values
    com.media.dbstarplayer.formats.FormatPlugin$Type valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.formats.JavaFormatPlugin -> com.media.dbstarplayer.formats.JavaFormatPlugin:
    com.media.dbstarplayer.formats.FormatPlugin$Type type() -> type
com.media.dbstarplayer.formats.NativeFormatPlugin -> com.media.dbstarplayer.formats.NativeFormatPlugin:
    com.media.dbstarplayer.formats.NativeFormatPlugin create(java.lang.String) -> create
    void readMetaInfo(com.media.dbstarplayer.book.Book) -> readMetaInfo
    boolean readMetaInfoNative(com.media.dbstarplayer.book.Book) -> readMetaInfoNative
    void readUids(com.media.dbstarplayer.book.Book) -> readUids
    boolean readUidsNative(com.media.dbstarplayer.book.Book) -> readUidsNative
    void detectLanguageAndEncoding(com.media.dbstarplayer.book.Book) -> detectLanguageAndEncoding
    void detectLanguageAndEncodingNative(com.media.dbstarplayer.book.Book) -> detectLanguageAndEncodingNative
    void readModel(com.media.dbstarplayer.bookmodel.BookModel) -> readModel
    boolean readModelNative(com.media.dbstarplayer.bookmodel.BookModel) -> readModelNative
    com.media.zlibrary.core.image.ZLImage readCover(com.media.zlibrary.core.filesystem.ZLFile) -> readCover
    void readCoverInternal(com.media.zlibrary.core.filesystem.ZLFile,com.media.zlibrary.core.image.ZLImage[]) -> readCoverInternal
    java.lang.String readAnnotation(com.media.zlibrary.core.filesystem.ZLFile) -> readAnnotation
    com.media.dbstarplayer.formats.FormatPlugin$Type type() -> type
    com.media.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> supportedEncodings
    java.lang.String toString() -> toString
com.media.dbstarplayer.formats.NativeFormatPlugin$1 -> com.media.dbstarplayer.formats.NativeFormatPlugin$1:
    com.media.dbstarplayer.formats.NativeFormatPlugin this$0 -> this$0
    com.media.zlibrary.core.filesystem.ZLFile val$file -> val$file
    int sourceType() -> sourceType
    java.lang.String getId() -> getId
    com.media.zlibrary.core.image.ZLSingleImage getRealImage() -> getRealImage
com.media.dbstarplayer.formats.PluginCollection -> com.media.dbstarplayer.formats.PluginCollection:
    com.media.dbstarplayer.formats.PluginCollection ourInstance -> ourInstance
    java.util.Map myPlugins -> myPlugins
    com.media.dbstarplayer.formats.PluginCollection Instance() -> Instance
    void deleteInstance() -> deleteInstance
    void addPlugin(com.media.dbstarplayer.formats.FormatPlugin) -> addPlugin
    com.media.dbstarplayer.formats.FormatPlugin getPlugin(com.media.zlibrary.core.filesystem.ZLFile) -> getPlugin
    com.media.dbstarplayer.formats.FormatPlugin getPlugin(com.media.zlibrary.core.filesystem.ZLFile,com.media.dbstarplayer.formats.FormatPlugin$Type) -> getPlugin
    com.media.dbstarplayer.formats.FormatPlugin getPlugin(com.media.zlibrary.core.filetypes.FileType,com.media.dbstarplayer.formats.FormatPlugin$Type) -> getPlugin
    com.media.dbstarplayer.formats.NativeFormatPlugin[] nativePlugins() -> nativePlugins
    void free() -> free
    void finalize() -> finalize
com.media.dbstarplayer.formats.fb2.Base64EncodedImage -> com.media.dbstarplayer.formats.a.a:
    int ourCounter -> a
    java.lang.String myDirName -> b
    int myFileNumber -> c
    java.lang.String myNamePostfix -> d
    java.io.OutputStreamWriter myStreamWriter -> e
    void resetCounter() -> a
    java.lang.String encodedFileName() -> encodedFileName
    java.lang.String decodedFileName() -> decodedFileName
    void addData(char[],int,int) -> a
    void close() -> b
com.media.dbstarplayer.formats.fb2.FB2AnnotationReader -> com.media.dbstarplayer.formats.a.b:
    int myReadState -> a
    java.lang.StringBuilder myBuffer -> b
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    java.lang.String readAnnotation(com.media.zlibrary.core.filesystem.ZLFile) -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
    boolean readDocument(com.media.zlibrary.core.filesystem.ZLFile) -> b
com.media.dbstarplayer.formats.fb2.FB2CoverImage -> com.media.dbstarplayer.formats.a.c:
    com.media.zlibrary.core.filesystem.ZLFile myFile -> a
    com.media.zlibrary.core.image.ZLSingleImage getRealImage() -> getRealImage
    int sourceType() -> sourceType
    java.lang.String getId() -> getId
com.media.dbstarplayer.formats.fb2.FB2CoverImage$BackgroundReader -> com.media.dbstarplayer.formats.a.d:
    boolean myReadCoverPage -> a
    java.lang.String myImageReference -> b
    com.media.dbstarplayer.formats.fb2.Base64EncodedImage myImage -> c
    com.media.dbstarplayer.formats.fb2.Base64EncodedImage readCover(com.media.zlibrary.core.filesystem.ZLFile) -> a
    boolean processNamespaces() -> processNamespaces
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
com.media.dbstarplayer.formats.fb2.FB2CoverReader -> com.media.dbstarplayer.formats.a.e:
com.media.dbstarplayer.formats.fb2.FB2MetaInfoReader -> com.media.dbstarplayer.formats.a.f:
    com.media.dbstarplayer.book.Book myBook -> a
    int myReadState -> b
    java.lang.String[] myAuthorNames -> c
    java.lang.StringBuilder myBuffer -> d
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    void readMetaInfo() -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
com.media.dbstarplayer.formats.fb2.FB2NativePlugin -> com.media.dbstarplayer.formats.a.g:
    com.media.zlibrary.core.filesystem.ZLFile realBookFile(com.media.zlibrary.core.filesystem.ZLFile) -> realBookFile
    com.media.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> supportedEncodings
    void detectLanguageAndEncoding(com.media.dbstarplayer.book.Book) -> detectLanguageAndEncoding
com.media.dbstarplayer.formats.fb2.FB2Plugin -> com.media.dbstarplayer.formats.a.h:
    com.media.zlibrary.core.filesystem.ZLFile realBookFile(com.media.zlibrary.core.filesystem.ZLFile) -> realBookFile
    void readMetaInfo(com.media.dbstarplayer.book.Book) -> readMetaInfo
    void readUids(com.media.dbstarplayer.book.Book) -> readUids
    void readModel(com.media.dbstarplayer.bookmodel.BookModel) -> readModel
    com.media.zlibrary.core.image.ZLImage readCover(com.media.zlibrary.core.filesystem.ZLFile) -> readCover
    java.lang.String readAnnotation(com.media.zlibrary.core.filesystem.ZLFile) -> readAnnotation
    void detectLanguageAndEncoding(com.media.dbstarplayer.book.Book) -> detectLanguageAndEncoding
    com.media.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> supportedEncodings
com.media.dbstarplayer.formats.fb2.FB2Reader -> com.media.dbstarplayer.formats.a.i:
    com.media.dbstarplayer.bookmodel.BookReader myBookReader -> a
    boolean myInsidePoem -> b
    boolean myInsideTitle -> c
    int myBodyCounter -> d
    boolean myReadMainText -> e
    int mySectionDepth -> f
    boolean mySectionStarted -> g
    byte myHyperlinkType -> h
    com.media.dbstarplayer.formats.fb2.Base64EncodedImage myCurrentImage -> i
    boolean myInsideCoverpage -> j
    java.lang.String myCoverImageReference -> k
    int myParagraphsBeforeBodyNumber -> l
    char[] SPACE -> m
    byte[] myTagStack -> n
    int myTagStackSize -> o
    int myFootnoteIdDepth -> p
    void readBook() -> a
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    void characterDataHandler(char[],int,int) -> characterDataHandler
    void characterDataHandlerFinal(char[],int,int) -> characterDataHandlerFinal
    boolean endElementHandler(java.lang.String) -> endElementHandler
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean processNamespaces() -> processNamespaces
    void collectExternalEntities(java.util.HashMap) -> collectExternalEntities
    java.util.List externalDTDs() -> externalDTDs
com.media.dbstarplayer.formats.fb2.FB2Tag -> com.media.dbstarplayer.formats.a.j:
    java.util.HashMap ourTagByName -> a
    java.lang.Byte ourUnknownTag -> b
    byte getTagByName(java.lang.String) -> a
com.media.dbstarplayer.formats.fb2.FB2TagManager -> com.media.dbstarplayer.formats.a.k:
    java.util.HashMap ourMap -> a
    java.util.ArrayList humanReadableTags(java.lang.String) -> a
    java.util.HashMap access$0() -> a
com.media.dbstarplayer.formats.fb2.FB2TagManager$FB2TagInfoReader -> com.media.dbstarplayer.formats.a.l:
    java.lang.String myLanguage -> a
    com.media.dbstarplayer.book.Tag myCategoryTag -> b
    com.media.dbstarplayer.book.Tag mySubCategoryTag -> c
    java.util.ArrayList myGenreIds -> d
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
com.media.dbstarplayer.formats.fb2.FB2Util -> com.media.dbstarplayer.formats.a.m:
    com.media.zlibrary.core.filesystem.ZLFile getRealFB2File(com.media.zlibrary.core.filesystem.ZLFile) -> a
com.media.dbstarplayer.formats.html.HtmlReader -> com.media.dbstarplayer.formats.b.a:
    byte[] myStyleTable -> b
    java.nio.charset.CharsetDecoder myAttributeDecoder -> a
    boolean myInsideTitle -> c
    boolean mySectionStarted -> d
    byte myHyperlinkType -> e
    char[] SPACE -> f
    java.lang.String myHrefAttribute -> g
    boolean myOrderedListIsStarted -> h
    int myOLCounter -> i
    byte[] myControls -> j
    byte myControlsNumber -> k
    java.util.HashMap myEntityMap -> l
    java.nio.charset.CharsetDecoder createDecoder() -> a
    boolean readBook() -> b
    java.io.InputStream getInputStream() -> c
    void startDocumentHandler() -> d
    void endDocumentHandler() -> e
    void byteDataHandler(byte[],int,int) -> a
    void entityDataHandler(java.lang.String) -> a
    void openControl(byte) -> b
    void closeControl(byte) -> c
    void startNewParagraph() -> f
    void endElementHandler(java.lang.String) -> b
    void endElementHandler(byte) -> a
    void startElementHandler(java.lang.String,int,com.media.zlibrary.core.html.ZLHtmlAttributeMap) -> a
    void startElementHandler(byte,int,com.media.zlibrary.core.html.ZLHtmlAttributeMap) -> a
com.media.dbstarplayer.formats.html.HtmlTag -> com.media.dbstarplayer.formats.b.b:
    java.util.HashMap ourTagByName -> a
    java.lang.Byte ourUnknownTag -> b
    byte getTagByName(java.lang.String) -> a
com.media.dbstarplayer.formats.oeb.ContainerFileReader -> com.media.dbstarplayer.formats.c.a:
    java.lang.String myRootPath -> a
    java.lang.String getRootPath() -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.dbstarplayer.formats.oeb.NCXReader -> com.media.dbstarplayer.formats.c.b:
    java.util.TreeMap myNavigationMap -> c
    java.util.ArrayList myPointStack -> d
    int myReadState -> a
    int myPlayIndex -> b
    java.lang.String myLocalPathPrefix -> e
    void readFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    java.util.Map navigationMap() -> a
    int atoi(java.lang.String) -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
com.media.dbstarplayer.formats.oeb.NCXReader$NavPoint -> com.media.dbstarplayer.formats.c.c:
    int Order -> a
    int Level -> b
    java.lang.String Text -> c
    java.lang.String ContentHRef -> d
com.media.dbstarplayer.formats.oeb.OEBAnnotationReader -> com.media.dbstarplayer.formats.c.d:
    int myReadState -> a
    java.lang.StringBuilder myBuffer -> b
    java.lang.String readAnnotation(com.media.zlibrary.core.filesystem.ZLFile) -> a
    boolean processNamespaces() -> processNamespaces
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
com.media.dbstarplayer.formats.oeb.OEBBookReader -> com.media.dbstarplayer.formats.c.e:
    char[] Dots -> a
    com.media.dbstarplayer.bookmodel.BookReader myModelReader -> b
    java.util.HashMap myIdToHref -> c
    java.util.ArrayList myHtmlFileNames -> d
    java.util.ArrayList myTourTOC -> e
    java.util.ArrayList myGuideTOC -> f
    java.lang.String myOPFSchemePrefix -> g
    java.lang.String myFilePrefix -> h
    java.lang.String myNCXTOCFileName -> i
    java.lang.String myCoverFileName -> j
    java.util.HashMap myFileNumbers -> k
    java.util.HashMap myTOCLabels -> l
    int myState -> m
    void readBook(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.dbstarplayer.bookmodel.BookModel$Label getTOCLabel(java.lang.String) -> a
    void generateTOC() -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    boolean processNamespaces() -> processNamespaces
    void namespaceMapChangedHandler(java.util.Map) -> namespaceMapChangedHandler
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
com.media.dbstarplayer.formats.oeb.OEBBookReader$1 -> com.media.dbstarplayer.formats.c.f:
    com.media.dbstarplayer.formats.oeb.OEBBookReader this$0 -> a
    java.util.List getCandidates(java.lang.String) -> getCandidates
com.media.dbstarplayer.formats.oeb.OEBCoverBackgroundReader -> com.media.dbstarplayer.formats.c.g:
    com.media.zlibrary.core.image.ZLFileImage myImage -> a
    java.lang.String myPathPrefix -> b
    int myReadState -> c
    java.lang.String myCoverId -> d
    com.media.zlibrary.core.image.ZLFileImage readCover(com.media.zlibrary.core.filesystem.ZLFile) -> a
    boolean processNamespaces() -> processNamespaces
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    com.media.zlibrary.core.image.ZLFileImage imageByHref(java.lang.String) -> a
    boolean endElementHandler(java.lang.String) -> endElementHandler
com.media.dbstarplayer.formats.oeb.OEBCoverReader -> com.media.dbstarplayer.formats.c.h:
com.media.dbstarplayer.formats.oeb.OEBCoverReader$OEBCoverImage -> com.media.dbstarplayer.formats.c.i:
    com.media.zlibrary.core.filesystem.ZLFile myFile -> a
    com.media.zlibrary.core.image.ZLSingleImage getRealImage() -> getRealImage
    int sourceType() -> sourceType
    java.lang.String getId() -> getId
com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader -> com.media.dbstarplayer.formats.c.j:
    com.media.dbstarplayer.book.Book myBook -> a
    java.lang.String mySeriesTitle -> b
    java.lang.String mySeriesIndex -> c
    java.util.ArrayList myAuthorList -> d
    java.util.ArrayList myAuthorList2 -> e
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState myReadState -> f
    java.lang.StringBuilder myBuffer -> g
    int[] $SWITCH_TABLE$com$media$dbstarplayer$formats$oeb$OEBMetaInfoReader$ReadState -> h
    void readMetaInfo(com.media.zlibrary.core.filesystem.ZLFile) -> a
    boolean processNamespaces() -> processNamespaces
    boolean testDCTag(java.lang.String,java.lang.String) -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    int[] $SWITCH_TABLE$com$media$dbstarplayer$formats$oeb$OEBMetaInfoReader$ReadState() -> a
com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState -> com.media.dbstarplayer.formats.c.k:
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState Nothing -> a
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState Metadata -> b
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState Author -> c
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState Author2 -> d
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState Title -> e
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState Subject -> f
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState Language -> g
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState[] ENUM$VALUES -> h
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState[] values() -> values
    com.media.dbstarplayer.formats.oeb.OEBMetaInfoReader$ReadState valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.formats.oeb.OEBNativePlugin -> com.media.dbstarplayer.formats.c.l:
    void readModel(com.media.dbstarplayer.bookmodel.BookModel) -> readModel
    com.media.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> supportedEncodings
    void detectLanguageAndEncoding(com.media.dbstarplayer.book.Book) -> detectLanguageAndEncoding
com.media.dbstarplayer.formats.oeb.OEBNativePlugin$1 -> com.media.dbstarplayer.formats.c.m:
    com.media.dbstarplayer.formats.oeb.OEBNativePlugin this$0 -> a
    java.util.List getCandidates(java.lang.String) -> getCandidates
com.media.dbstarplayer.formats.oeb.OEBPlugin -> com.media.dbstarplayer.formats.c.n:
    com.media.zlibrary.core.filesystem.ZLFile getOpfFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    void readMetaInfo(com.media.dbstarplayer.book.Book) -> readMetaInfo
    void readUids(com.media.dbstarplayer.book.Book) -> readUids
    void readModel(com.media.dbstarplayer.bookmodel.BookModel) -> readModel
    com.media.zlibrary.core.image.ZLImage readCover(com.media.zlibrary.core.filesystem.ZLFile) -> readCover
    java.lang.String readAnnotation(com.media.zlibrary.core.filesystem.ZLFile) -> readAnnotation
    void detectLanguageAndEncoding(com.media.dbstarplayer.book.Book) -> detectLanguageAndEncoding
    com.media.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> supportedEncodings
com.media.dbstarplayer.formats.oeb.Reference -> com.media.dbstarplayer.formats.c.o:
    java.lang.String Title -> a
    java.lang.String HRef -> b
com.media.dbstarplayer.formats.oeb.XHTMLImageFinder -> com.media.dbstarplayer.formats.c.p:
    java.lang.String myXHTMLPathPrefix -> a
    com.media.zlibrary.core.image.ZLFileImage myImage -> b
    com.media.zlibrary.core.image.ZLFileImage getCoverImage(com.media.zlibrary.core.filesystem.ZLFile) -> a
    boolean processNamespaces() -> processNamespaces
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.dbstarplayer.formats.pdb.DocDecompressor -> com.media.dbstarplayer.formats.d.a:
    int decompress(java.io.InputStream,byte[],int) -> a
com.media.dbstarplayer.formats.pdb.MobipocketHtmlBookReader -> com.media.dbstarplayer.formats.d.b:
    java.nio.charset.CharsetDecoder myTocDecoder -> b
    com.media.dbstarplayer.formats.pdb.MobipocketStream myMobipocketStream -> c
    boolean myReadGuide -> d
    int myTocStartOffset -> e
    int myTocEndOffset -> f
    java.util.TreeMap myTocEntries -> g
    java.util.TreeMap myPositionToParagraph -> h
    java.util.TreeSet myFileposReferences -> i
    int myCurrentTocPosition -> j
    com.media.zlibrary.core.html.ZLByteBuffer myTocBuffer -> k
    java.io.InputStream getInputStream() -> c
    boolean tocRangeContainsPosition(int) -> a
    void startElementHandler(byte,int,com.media.zlibrary.core.html.ZLHtmlAttributeMap) -> a
    void endElementHandler(byte) -> a
    void byteDataHandler(byte[],int,int) -> a
    void startDocumentHandler() -> d
    void endDocumentHandler() -> e
com.media.dbstarplayer.formats.pdb.MobipocketPlugin -> com.media.dbstarplayer.formats.d.c:
    void readMetaInfo(com.media.dbstarplayer.book.Book) -> readMetaInfo
    void readUids(com.media.dbstarplayer.book.Book) -> readUids
    void readModel(com.media.dbstarplayer.bookmodel.BookModel) -> readModel
    com.media.zlibrary.core.image.ZLImage readCover(com.media.zlibrary.core.filesystem.ZLFile) -> readCover
    com.media.zlibrary.core.image.ZLSingleImage readCoverInternal(com.media.zlibrary.core.filesystem.ZLFile) -> b
    java.lang.String readAnnotation(com.media.zlibrary.core.filesystem.ZLFile) -> readAnnotation
    void detectLanguageAndEncoding(com.media.dbstarplayer.book.Book) -> detectLanguageAndEncoding
    com.media.zlibrary.core.encodings.EncodingCollection supportedEncodings() -> supportedEncodings
    com.media.zlibrary.core.image.ZLSingleImage access$1$6be72d18(com.media.zlibrary.core.filesystem.ZLFile) -> a
com.media.dbstarplayer.formats.pdb.MobipocketPlugin$1 -> com.media.dbstarplayer.formats.d.d:
    com.media.dbstarplayer.formats.pdb.MobipocketPlugin this$0 -> a
    com.media.zlibrary.core.filesystem.ZLFile val$file -> b
    java.lang.String getId() -> getId
    int sourceType() -> sourceType
    com.media.zlibrary.core.image.ZLSingleImage getRealImage() -> getRealImage
com.media.dbstarplayer.formats.pdb.MobipocketStream -> com.media.dbstarplayer.formats.d.e:
    int myFileSize -> i
    int myImageStartIndex -> j
    int getImageOffset(int) -> a
    int getImageLength(int) -> b
com.media.dbstarplayer.formats.pdb.PalmDocLikeStream -> com.media.dbstarplayer.formats.d.f:
    int myMaxRecordIndex -> a
    int myRecordIndex -> b
    int myCompressionType -> c
    long myFileSize -> i
    boolean fillBuffer() -> a
com.media.dbstarplayer.formats.pdb.PdbHeader -> com.media.dbstarplayer.formats.d.g:
    java.lang.String DocName -> a
    int Flags -> b
    java.lang.String Id -> c
    int[] Offsets -> d
    int length() -> a
com.media.dbstarplayer.formats.pdb.PdbStream -> com.media.dbstarplayer.formats.d.h:
    com.media.zlibrary.core.util.ZLInputStreamWithOffset myBase -> d
    com.media.dbstarplayer.formats.pdb.PdbHeader myHeader -> e
    byte[] myBuffer -> f
    short myBufferLength -> g
    short myBufferOffset -> h
    int read() -> read
    int read(byte[],int,int) -> read
    void close() -> close
    boolean fillBuffer() -> a
com.media.dbstarplayer.formats.pdb.PdbUtil -> com.media.dbstarplayer.formats.d.i:
    void skip(java.io.InputStream,int) -> a
    int readShort(java.io.InputStream) -> a
    long readInt(java.io.InputStream) -> b
com.media.dbstarplayer.formats.util.MiscUtil -> com.media.dbstarplayer.formats.e.a:
    java.lang.String htmlDirectoryPrefix(com.media.zlibrary.core.filesystem.ZLFile) -> a
    java.lang.String archiveEntryName(java.lang.String) -> a
    boolean isHexDigit(char) -> a
    java.lang.String decodeHtmlReference(java.lang.String) -> b
com.media.dbstarplayer.formats.xhtml.XHTMLReader -> com.media.dbstarplayer.formats.f.a:
    java.util.HashMap ourTagActions -> e
    com.media.dbstarplayer.formats.xhtml.XHTMLTagAction ourNullAction -> f
    com.media.dbstarplayer.bookmodel.BookReader myModelReader -> g
    java.lang.String myPathPrefix -> a
    java.lang.String myLocalPathPrefix -> h
    java.lang.String myReferencePrefix -> b
    boolean myPreformatted -> c
    boolean myInsideBody -> d
    java.util.Map myFileNumbers -> i
    java.util.Map myLocalFileNumbers -> j
    java.util.HashMap myActions -> k
    java.util.ArrayList ourExternalDTDs -> l
    com.media.dbstarplayer.formats.xhtml.XHTMLTagAction addAction(java.lang.String,com.media.dbstarplayer.formats.xhtml.XHTMLTagAction) -> a
    com.media.dbstarplayer.bookmodel.BookReader getModelReader() -> a
    java.lang.String getLocalFileAlias(java.lang.String) -> a
    java.lang.String getFileAlias(java.lang.String) -> b
    void readFile(com.media.zlibrary.core.filesystem.ZLFile,java.lang.String) -> a
    com.media.dbstarplayer.formats.xhtml.XHTMLTagAction getTagAction(java.lang.String) -> c
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
    java.util.List xhtmlDTDs() -> b
    java.util.List externalDTDs() -> externalDTDs
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    boolean processNamespaces() -> processNamespaces
com.media.dbstarplayer.formats.xhtml.XHTMLReader$1 -> com.media.dbstarplayer.formats.f.b:
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagAction -> com.media.dbstarplayer.formats.f.c:
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagBodyAction -> com.media.dbstarplayer.formats.f.d:
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagControlAction -> com.media.dbstarplayer.formats.f.e:
    byte myControl -> a
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagHyperlinkAction -> com.media.dbstarplayer.formats.f.f:
    byte[] myHyperlinkStack -> a
    int myHyperlinkStackSize -> b
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagImageAction -> com.media.dbstarplayer.formats.f.g:
    java.lang.String myNamespace -> a
    java.lang.String myNameAttribute -> b
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagItemAction -> com.media.dbstarplayer.formats.f.h:
    char[] BULLET -> a
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagParagraphAction -> com.media.dbstarplayer.formats.f.i:
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagParagraphWithControlAction -> com.media.dbstarplayer.formats.f.j:
    byte myControl -> a
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagPreAction -> com.media.dbstarplayer.formats.f.k:
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.formats.xhtml.XHTMLTagRestartParagraphAction -> com.media.dbstarplayer.formats.f.l:
    void doAtStart(com.media.dbstarplayer.formats.xhtml.XHTMLReader,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void doAtEnd(com.media.dbstarplayer.formats.xhtml.XHTMLReader) -> a
com.media.dbstarplayer.library.AuthorListTree -> com.media.dbstarplayer.b.a:
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent -> a
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void waitForOpening() -> b
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    boolean createAuthorSubTree(com.media.dbstarplayer.book.Author) -> a
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    boolean isSelectable() -> e
    java.lang.String getTreeTitle() -> f
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent() -> l
com.media.dbstarplayer.library.AuthorTree -> com.media.dbstarplayer.b.b:
    com.media.dbstarplayer.book.Author Author -> a
    java.lang.String getName() -> c
    java.lang.String getStringId() -> g
    java.lang.String getSortKey() -> h
    boolean createSubTree(com.media.dbstarplayer.book.Book) -> a
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    java.lang.String getSummary() -> d
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void waitForOpening() -> b
com.media.dbstarplayer.library.BookInSeriesTree -> com.media.dbstarplayer.b.c:
    int compareTo(com.media.dbstarplayer.tree.FBTree) -> a
com.media.dbstarplayer.library.BookTree -> com.media.dbstarplayer.b.d:
    com.media.dbstarplayer.book.Book Book -> a
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    com.media.dbstarplayer.book.Book getBook() -> a_
    java.lang.String getStringId() -> g
    com.media.zlibrary.core.image.ZLImage createCover() -> j
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    java.lang.String getSortKey() -> h
    int compareTo(com.media.dbstarplayer.tree.FBTree) -> a
    boolean equals(java.lang.Object) -> equals
com.media.dbstarplayer.library.BookWithAuthorsTree -> com.media.dbstarplayer.b.e:
    java.lang.String getSummary() -> d
com.media.dbstarplayer.library.FavoritesTree -> com.media.dbstarplayer.b.f:
    com.media.zlibrary.core.resources.ZLResource myResource -> a
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> f
    java.lang.String getSummary() -> d
    java.lang.String getStringId() -> g
    boolean isSelectable() -> e
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    java.lang.String getOpeningStatusMessage() -> k
    boolean createSubTree(com.media.dbstarplayer.book.Book) -> a
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    void waitForOpening() -> b
com.media.dbstarplayer.library.FileFirstLevelTree -> com.media.dbstarplayer.b.g:
    void addChild(java.lang.String,java.lang.String) -> a
    java.lang.String getTreeTitle() -> f
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    boolean isSelectable() -> e
com.media.dbstarplayer.library.FileTree -> com.media.dbstarplayer.b.h:
    com.media.zlibrary.core.filesystem.ZLFile myFile -> a
    java.lang.String myName -> c
    java.lang.String mySummary -> d
    boolean myIsSelectable -> e
    java.lang.Object myBook -> f
    java.lang.Object NULL_BOOK -> g
    java.util.Comparator ourFileComparator -> h
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> f
    java.lang.String getStringId() -> g
    java.lang.String getSummary() -> d
    boolean isSelectable() -> e
    com.media.zlibrary.core.image.ZLImage createCover() -> j
    com.media.zlibrary.core.filesystem.ZLFile getFile() -> l
    com.media.dbstarplayer.book.Book getBook() -> a_
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    java.lang.String getOpeningStatusMessage() -> k
    void waitForOpening() -> b
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.media.dbstarplayer.tree.FBTree) -> a
com.media.dbstarplayer.library.FileTree$1 -> com.media.dbstarplayer.b.i:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.media.dbstarplayer.library.FilteredTree -> com.media.dbstarplayer.b.j:
    com.media.dbstarplayer.book.Filter myFilter -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent -> c
    java.lang.String getSummary() -> d
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void createBookSubTrees() -> l
    void waitForOpening() -> b
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    boolean createSubTree(com.media.dbstarplayer.book.Book) -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent() -> n
com.media.dbstarplayer.library.FirstLevelTree -> com.media.dbstarplayer.b.k:
    java.lang.String myId -> a
    com.media.zlibrary.core.resources.ZLResource myResource -> c
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> f
    java.lang.String getSummary() -> d
    java.lang.String getStringId() -> g
    boolean isSelectable() -> e
com.media.dbstarplayer.library.LibraryTree -> com.media.dbstarplayer.b.l:
    com.media.dbstarplayer.book.IBookCollection Collection -> b
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent -> a
    com.media.zlibrary.core.resources.ZLResource resource() -> m
    com.media.dbstarplayer.book.Book getBook() -> a_
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    boolean isSelectable() -> e
    boolean createTagSubTree(com.media.dbstarplayer.book.Tag) -> a
    boolean createBookWithAuthorsSubTree(com.media.dbstarplayer.book.Book) -> c
    boolean removeBook(com.media.dbstarplayer.book.Book) -> d
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    int compareTo(com.media.dbstarplayer.tree.FBTree) -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent() -> l
com.media.dbstarplayer.library.RecentBooksTree -> com.media.dbstarplayer.b.m:
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void waitForOpening() -> b
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    boolean isSelectable() -> e
    java.lang.String getTreeTitle() -> f
com.media.dbstarplayer.library.RootTree -> com.media.dbstarplayer.b.n:
    com.media.dbstarplayer.library.LibraryTree getLibraryTree(com.media.dbstarplayer.tree.FBTree$Key) -> a
    com.media.dbstarplayer.library.SearchResultsTree getSearchResultsTree() -> l
    com.media.dbstarplayer.library.SearchResultsTree createSearchResultsTree(java.lang.String) -> a
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    java.lang.String getStringId() -> g
com.media.dbstarplayer.library.SearchResultsTree -> com.media.dbstarplayer.b.o:
    java.lang.String Pattern -> a
    java.lang.String myId -> c
    com.media.zlibrary.core.resources.ZLResource myResource -> d
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> f
    java.lang.String getStringId() -> g
    boolean isSelectable() -> e
    java.lang.String getSummary() -> d
    boolean createSubTree(com.media.dbstarplayer.book.Book) -> a
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void waitForOpening() -> b
com.media.dbstarplayer.library.SeriesListTree -> com.media.dbstarplayer.b.p:
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent -> a
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    java.lang.String getOpeningStatusMessage() -> k
    void waitForOpening() -> b
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    boolean createSeriesSubTree(java.lang.String) -> a
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    boolean isSelectable() -> e
    java.lang.String getTreeTitle() -> f
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent() -> l
com.media.dbstarplayer.library.SeriesTree -> com.media.dbstarplayer.b.q:
    com.media.dbstarplayer.book.Series Series -> a
    com.media.dbstarplayer.book.Filter filter(com.media.dbstarplayer.book.Series,com.media.dbstarplayer.book.Author) -> a
    java.lang.String getName() -> c
    java.lang.String getStringId() -> g
    java.lang.String getSortKey() -> h
    boolean createSubTree(com.media.dbstarplayer.book.Book) -> a
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    java.lang.String getSummary() -> d
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void waitForOpening() -> b
com.media.dbstarplayer.library.TagListTree -> com.media.dbstarplayer.b.r:
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent -> a
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void waitForOpening() -> b
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    boolean isSelectable() -> e
    java.lang.String getTreeTitle() -> f
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent() -> l
com.media.dbstarplayer.library.TagTree -> com.media.dbstarplayer.b.s:
    com.media.dbstarplayer.book.Tag Tag -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent -> c
    java.lang.String getName() -> c
    java.lang.String getStringId() -> g
    java.lang.String getSortKey() -> h
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    void waitForOpening() -> b
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    boolean createSubTree(com.media.dbstarplayer.book.Book) -> a
    java.lang.String getSummary() -> d
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent() -> n
com.media.dbstarplayer.library.TitleListTree -> com.media.dbstarplayer.b.t:
    boolean myGroupByFirstLetter -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent -> c
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void waitForOpening() -> b
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    boolean createTitleSubTree(java.lang.String) -> a
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    boolean isSelectable() -> e
    java.lang.String getTreeTitle() -> f
    int[] $SWITCH_TABLE$com$media$dbstarplayer$book$BookEvent() -> l
com.media.dbstarplayer.library.TitleTree -> com.media.dbstarplayer.b.u:
    java.lang.String Prefix -> a
    java.lang.String getName() -> c
    java.lang.String getStringId() -> g
    boolean createSubTree(com.media.dbstarplayer.book.Book) -> a
    boolean containsBook(com.media.dbstarplayer.book.Book) -> b
    java.lang.String getSummary() -> d
    boolean onBookEvent(com.media.dbstarplayer.book.BookEvent,com.media.dbstarplayer.book.Book) -> a
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    void waitForOpening() -> b
com.media.dbstarplayer.network.AbstractNetworkLink -> com.media.dbstarplayer.c.a:
    int myId -> f
    java.lang.String mySiteName -> a
    java.lang.String myTitle -> b
    java.lang.String mySummary -> c
    java.lang.String myLanguage -> d
    com.media.dbstarplayer.network.urlInfo.UrlInfoCollection myInfos -> e
    int getId() -> a
    void setId(int) -> a
    java.lang.String getSiteName() -> b
    java.lang.String getTitle() -> c
    java.lang.String getSummary() -> d
    java.lang.String getLanguage() -> e
    java.lang.String getUrl(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> a
    com.media.dbstarplayer.network.urlInfo.UrlInfoWithDate getUrlInfo(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> b
    java.util.Set getUrlKeys() -> f
    com.media.dbstarplayer.network.BasketItem getBasketItem() -> g
    com.media.dbstarplayer.network.NetworkOperationData createOperationData(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
    java.lang.String toString() -> toString
    java.lang.String getTitleForComparison() -> h
    int getLanguageOrder(java.lang.String) -> a
    int compareTo(java.lang.Object) -> compareTo
com.media.dbstarplayer.network.AllCatalogsSearchItem -> com.media.dbstarplayer.c.b:
    void runSearch(com.media.dbstarplayer.network.tree.NetworkItemsLoader,java.lang.String) -> a
    com.media.zlibrary.core.util.MimeType getMimeType() -> a
    java.lang.String getUrl(java.lang.String) -> a
com.media.dbstarplayer.network.Base64EncodedImage -> com.media.dbstarplayer.c.c:
    java.lang.String myDecodedFileName -> a
    java.lang.String makeImagesDir() -> a
    void setData(java.lang.String) -> a
    boolean isCacheValid(java.io.File) -> isCacheValid
    java.lang.String encodedFileName() -> encodedFileName
    java.lang.String decodedFileName() -> decodedFileName
com.media.dbstarplayer.network.BasketItem -> com.media.dbstarplayer.c.d:
    long myGeneration -> b
    com.media.zlibrary.core.options.ZLStringListOption myBooksInBasketOption -> c
    java.util.Map myBooks -> d
    void addItem(com.media.dbstarplayer.network.NetworkBookItem) -> a
    java.lang.CharSequence getSummary() -> b_
    boolean canBeOpened() -> b
    java.lang.String getStringId() -> c
    long getGeneration() -> d
    void add(com.media.dbstarplayer.network.NetworkBookItem) -> b
    void remove(com.media.dbstarplayer.network.NetworkBookItem) -> c
    void clear() -> e
    boolean contains(com.media.dbstarplayer.network.NetworkBookItem) -> d
    java.util.List bookIds() -> f
    com.media.dbstarplayer.network.NetworkBookItem getBook(java.lang.String) -> a
    boolean isFullyLoaded() -> g
    com.media.zlibrary.core.money.Money cost() -> n
com.media.dbstarplayer.network.HtmlUtil -> com.media.dbstarplayer.c.e:
    java.lang.CharSequence getHtmlText(java.lang.String) -> a
com.media.dbstarplayer.network.ICustomNetworkLink -> com.media.dbstarplayer.c.f:
    void setTitle(java.lang.String) -> a
    void setSummary(java.lang.String) -> b
    void setUrl(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type,java.lang.String,com.media.zlibrary.core.util.MimeType) -> a
    boolean isObsolete$1349f3() -> h
    void reloadInfo(boolean,boolean) -> a
    boolean hasChanges() -> i
com.media.dbstarplayer.network.INetworkLink -> com.media.dbstarplayer.c.g:
    int getId() -> a
    void setId(int) -> a
    java.lang.String getSiteName() -> b
    java.lang.String getTitle() -> c
    java.lang.String getSummary() -> d
    java.lang.String getUrl(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> a
    com.media.dbstarplayer.network.urlInfo.UrlInfoWithDate getUrlInfo(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> b
    java.util.Set getUrlKeys() -> f
    com.media.dbstarplayer.network.INetworkLink$Type getType() -> j
    java.lang.String getLanguage() -> e
    com.media.dbstarplayer.network.NetworkOperationData createOperationData(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
    com.media.dbstarplayer.network.BasketItem getBasketItem() -> g
    com.media.zlibrary.core.network.ZLNetworkRequest simpleSearchRequest(java.lang.String,com.media.dbstarplayer.network.NetworkOperationData) -> a
    com.media.zlibrary.core.network.ZLNetworkRequest resume(com.media.dbstarplayer.network.NetworkOperationData) -> a
    com.media.dbstarplayer.network.NetworkCatalogItem libraryItem() -> k
    com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager authenticationManager() -> l
    java.lang.String rewriteUrl(java.lang.String,boolean) -> a
com.media.dbstarplayer.network.INetworkLink$Type -> com.media.dbstarplayer.c.h:
    com.media.dbstarplayer.network.INetworkLink$Type Predefined -> a
    com.media.dbstarplayer.network.INetworkLink$Type Custom -> b
    com.media.dbstarplayer.network.INetworkLink$Type Local -> c
    int Index -> d
    com.media.dbstarplayer.network.INetworkLink$Type[] ENUM$VALUES -> e
    com.media.dbstarplayer.network.INetworkLink$Type byIndex(int) -> a
    com.media.dbstarplayer.network.INetworkLink$Type[] values() -> values
    com.media.dbstarplayer.network.INetworkLink$Type valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.network.IPredefinedNetworkLink -> com.media.dbstarplayer.c.i:
    java.lang.String getPredefinedId() -> h
com.media.dbstarplayer.network.NetworkBookItem -> com.media.dbstarplayer.c.j:
    int Index -> a
    java.lang.String Id -> b
    java.util.LinkedList Authors -> c
    java.util.LinkedList Tags -> d
    java.lang.String SeriesTitle -> e
    float IndexInSeries -> f
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$urlInfo$UrlInfo$Type -> i
    boolean isFullyLoaded() -> b
    void loadFullInformation() -> c
    com.media.dbstarplayer.network.NetworkCatalogItem createRelatedCatalogItem(com.media.dbstarplayer.network.urlInfo.RelatedUrlInfo) -> a
    com.media.dbstarplayer.network.NetworkBookItem$Status getStatus() -> d
    com.media.dbstarplayer.network.urlInfo.BookUrlInfo getReferenceInternal(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> d
    com.media.dbstarplayer.network.urlInfo.BookUrlInfo reference(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> a
    com.media.dbstarplayer.network.urlInfo.BookBuyUrlInfo buyInfo() -> e
    java.lang.String localCopyFileName() -> f
    java.lang.String getStringId() -> g
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$urlInfo$UrlInfo$Type() -> h
com.media.dbstarplayer.network.NetworkBookItem$AuthorData -> com.media.dbstarplayer.c.k:
    java.lang.String DisplayName -> a
    java.lang.String SortKey -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
com.media.dbstarplayer.network.NetworkBookItem$Status -> com.media.dbstarplayer.c.l:
    com.media.dbstarplayer.network.NetworkBookItem$Status NotAvailable -> a
    com.media.dbstarplayer.network.NetworkBookItem$Status Downloaded -> b
    com.media.dbstarplayer.network.NetworkBookItem$Status ReadyForDownload -> c
    com.media.dbstarplayer.network.NetworkBookItem$Status CanBePurchased -> d
    com.media.dbstarplayer.network.NetworkBookItem$Status[] ENUM$VALUES -> e
    com.media.dbstarplayer.network.NetworkBookItem$Status[] values() -> values
    com.media.dbstarplayer.network.NetworkBookItem$Status valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.network.NetworkBookItemComparator -> com.media.dbstarplayer.c.m:
    int compare(java.lang.Object,java.lang.Object) -> compare
com.media.dbstarplayer.network.NetworkCatalogItem -> com.media.dbstarplayer.c.n:
    com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility myAccessibility -> b
    int myFlags -> c
    boolean UpdatingInProgress -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$NetworkCatalogItem$Accessibility -> d
    java.util.Map extraData() -> h
    boolean canBeOpened() -> b
    void loadChildren(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
    boolean supportsResumeLoading() -> i
    void resumeLoading(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> b
    int getFlags() -> j
    void setFlags(int) -> a
    com.media.zlibrary.core.util.ZLBoolean3 getVisibility() -> k
    java.lang.String getStringId() -> c
    void doLoadChildren(com.media.dbstarplayer.network.NetworkOperationData,com.media.zlibrary.core.network.ZLNetworkRequest) -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$NetworkCatalogItem$Accessibility() -> d
com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility -> com.media.dbstarplayer.c.o:
    com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility NEVER -> a
    com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility ALWAYS -> b
    com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility SIGNED_IN -> c
    com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility HAS_BOOKS -> d
    com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility[] ENUM$VALUES -> e
    com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility[] values() -> values
    com.media.dbstarplayer.network.NetworkCatalogItem$Accessibility valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.network.NetworkDatabase -> com.media.dbstarplayer.c.p:
    com.media.dbstarplayer.network.NetworkDatabase ourInstance -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$INetworkLink$Type -> b
    com.media.dbstarplayer.network.NetworkDatabase Instance() -> b
    com.media.dbstarplayer.network.INetworkLink createLink(int,com.media.dbstarplayer.network.INetworkLink$Type,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.media.dbstarplayer.network.urlInfo.UrlInfoCollection) -> a
    java.util.List listLinks() -> a
    void saveLink(com.media.dbstarplayer.network.INetworkLink) -> a
    void deleteLink(com.media.dbstarplayer.network.INetworkLink) -> b
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$INetworkLink$Type() -> c
com.media.dbstarplayer.network.NetworkImage -> com.media.dbstarplayer.c.q:
    java.lang.String Url -> a
    com.media.zlibrary.core.image.ZLFileImage myFileImage -> b
    java.lang.String getFilePath() -> a
    int sourceType() -> sourceType
    java.lang.String getId() -> getId
    java.lang.String getURI() -> getURI
    void synchronize() -> synchronize
    void synchronizeFast() -> synchronizeFast
    void synchronizeInternal(boolean) -> a
    java.io.InputStream inputStream() -> inputStream
com.media.dbstarplayer.network.NetworkItem -> com.media.dbstarplayer.c.r:
    com.media.dbstarplayer.network.INetworkLink Link -> g
    java.lang.CharSequence Title -> h
    java.lang.CharSequence mySummary -> a
    com.media.dbstarplayer.network.urlInfo.UrlInfoCollection myURLs -> b
    void setSummary(java.lang.CharSequence) -> a
    java.lang.CharSequence getSummary() -> b_
    void addUrls(com.media.dbstarplayer.network.urlInfo.UrlInfoCollection) -> a
    java.util.List getAllInfos() -> l
    java.util.List getAllInfos(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> b
    java.lang.String getUrl(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> c
    java.lang.String getImageUrl() -> m
com.media.dbstarplayer.network.NetworkLibrary -> com.media.dbstarplayer.c.s:
    com.media.dbstarplayer.network.NetworkLibrary ourInstance -> b
    com.media.zlibrary.core.options.ZLStringOption NetworkSearchPatternOption -> a
    java.util.List myLinks -> c
    java.util.Set myListeners -> d
    java.util.Map myLoaders -> e
    java.util.Map myImageMap -> f
    com.media.zlibrary.core.options.ZLStringListOption myActiveLanguageCodesOption -> g
    com.media.dbstarplayer.network.tree.RootTree myRootTree -> h
    com.media.dbstarplayer.network.tree.RootTree myFakeRootTree -> i
    boolean myChildrenAreInvalid -> j
    boolean myUpdateVisibility -> k
    boolean myIsInitialized -> l
    com.media.dbstarplayer.network.SearchItem mySearchItem -> m
    boolean myUpdateInProgress -> n
    java.lang.Object myUpdateLock -> o
    com.media.dbstarplayer.network.NetworkLibrary Instance() -> a
    java.util.List languageCodes() -> b
    com.media.zlibrary.core.options.ZLStringListOption activeLanguageCodesOption() -> k
    java.util.List activeLanguageCodes() -> c
    void setActiveLanguageCodes(java.util.Collection) -> a
    java.util.List activeLinks() -> d
    com.media.dbstarplayer.network.INetworkLink getLinkByUrl(java.lang.String) -> a
    com.media.dbstarplayer.network.INetworkLink getLinkBySiteName(java.lang.String) -> b
    boolean isInitialized() -> e
    void initialize() -> f
    void removeAllLoadedLinks() -> l
    void runBackgroundUpdate(boolean) -> a
    java.lang.String rewriteUrl(java.lang.String,boolean) -> a
    void invalidateVisibility() -> g
    void updateVisibility() -> m
    void synchronize() -> h
    com.media.dbstarplayer.network.NetworkTree getRootTree() -> i
    com.media.dbstarplayer.network.tree.NetworkBookTree getFakeBookTree(com.media.dbstarplayer.network.NetworkBookItem) -> a
    com.media.dbstarplayer.network.tree.BasketCatalogTree getFakeBasketTree(com.media.dbstarplayer.network.BasketItem) -> a
    com.media.dbstarplayer.network.tree.NetworkCatalogTree getFakeCatalogTree(com.media.dbstarplayer.network.NetworkCatalogItem) -> a
    com.media.dbstarplayer.network.NetworkTree getTreeByKey(com.media.dbstarplayer.tree.FBTree$Key) -> a
    void addCustomLink(com.media.dbstarplayer.network.ICustomNetworkLink) -> a
    void removeCustomLink(com.media.dbstarplayer.network.ICustomNetworkLink) -> b
    void addChangeListener(com.media.dbstarplayer.network.NetworkLibrary$ChangeListener) -> a
    void removeChangeListener(com.media.dbstarplayer.network.NetworkLibrary$ChangeListener) -> b
    void fireModelChangedEvent(com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code,java.lang.Object[]) -> a
    void storeLoader(com.media.dbstarplayer.network.NetworkTree,com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
    com.media.dbstarplayer.network.tree.NetworkItemsLoader getStoredLoader(com.media.dbstarplayer.network.NetworkTree) -> a
    boolean isUpdateInProgress() -> j
    void startLoading(com.media.dbstarplayer.network.NetworkCatalogItem) -> b
    void stopLoading(com.media.dbstarplayer.network.NetworkCatalogItem) -> c
    boolean isLoadingInProgress(com.media.dbstarplayer.network.NetworkTree) -> b
    void removeStoredLoader(com.media.dbstarplayer.network.NetworkTree) -> c
    com.media.zlibrary.core.image.ZLImage getImageByUrl(java.lang.String,com.media.zlibrary.core.util.MimeType) -> a
    void access$0(com.media.dbstarplayer.network.NetworkLibrary,boolean) -> a
    void access$1(com.media.dbstarplayer.network.NetworkLibrary,boolean) -> b
com.media.dbstarplayer.network.NetworkLibrary$1 -> com.media.dbstarplayer.c.t:
    com.media.dbstarplayer.network.NetworkLibrary this$0 -> a
    boolean val$force -> b
    void run() -> run
com.media.dbstarplayer.network.NetworkLibrary$ChangeListener -> com.media.dbstarplayer.c.u:
    void onLibraryChanged(com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code,java.lang.Object[]) -> a
com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code -> com.media.dbstarplayer.c.v:
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code InitializationFinished -> a
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code InitializationFailed -> b
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code SomeCode -> c
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code SignedIn -> d
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code Found -> e
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code NotFound -> f
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code EmptyCatalog -> g
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code NetworkError -> h
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code[] ENUM$VALUES -> i
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code[] values() -> values
    com.media.dbstarplayer.network.NetworkLibrary$ChangeListener$Code valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.network.NetworkOperationData -> com.media.dbstarplayer.c.w:
    com.media.dbstarplayer.network.INetworkLink Link -> a
    com.media.dbstarplayer.network.tree.NetworkItemsLoader Loader -> b
    java.lang.String ResumeURI -> c
    com.media.zlibrary.core.network.ZLNetworkRequest resume() -> a
com.media.dbstarplayer.network.NetworkTree -> com.media.dbstarplayer.c.x:
    java.lang.String getSummary() -> d
    com.media.dbstarplayer.network.INetworkLink getLink() -> e
    com.media.zlibrary.core.image.ZLImage createCover(com.media.dbstarplayer.network.NetworkItem) -> a
    void removeTrees(java.util.Set) -> a
com.media.dbstarplayer.network.NetworkURLCatalogItem -> com.media.dbstarplayer.c.y:
    java.lang.String getCatalogUrl() -> d
    boolean canBeOpened() -> b
    java.lang.String getStringId() -> c
com.media.dbstarplayer.network.SearchItem -> com.media.dbstarplayer.c.z:
    java.lang.String myPattern -> b
    void setPattern(java.lang.String) -> b
    java.lang.String getPattern() -> d
    boolean canBeOpened() -> b
    void loadChildren(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
    void runSearch(com.media.dbstarplayer.network.tree.NetworkItemsLoader,java.lang.String) -> a
    java.lang.String getStringId() -> c
    com.media.zlibrary.core.util.MimeType getMimeType() -> a
    java.lang.String getUrl(java.lang.String) -> a
com.media.dbstarplayer.network.SingleCatalogSearchItem -> com.media.dbstarplayer.c.aa:
    void runSearch(com.media.dbstarplayer.network.tree.NetworkItemsLoader,java.lang.String) -> a
    com.media.zlibrary.core.util.MimeType getMimeType() -> a
    java.lang.String getUrl(java.lang.String) -> a
com.media.dbstarplayer.network.TopUpItem -> com.media.dbstarplayer.c.ab:
com.media.dbstarplayer.network.atom.ATOMAuthor -> com.media.dbstarplayer.c.a.a:
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMCategory -> com.media.dbstarplayer.c.a.b:
    java.lang.String getTerm() -> a
    java.lang.String getLabel() -> b
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMCommonAttributes -> com.media.dbstarplayer.c.a.c:
    com.media.zlibrary.core.xml.ZLStringMap myAttributes -> a
    void readAttribute(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> a
    java.lang.String getAttribute(java.lang.String) -> a
    void addAttribute(java.lang.String,java.lang.String) -> a
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMDateConstruct -> com.media.dbstarplayer.c.a.d:
    int Year -> a
    int Month -> b
    int Day -> c
    int Hour -> d
    int Minutes -> e
    int Seconds -> f
    float SecondFraction -> g
    int TZHour -> h
    int TZMinutes -> i
    int[] DAYS_IN_MONTHS -> j
    boolean parse(java.lang.String,com.media.dbstarplayer.network.atom.ATOMDateConstruct) -> a
    void appendChars$3fb042fc(java.lang.StringBuilder,int) -> a
    java.lang.String toString() -> toString
    int daysInMonth(int,int) -> a
    int compareTo(com.media.dbstarplayer.network.atom.ATOMDateConstruct) -> a
    boolean equals(java.lang.Object) -> equals
    int compareTo(java.lang.Object) -> compareTo
com.media.dbstarplayer.network.atom.ATOMEntry -> com.media.dbstarplayer.c.a.e:
    com.media.dbstarplayer.network.atom.ATOMId Id -> a
    java.util.LinkedList Authors -> b
    java.util.LinkedList Categories -> c
    java.util.LinkedList Contributors -> d
    java.util.LinkedList Links -> e
    com.media.dbstarplayer.network.atom.ATOMPublished Published -> f
    java.lang.CharSequence Summary -> g
    java.lang.CharSequence Content -> h
    java.lang.CharSequence Title -> i
    com.media.dbstarplayer.network.atom.ATOMUpdated Updated -> j
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMFeedHandler -> com.media.dbstarplayer.c.a.f:
    void processFeedStart() -> a
    boolean processFeedMetadata(com.media.dbstarplayer.network.atom.ATOMFeedMetadata,boolean) -> a
    boolean processFeedEntry(com.media.dbstarplayer.network.atom.ATOMEntry) -> a
    void processFeedEnd() -> b
    com.media.dbstarplayer.network.atom.ATOMFeedMetadata createFeed(com.media.zlibrary.core.xml.ZLStringMap) -> a
    com.media.dbstarplayer.network.atom.ATOMEntry createEntry(com.media.zlibrary.core.xml.ZLStringMap) -> b
    com.media.dbstarplayer.network.atom.ATOMLink createLink(com.media.zlibrary.core.xml.ZLStringMap) -> c
com.media.dbstarplayer.network.atom.ATOMFeedMetadata -> com.media.dbstarplayer.c.a.g:
    com.media.dbstarplayer.network.atom.ATOMId Id -> a
    java.util.LinkedList Authors -> b
    java.util.LinkedList Categories -> c
    com.media.dbstarplayer.network.atom.ATOMIcon Icon -> d
    java.util.LinkedList Links -> e
    java.lang.CharSequence Subtitle -> f
    java.lang.CharSequence Title -> g
    com.media.dbstarplayer.network.atom.ATOMUpdated Updated -> h
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMIcon -> com.media.dbstarplayer.c.a.h:
    java.lang.String Uri -> a
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMId -> com.media.dbstarplayer.c.a.i:
    java.lang.String Uri -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMLink -> com.media.dbstarplayer.c.a.j:
    java.lang.String getHref() -> a
    java.lang.String getRel() -> b
    java.lang.String getType() -> c
    java.lang.String getTitle() -> d
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMPersonConstruct -> com.media.dbstarplayer.c.a.k:
    java.lang.String Name -> a
    java.lang.String Uri -> b
    java.lang.String Email -> c
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.atom.ATOMPublished -> com.media.dbstarplayer.c.a.l:
com.media.dbstarplayer.network.atom.ATOMUpdated -> com.media.dbstarplayer.c.a.m:
com.media.dbstarplayer.network.atom.ATOMXMLReader -> com.media.dbstarplayer.c.a.n:
    com.media.dbstarplayer.network.atom.ATOMFeedHandler myFeedHandler -> d
    com.media.dbstarplayer.network.atom.ATOMFeedMetadata myFeed -> e
    com.media.dbstarplayer.network.atom.ATOMEntry myEntry -> f
    com.media.dbstarplayer.network.atom.ATOMAuthor myAuthor -> g
    com.media.dbstarplayer.network.atom.ATOMId myId -> h
    com.media.dbstarplayer.network.atom.ATOMLink myLink -> i
    com.media.dbstarplayer.network.atom.ATOMCategory myCategory -> j
    com.media.dbstarplayer.network.atom.ATOMUpdated myUpdated -> k
    com.media.dbstarplayer.network.atom.ATOMPublished myPublished -> l
    com.media.dbstarplayer.network.atom.ATOMIcon myIcon -> m
    java.util.Map myNamespaceMap -> n
    int myState -> a
    java.lang.StringBuilder myBuffer -> o
    com.media.dbstarplayer.network.atom.FormattedBuffer myFormattedBuffer -> b
    boolean myFeedMetadataProcessed -> c
    com.media.dbstarplayer.network.atom.ATOMFeedHandler getATOMFeedHandler() -> a
    com.media.dbstarplayer.network.atom.ATOMFeedMetadata getATOMFeed() -> b
    com.media.dbstarplayer.network.atom.ATOMEntry getATOMEntry() -> c
    com.media.dbstarplayer.network.atom.ATOMLink getATOMLink() -> d
    boolean processNamespaces() -> processNamespaces
    void namespaceMapChangedHandler(java.util.Map) -> namespaceMapChangedHandler
    java.lang.String getNamespace(java.lang.String) -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    java.lang.String extractBufferContent() -> e
    boolean startElementHandler(java.lang.String,java.lang.String,com.media.zlibrary.core.xml.ZLStringMap,java.lang.String) -> a
    boolean endElementHandler(java.lang.String,java.lang.String,java.lang.String) -> a
    void characterDataHandler(char[],int,int) -> characterDataHandler
    void setFormattingType(java.lang.String) -> b
com.media.dbstarplayer.network.atom.AbstractATOMFeedHandler -> com.media.dbstarplayer.c.a.o:
    void processFeedStart() -> a
    void processFeedEnd() -> b
    boolean processFeedMetadata(com.media.dbstarplayer.network.atom.ATOMFeedMetadata,boolean) -> a
    boolean processFeedEntry(com.media.dbstarplayer.network.atom.ATOMEntry) -> a
    com.media.dbstarplayer.network.atom.ATOMFeedMetadata createFeed(com.media.zlibrary.core.xml.ZLStringMap) -> a
    com.media.dbstarplayer.network.atom.ATOMEntry createEntry(com.media.zlibrary.core.xml.ZLStringMap) -> b
    com.media.dbstarplayer.network.atom.ATOMLink createLink(com.media.zlibrary.core.xml.ZLStringMap) -> c
com.media.dbstarplayer.network.atom.FormattedBuffer -> com.media.dbstarplayer.c.a.p:
    com.media.dbstarplayer.network.atom.FormattedBuffer$Type myType -> a
    java.lang.StringBuilder myBuffer -> b
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$atom$FormattedBuffer$Type -> c
    void appendText(java.lang.CharSequence) -> a
    void appendStartTag(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> a
    void appendEndTag(java.lang.String) -> a
    void reset(com.media.dbstarplayer.network.atom.FormattedBuffer$Type) -> a
    void reset() -> a
    java.lang.CharSequence getText() -> b
    java.lang.String toString() -> toString
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$atom$FormattedBuffer$Type() -> c
com.media.dbstarplayer.network.atom.FormattedBuffer$Type -> com.media.dbstarplayer.c.a.q:
    com.media.dbstarplayer.network.atom.FormattedBuffer$Type Text -> a
    com.media.dbstarplayer.network.atom.FormattedBuffer$Type Html -> b
    com.media.dbstarplayer.network.atom.FormattedBuffer$Type XHtml -> c
    com.media.dbstarplayer.network.atom.FormattedBuffer$Type[] ENUM$VALUES -> d
    com.media.dbstarplayer.network.atom.FormattedBuffer$Type[] values() -> values
    com.media.dbstarplayer.network.atom.FormattedBuffer$Type valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager -> com.media.dbstarplayer.c.b.a:
    java.util.HashMap ourManagers -> c
    com.media.dbstarplayer.network.INetworkLink Link -> a
    com.media.zlibrary.core.options.ZLStringOption UserNameOption -> b
    com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager createManager(com.media.dbstarplayer.network.INetworkLink,java.lang.Class) -> a
    java.lang.String getUserName() -> a
    java.lang.String getVisibleUserName() -> b
    boolean isAuthorised(boolean) -> a
    void authorise(java.lang.String,java.lang.String) -> a
    void logOut() -> c
    com.media.dbstarplayer.network.urlInfo.BookUrlInfo downloadReference(com.media.dbstarplayer.network.NetworkBookItem) -> a
    void refreshAccountInformation() -> d
    boolean mayBeAuthorised(boolean) -> b
    boolean needsInitialization() -> e
    void initialize() -> f
    boolean needPurchase(com.media.dbstarplayer.network.NetworkBookItem) -> b
    void purchaseBook(com.media.dbstarplayer.network.NetworkBookItem) -> c
    java.util.List purchasedBooks() -> g
    com.media.zlibrary.core.money.Money currentAccount() -> h
    java.lang.String topupLink(com.media.zlibrary.core.money.Money) -> a
    java.util.Map getTopupData() -> i
com.media.dbstarplayer.network.authentication.litres.ByAuthorCatalogItem -> com.media.dbstarplayer.c.b.a.a:
    java.util.Comparator getComparator() -> d
    java.lang.String getStringId() -> c
com.media.dbstarplayer.network.authentication.litres.ByDateCatalogItem -> com.media.dbstarplayer.c.b.a.b:
    java.util.Comparator getComparator() -> d
    java.lang.String getStringId() -> c
com.media.dbstarplayer.network.authentication.litres.BySeriesCatalogItem -> com.media.dbstarplayer.c.b.a.c:
    java.util.Comparator getComparator() -> d
    boolean accepts(com.media.dbstarplayer.network.NetworkItem) -> a
    java.lang.String getStringId() -> c
com.media.dbstarplayer.network.authentication.litres.BySeriesCatalogItem$1 -> com.media.dbstarplayer.c.b.a.d:
    com.media.dbstarplayer.network.authentication.litres.BySeriesCatalogItem this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.media.dbstarplayer.network.authentication.litres.ByTitleCatalogItem -> com.media.dbstarplayer.c.b.a.e:
    java.util.Comparator getComparator() -> d
    java.lang.String getStringId() -> c
com.media.dbstarplayer.network.authentication.litres.ByTitleCatalogItem$1 -> com.media.dbstarplayer.c.b.a.f:
    com.media.dbstarplayer.network.authentication.litres.ByTitleCatalogItem this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.media.dbstarplayer.network.authentication.litres.LitResAuthenticationManager -> com.media.dbstarplayer.c.b.a.g:
    boolean myFullyInitialized -> c
    com.media.zlibrary.core.options.ZLStringOption mySidOption -> d
    com.media.zlibrary.core.options.ZLStringOption myUserIdOption -> e
    com.media.zlibrary.core.options.ZLBooleanOption myCanRebillOption -> f
    java.lang.String myInitializedDataSid -> g
    com.media.zlibrary.core.money.Money myAccount -> h
    com.media.dbstarplayer.network.authentication.litres.LitResAuthenticationManager$BookCollection myPurchasedBooks -> i
    boolean initUser(java.lang.String,java.lang.String,java.lang.String,boolean) -> a
    void logOut() -> c
    void logOut(boolean) -> c
    boolean isAuthorised(boolean) -> a
    void authorise(java.lang.String,java.lang.String) -> a
    com.media.dbstarplayer.network.urlInfo.BookUrlInfo downloadReference(com.media.dbstarplayer.network.NetworkBookItem) -> a
    boolean needPurchase(com.media.dbstarplayer.network.NetworkBookItem) -> b
    void purchaseBook(com.media.dbstarplayer.network.NetworkBookItem) -> c
    java.lang.String topupLink(com.media.zlibrary.core.money.Money) -> a
    com.media.zlibrary.core.money.Money currentAccount() -> h
    void reloadPurchasedBooks() -> j
    java.util.List purchasedBooks() -> g
    boolean needsInitialization() -> e
    void initialize() -> f
    void refreshAccountInformation() -> d
    com.media.dbstarplayer.network.authentication.litres.LitResNetworkRequest loadPurchasedBooksRequest(java.lang.String) -> a
    void loadPurchasedBooksOnSuccess(com.media.dbstarplayer.network.authentication.litres.LitResNetworkRequest) -> a
    com.media.dbstarplayer.network.authentication.litres.LitResNetworkRequest loadAccountRequest(java.lang.String) -> b
    java.util.Map getTopupData() -> i
    java.lang.String parseUrl(java.lang.String,java.util.Map) -> a
com.media.dbstarplayer.network.authentication.litres.LitResAuthenticationManager$BookCollection -> com.media.dbstarplayer.c.b.a.h:
    java.util.Map myMap -> b
    java.util.List myList -> c
    com.media.dbstarplayer.network.authentication.litres.LitResAuthenticationManager this$0 -> a
    void clear() -> a
    boolean isEmpty() -> b
    void addToStart(com.media.dbstarplayer.network.NetworkBookItem) -> a
    void addToEnd(com.media.dbstarplayer.network.NetworkBookItem) -> b
    boolean contains(com.media.dbstarplayer.network.NetworkBookItem) -> c
    java.util.List list() -> c
com.media.dbstarplayer.network.authentication.litres.LitResAuthenticationXMLReader -> com.media.dbstarplayer.c.b.a.i:
    java.lang.String HostName -> a
    com.media.zlibrary.core.network.ZLNetworkException myException -> b
    void setException(com.media.zlibrary.core.network.ZLNetworkException) -> a
    com.media.zlibrary.core.network.ZLNetworkException getException() -> a
com.media.dbstarplayer.network.authentication.litres.LitResBookshelfItem -> com.media.dbstarplayer.c.b.a.j:
    boolean myForceReload -> b
    void loadChildren(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
com.media.dbstarplayer.network.authentication.litres.LitResLoginXMLReader -> com.media.dbstarplayer.c.b.a.k:
    java.lang.String FirstName -> b
    java.lang.String LastName -> c
    java.lang.String UserId -> d
    java.lang.String Sid -> e
    boolean CanRebill -> f
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.dbstarplayer.network.authentication.litres.LitResNetworkRequest -> com.media.dbstarplayer.c.b.a.l:
    com.media.dbstarplayer.network.authentication.litres.LitResAuthenticationXMLReader Reader -> a
    void handleStream(java.io.InputStream,int) -> a
com.media.dbstarplayer.network.authentication.litres.LitResPurchaseXMLReader -> com.media.dbstarplayer.c.b.a.m:
    java.lang.String Account -> b
    java.lang.String BookId -> c
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.dbstarplayer.network.authentication.litres.LitResRecommendationsItem -> com.media.dbstarplayer.c.b.a.n:
    java.lang.String getCatalogUrl() -> d
com.media.dbstarplayer.network.authentication.litres.LitResUtil -> com.media.dbstarplayer.c.b.a.o:
    java.lang.String url(com.media.dbstarplayer.network.INetworkLink,java.lang.String) -> a
com.media.dbstarplayer.network.authentication.litres.LitResXMLReader -> com.media.dbstarplayer.c.b.a.p:
    com.media.dbstarplayer.network.opds.OPDSNetworkLink Link -> b
    java.util.List Books -> c
    int myIndex -> d
    java.lang.String myBookId -> e
    java.lang.String myTitle -> f
    java.lang.String mySeriesTitle -> g
    int myIndexInSeries -> h
    java.lang.CharSequence mySummary -> i
    com.media.dbstarplayer.network.urlInfo.UrlInfoCollection myUrls -> j
    java.lang.String myAuthorFirstName -> k
    java.lang.String myAuthorMiddleName -> l
    java.lang.String myAuthorLastName -> m
    java.util.LinkedList myAuthors -> n
    java.util.LinkedList myTags -> o
    int myState -> p
    java.lang.StringBuilder myBuffer -> q
    com.media.dbstarplayer.network.atom.FormattedBuffer myAnnotationBuffer -> r
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
com.media.dbstarplayer.network.authentication.litres.SortedCatalogItem -> com.media.dbstarplayer.c.b.a.q:
    java.util.List myChildren -> b
    boolean canBeOpened() -> b
    boolean isEmpty() -> e
    java.util.Comparator getComparator() -> d
    boolean accepts(com.media.dbstarplayer.network.NetworkItem) -> a
    void loadChildren(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
com.media.dbstarplayer.network.opds.AbstractOPDSFeedHandler -> com.media.dbstarplayer.c.c.a:
    com.media.dbstarplayer.network.atom.ATOMLink createLink(com.media.zlibrary.core.xml.ZLStringMap) -> c
    com.media.dbstarplayer.network.atom.ATOMEntry createEntry(com.media.zlibrary.core.xml.ZLStringMap) -> b
    com.media.dbstarplayer.network.atom.ATOMFeedMetadata createFeed(com.media.zlibrary.core.xml.ZLStringMap) -> a
com.media.dbstarplayer.network.opds.DCDate -> com.media.dbstarplayer.c.c.b:
com.media.dbstarplayer.network.opds.OPDSBasketItem -> com.media.dbstarplayer.c.c.c:
    void loadChildren(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
com.media.dbstarplayer.network.opds.OPDSBookItem -> com.media.dbstarplayer.c.c.d:
    boolean myInformationIsFull -> i
    com.media.dbstarplayer.network.opds.OPDSBookItem create(com.media.dbstarplayer.network.INetworkLink,java.lang.String) -> a
    java.lang.CharSequence getAnnotation(com.media.dbstarplayer.network.opds.OPDSEntry) -> b
    java.util.List getAuthors(com.media.dbstarplayer.network.opds.OPDSEntry) -> c
    java.util.List getTags(com.media.dbstarplayer.network.opds.OPDSEntry) -> d
    com.media.dbstarplayer.network.urlInfo.UrlInfoCollection getUrls(com.media.dbstarplayer.network.opds.OPDSNetworkLink,com.media.dbstarplayer.network.opds.OPDSEntry,java.lang.String) -> b
    void collectReferences(com.media.dbstarplayer.network.urlInfo.UrlInfoCollection,com.media.dbstarplayer.network.opds.OPDSLink,java.lang.String,com.media.dbstarplayer.network.urlInfo.UrlInfo$Type,com.media.zlibrary.core.money.Money,boolean) -> a
    int formatByMimeType(com.media.zlibrary.core.util.MimeType) -> a
    boolean isFullyLoaded() -> b
    void loadFullInformation() -> c
    com.media.dbstarplayer.network.NetworkCatalogItem createRelatedCatalogItem(com.media.dbstarplayer.network.urlInfo.RelatedUrlInfo) -> a
    com.media.dbstarplayer.network.urlInfo.UrlInfoCollection access$1(com.media.dbstarplayer.network.opds.OPDSNetworkLink,com.media.dbstarplayer.network.opds.OPDSEntry,java.lang.String) -> a
    void access$2(com.media.dbstarplayer.network.opds.OPDSBookItem,com.media.dbstarplayer.network.urlInfo.UrlInfoCollection) -> a
    java.lang.CharSequence access$3(com.media.dbstarplayer.network.opds.OPDSEntry) -> a
    void access$4(com.media.dbstarplayer.network.opds.OPDSBookItem,java.lang.CharSequence) -> a
    void access$5$d85a9f5(com.media.dbstarplayer.network.opds.OPDSBookItem) -> a
com.media.dbstarplayer.network.opds.OPDSBookItem$1 -> com.media.dbstarplayer.c.c.e:
    com.media.dbstarplayer.network.opds.OPDSBookItem$CreateBookHandler val$handler -> a
    void handleStream(java.io.InputStream,int) -> a
com.media.dbstarplayer.network.opds.OPDSBookItem$2 -> com.media.dbstarplayer.c.c.f:
    com.media.dbstarplayer.network.opds.OPDSBookItem this$0 -> a
    java.lang.String val$url -> f
    void handleStream(java.io.InputStream,int) -> a
com.media.dbstarplayer.network.opds.OPDSBookItem$CreateBookHandler -> com.media.dbstarplayer.c.c.g:
    com.media.dbstarplayer.network.INetworkLink myLink -> a
    com.media.dbstarplayer.network.opds.OPDSBookItem myBook -> c
    com.media.dbstarplayer.network.opds.OPDSBookItem getBook() -> c
    boolean processFeedEntry(com.media.dbstarplayer.network.atom.ATOMEntry) -> a
com.media.dbstarplayer.network.opds.OPDSBookItem$LoadInfoHandler -> com.media.dbstarplayer.c.c.h:
    com.media.dbstarplayer.network.opds.OPDSBookItem this$0 -> a
    boolean processFeedEntry(com.media.dbstarplayer.network.atom.ATOMEntry) -> a
com.media.dbstarplayer.network.opds.OPDSBookItem$SingleEntryFeedHandler -> com.media.dbstarplayer.c.c.i:
    java.lang.String myUrl -> b
    void processFeedStart() -> a
    void processFeedEnd() -> b
    boolean processFeedMetadata(com.media.dbstarplayer.network.atom.ATOMFeedMetadata,boolean) -> a
com.media.dbstarplayer.network.opds.OPDSCatalogInfoHandler -> com.media.dbstarplayer.c.c.j:
    boolean FeedStarted -> a
    java.lang.String Icon -> b
    java.lang.CharSequence Title -> c
    java.lang.CharSequence Summary -> d
    com.media.dbstarplayer.network.opds.OpenSearchDescription DirectOpenSearchDescription -> e
    java.util.List myOpensearchDescriptionURLs -> f
    java.lang.String myBaseURL -> g
    com.media.dbstarplayer.network.opds.OPDSNetworkLink myLink -> h
    void processFeedStart() -> a
    void processFeedEnd() -> b
    boolean processFeedMetadata(com.media.dbstarplayer.network.atom.ATOMFeedMetadata,boolean) -> a
    boolean processFeedEntry(com.media.dbstarplayer.network.atom.ATOMEntry) -> a
com.media.dbstarplayer.network.opds.OPDSCatalogItem -> com.media.dbstarplayer.c.c.k:
    com.media.dbstarplayer.network.opds.OPDSCatalogItem$State myLoadingState -> b
    java.util.Map myExtraData -> c
    void doLoadChildren(com.media.zlibrary.core.network.ZLNetworkRequest) -> a
    java.util.Map extraData() -> h
    void loadChildren(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
    boolean supportsResumeLoading() -> i
    void resumeLoading(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> b
com.media.dbstarplayer.network.opds.OPDSCatalogItem$State -> com.media.dbstarplayer.c.c.l:
    java.lang.String LastLoadedId -> d
    java.util.HashSet LoadedIds -> e
com.media.dbstarplayer.network.opds.OPDSCustomNetworkLink -> com.media.dbstarplayer.c.c.m:
    com.media.dbstarplayer.network.INetworkLink$Type myType -> f
    boolean myHasChanges -> g
    com.media.dbstarplayer.network.INetworkLink$Type getType() -> j
    boolean hasChanges() -> i
    void setSummary(java.lang.String) -> b
    void setTitle(java.lang.String) -> a
    void setUrl(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type,java.lang.String,com.media.zlibrary.core.util.MimeType) -> a
    boolean isObsolete$1349f3() -> h
    void reloadInfo(boolean,boolean) -> a
    void access$0(com.media.dbstarplayer.network.opds.OPDSCustomNetworkLink,java.lang.String) -> a
    void access$1(com.media.dbstarplayer.network.opds.OPDSCustomNetworkLink,java.lang.String) -> b
com.media.dbstarplayer.network.opds.OPDSCustomNetworkLink$1 -> com.media.dbstarplayer.c.c.n:
    com.media.dbstarplayer.network.opds.OPDSCustomNetworkLink this$0 -> a
    java.util.LinkedList val$opensearchDescriptionURLs -> f
    java.util.List val$descriptions -> g
    boolean val$urlsOnly -> h
    void handleStream(java.io.InputStream,int) -> a
com.media.dbstarplayer.network.opds.OPDSCustomNetworkLink$2 -> com.media.dbstarplayer.c.c.o:
    com.media.dbstarplayer.network.opds.OPDSCustomNetworkLink this$0 -> a
    java.util.List val$descriptions -> f
    void handleStream(java.io.InputStream,int) -> a
com.media.dbstarplayer.network.opds.OPDSEntry -> com.media.dbstarplayer.c.c.p:
    java.lang.String DCLanguage -> k
    java.lang.String DCPublisher -> l
    com.media.dbstarplayer.network.opds.DCDate DCIssued -> m
    java.lang.String SeriesTitle -> n
    float SeriesIndex -> o
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.opds.OPDSFeedHandler -> com.media.dbstarplayer.c.c.q:
    com.media.dbstarplayer.network.NetworkCatalogItem myCatalog -> a
    java.lang.String myBaseURL -> b
    com.media.dbstarplayer.network.opds.OPDSCatalogItem$State myData -> c
    int myIndex -> d
    java.lang.String myNextURL -> e
    java.lang.String mySkipUntilId -> f
    boolean myFoundNewIds -> g
    int myItemsToLoad -> h
    void processFeedStart() -> a
    void processFeedEnd() -> b
    boolean tryInterrupt() -> c
    boolean processFeedMetadata(com.media.dbstarplayer.network.atom.ATOMFeedMetadata,boolean) -> a
    boolean processFeedEntry(com.media.dbstarplayer.network.atom.ATOMEntry) -> a
com.media.dbstarplayer.network.opds.OPDSFeedMetadata -> com.media.dbstarplayer.c.c.r:
    int OpensearchTotalResults -> i
    int OpensearchItemsPerPage -> j
    int OpensearchStartIndex -> k
    java.lang.String ViewType -> l
com.media.dbstarplayer.network.opds.OPDSLink -> com.media.dbstarplayer.c.c.s:
    java.util.LinkedList Prices -> a
    java.util.LinkedList Formats -> b
    com.media.zlibrary.core.money.Money getPrice(java.lang.String) -> b
    com.media.zlibrary.core.money.Money selectBestPrice() -> e
com.media.dbstarplayer.network.opds.OPDSLinkReader -> com.media.dbstarplayer.c.c.t:
    java.lang.String FILE_NAME -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$opds$OPDSLinkReader$CacheMode -> b
    java.util.List loadOPDSLinks(com.media.dbstarplayer.network.opds.OPDSLinkReader$CacheMode) -> a
    int[] $SWITCH_TABLE$com$media$dbstarplayer$network$opds$OPDSLinkReader$CacheMode() -> a
com.media.dbstarplayer.network.opds.OPDSLinkReader$1 -> com.media.dbstarplayer.c.c.u:
    com.media.dbstarplayer.network.opds.OPDSLinkXMLReader val$xmlReader -> a
    void handleStream(java.io.InputStream,int) -> a
com.media.dbstarplayer.network.opds.OPDSLinkReader$CacheMode -> com.media.dbstarplayer.c.c.v:
    com.media.dbstarplayer.network.opds.OPDSLinkReader$CacheMode LOAD -> a
    com.media.dbstarplayer.network.opds.OPDSLinkReader$CacheMode UPDATE -> b
    com.media.dbstarplayer.network.opds.OPDSLinkReader$CacheMode CLEAR -> c
    com.media.dbstarplayer.network.opds.OPDSLinkReader$CacheMode[] ENUM$VALUES -> d
    com.media.dbstarplayer.network.opds.OPDSLinkReader$CacheMode[] values() -> values
    com.media.dbstarplayer.network.opds.OPDSLinkReader$CacheMode valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.network.opds.OPDSLinkXMLReader -> com.media.dbstarplayer.c.c.w:
    java.util.List links() -> e
    boolean startElementHandler(java.lang.String,java.lang.String,com.media.zlibrary.core.xml.ZLStringMap,java.lang.String) -> a
com.media.dbstarplayer.network.opds.OPDSLinkXMLReader$FeedHandler -> com.media.dbstarplayer.c.c.x:
    java.util.List myLinks -> a
    java.lang.String myAuthenticationType -> b
    java.util.LinkedList myUrlRewritingRules -> c
    java.util.HashMap myRelationAliases -> d
    java.util.LinkedHashMap myExtraData -> e
    java.util.List links() -> c
    void setAuthenticationType(java.lang.String) -> a
    void addUrlRewritingRule(com.media.dbstarplayer.network.opds.URLRewritingRule) -> a
    void addRelationAlias(com.media.dbstarplayer.network.opds.RelationAlias,java.lang.String) -> a
    void putExtraData(java.lang.String,java.lang.String) -> a
    void clear() -> d
    void processFeedStart() -> a
    void processFeedEnd() -> b
    boolean processFeedMetadata(com.media.dbstarplayer.network.atom.ATOMFeedMetadata,boolean) -> a
    boolean processFeedEntry(com.media.dbstarplayer.network.atom.ATOMEntry) -> a
com.media.dbstarplayer.network.opds.OPDSNetworkLink -> com.media.dbstarplayer.c.c.y:
    java.util.TreeMap myRelationAliases -> f
    java.util.LinkedList myUrlRewritingRules -> g
    java.util.Map myExtraData -> h
    com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager myAuthenticationManager -> i
    com.media.dbstarplayer.network.BasketItem myBasketItem -> j
    void setRelationAliases(java.util.Map) -> a
    void setUrlRewritingRules(java.util.List) -> a
    void setExtraData(java.util.Map) -> b
    void setAuthenticationManager(com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager) -> a
    com.media.zlibrary.core.network.ZLNetworkRequest createNetworkData(java.lang.String,com.media.zlibrary.core.util.MimeType,com.media.dbstarplayer.network.opds.OPDSCatalogItem$State) -> a
    com.media.dbstarplayer.network.opds.OPDSCatalogItem$State createOperationData(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> b
    com.media.zlibrary.core.network.ZLNetworkRequest simpleSearchRequest(java.lang.String,com.media.dbstarplayer.network.NetworkOperationData) -> a
    com.media.zlibrary.core.network.ZLNetworkRequest resume(com.media.dbstarplayer.network.NetworkOperationData) -> a
    com.media.dbstarplayer.network.NetworkCatalogItem libraryItem() -> k
    com.media.dbstarplayer.network.authentication.NetworkAuthenticationManager authenticationManager() -> l
    java.lang.String rewriteUrl(java.lang.String,boolean) -> a
    java.lang.String relation(java.lang.String,com.media.zlibrary.core.util.MimeType) -> a
    com.media.dbstarplayer.network.BasketItem getBasketItem() -> g
    java.lang.String toString() -> toString
    com.media.dbstarplayer.network.NetworkOperationData createOperationData(com.media.dbstarplayer.network.tree.NetworkItemsLoader) -> a
com.media.dbstarplayer.network.opds.OPDSNetworkLink$1 -> com.media.dbstarplayer.c.c.z:
    com.media.dbstarplayer.network.opds.OPDSNetworkLink this$0 -> a
    com.media.dbstarplayer.network.opds.OPDSCatalogItem$State val$result -> f
    com.media.dbstarplayer.network.NetworkLibrary val$library -> g
    com.media.dbstarplayer.network.NetworkCatalogItem val$catalogItem -> h
    void handleStream(java.io.InputStream,int) -> a
    void doAfter$1385ff() -> a
com.media.dbstarplayer.network.opds.OPDSPredefinedNetworkLink -> com.media.dbstarplayer.c.c.aa:
    java.lang.String myPredefinedId -> f
    com.media.dbstarplayer.network.INetworkLink$Type getType() -> j
    java.lang.String getPredefinedId() -> h
com.media.dbstarplayer.network.opds.OPDSXMLReader -> com.media.dbstarplayer.c.c.ab:
    com.media.dbstarplayer.network.opds.DCDate myDCIssued -> d
    java.lang.String myPriceCurrency -> e
    boolean startElementHandler(java.lang.String,java.lang.String,com.media.zlibrary.core.xml.ZLStringMap,java.lang.String) -> a
    boolean endElementHandler(java.lang.String,java.lang.String,java.lang.String) -> a
com.media.dbstarplayer.network.opds.OpenSearchDescription -> com.media.dbstarplayer.c.c.ac:
    java.lang.String Template -> a
    int IndexOffset -> b
    int PageOffset -> c
    com.media.zlibrary.core.util.MimeType Mime -> d
    int ItemsPerPage -> e
    com.media.dbstarplayer.network.opds.OpenSearchDescription createDefault(java.lang.String,com.media.zlibrary.core.util.MimeType) -> a
    boolean isValid() -> a
    java.lang.String makeQuery(java.lang.String) -> a
com.media.dbstarplayer.network.opds.OpenSearchXMLReader -> com.media.dbstarplayer.c.c.ad:
    java.util.List myDescriptions -> a
    java.lang.String myBaseURL -> b
    int myState -> c
    boolean processNamespaces() -> processNamespaces
    int parseInt(java.lang.String) -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
com.media.dbstarplayer.network.opds.RelationAlias -> com.media.dbstarplayer.c.c.ae:
    java.lang.String Alias -> a
    java.lang.String Type -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.media.dbstarplayer.network.opds.URLRewritingRule -> com.media.dbstarplayer.c.c.af:
    int myType -> a
    int myApply -> b
    java.util.HashMap myParameters -> c
    int whereToApply() -> a
    java.lang.String apply(java.lang.String) -> a
com.media.dbstarplayer.network.tree.AddCustomCatalogItemTree -> com.media.dbstarplayer.c.d.a:
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    java.lang.String getStringId() -> g
com.media.dbstarplayer.network.tree.BasketCatalogTree -> com.media.dbstarplayer.c.d.b:
    long myGeneration -> c
    boolean canUseParentCover() -> i
    java.util.List subTrees() -> subTrees
    void addItem(com.media.dbstarplayer.network.NetworkItem) -> b
com.media.dbstarplayer.network.tree.CatalogExpander -> com.media.dbstarplayer.c.d.c:
    boolean myCheckAuthentication -> a
    boolean myResumeNotLoad -> b
    void doBefore() -> a
    void doLoading() -> b
    void onFinish(com.media.zlibrary.core.network.ZLNetworkException,boolean) -> a
com.media.dbstarplayer.network.tree.NetworkAuthorTree -> com.media.dbstarplayer.c.d.d:
    com.media.dbstarplayer.network.NetworkBookItem$AuthorData Author -> a
    java.lang.String getName() -> c
    java.lang.String getSortKey() -> h
    java.lang.String getStringId() -> g
com.media.dbstarplayer.network.tree.NetworkBookTree -> com.media.dbstarplayer.c.d.e:
    com.media.dbstarplayer.network.NetworkBookItem Book -> a
    boolean myShowAuthors -> b
    boolean canUseParentCover() -> i
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    com.media.zlibrary.core.image.ZLImage createCover() -> j
    java.lang.String getStringId() -> g
com.media.dbstarplayer.network.tree.NetworkCatalogRootTree -> com.media.dbstarplayer.c.d.f:
    java.lang.String getTreeTitle() -> f
    void addSpecialTrees() -> l
    int compareTo(com.media.dbstarplayer.tree.FBTree) -> a
com.media.dbstarplayer.network.tree.NetworkCatalogTree -> com.media.dbstarplayer.c.d.g:
    com.media.dbstarplayer.network.INetworkLink myLink -> c
    com.media.dbstarplayer.network.NetworkCatalogItem Item -> a
    java.util.ArrayList myChildrenItems -> b
    int myLastTotalChildren -> d
    long myLoadedTime -> e
    com.media.dbstarplayer.network.SearchItem mySearchItem -> f
    java.util.Set myUnconfirmedTrees -> g
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3 -> h
    com.media.dbstarplayer.network.INetworkLink getLink() -> e
    com.media.zlibrary.core.util.ZLBoolean3 getVisibility() -> m
    boolean canBeOpened() -> n
    void addSpecialTrees() -> l
    void addItem(com.media.dbstarplayer.network.NetworkItem) -> b
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    java.lang.String getTreeTitle() -> f
    com.media.zlibrary.core.image.ZLImage createCover() -> j
    boolean isContentValid() -> o
    void updateLoadedTime() -> p
    void updateVisibility() -> q
    void removeTrees(java.util.Set) -> a
    java.lang.String getStringId() -> g
    void startItemsLoader(boolean,boolean) -> a
    void clearCatalog() -> r
    void confirmAllItems() -> s
    void removeUnconfirmedItems() -> t
    void loadMoreChildren(int) -> a
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3() -> u
com.media.dbstarplayer.network.tree.NetworkItemsLoader -> com.media.dbstarplayer.c.d.h:
    com.media.dbstarplayer.network.tree.NetworkCatalogTree myTree -> a
    java.lang.Runnable myPostRunnable -> b
    boolean myFinishedFlag -> c
    java.lang.Object myInterruptLock -> d
    com.media.dbstarplayer.network.tree.NetworkItemsLoader$InterruptionState myInterruptionState -> e
    void start() -> c
    com.media.dbstarplayer.network.tree.NetworkCatalogTree getTree() -> d
    void run() -> run
    boolean canResumeLoading() -> e
    boolean isLoadingInterrupted() -> h
    void interrupt() -> f
    boolean confirmInterruption() -> g
    void onNewItem(com.media.dbstarplayer.network.NetworkItem) -> a
    void setPostRunnable(java.lang.Runnable) -> a
    void onFinish(com.media.zlibrary.core.network.ZLNetworkException,boolean) -> a
    void doBefore() -> a
    void doLoading() -> b
com.media.dbstarplayer.network.tree.NetworkItemsLoader$InterruptionState -> com.media.dbstarplayer.c.d.i:
    com.media.dbstarplayer.network.tree.NetworkItemsLoader$InterruptionState NONE -> a
    com.media.dbstarplayer.network.tree.NetworkItemsLoader$InterruptionState REQUESTED -> b
    com.media.dbstarplayer.network.tree.NetworkItemsLoader$InterruptionState CONFIRMED -> c
    com.media.dbstarplayer.network.tree.NetworkItemsLoader$InterruptionState[] ENUM$VALUES -> d
    com.media.dbstarplayer.network.tree.NetworkItemsLoader$InterruptionState[] values() -> values
    com.media.dbstarplayer.network.tree.NetworkItemsLoader$InterruptionState valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.network.tree.NetworkSeriesTree -> com.media.dbstarplayer.c.d.j:
    java.lang.String SeriesTitle -> a
    boolean myShowAuthors -> b
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    com.media.zlibrary.core.image.ZLImage createCover() -> j
    void removeTrees(java.util.Set) -> a
    java.lang.String getStringId() -> g
com.media.dbstarplayer.network.tree.NetworkTreeFactory -> com.media.dbstarplayer.c.d.k:
    com.media.dbstarplayer.network.NetworkTree createNetworkTree(com.media.dbstarplayer.network.tree.NetworkCatalogTree,com.media.dbstarplayer.network.NetworkItem,int) -> a
com.media.dbstarplayer.network.tree.RootTree -> com.media.dbstarplayer.c.d.l:
    boolean IsFake -> a
    java.lang.String myId -> b
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    java.lang.String getStringId() -> g
com.media.dbstarplayer.network.tree.SearchCatalogTree -> com.media.dbstarplayer.c.d.m:
    void setPattern(java.lang.String) -> a
    boolean canUseParentCover() -> i
    boolean isContentValid() -> o
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> f
    java.lang.String getSummary() -> d
    com.media.zlibrary.core.util.MimeType getMimeType() -> u
    java.lang.String getUrl(java.lang.String) -> b
    void startItemsLoader(java.lang.String) -> c
com.media.dbstarplayer.network.tree.Searcher -> com.media.dbstarplayer.c.d.n:
    java.lang.String myPattern -> a
    boolean myItemFound -> b
    void doBefore() -> a
    void interrupt() -> f
    void doLoading() -> b
    void onNewItem(com.media.dbstarplayer.network.NetworkItem) -> a
    void onFinish(com.media.zlibrary.core.network.ZLNetworkException,boolean) -> a
com.media.dbstarplayer.network.tree.TopUpTree -> com.media.dbstarplayer.c.d.o:
    com.media.dbstarplayer.network.TopUpItem Item -> a
    java.lang.String getName() -> c
    java.lang.String getSummary() -> d
    com.media.zlibrary.core.image.ZLImage createCover() -> j
    java.lang.String getStringId() -> g
com.media.dbstarplayer.network.urlInfo.BookBuyUrlInfo -> com.media.dbstarplayer.c.e.a:
    long serialVersionUID -> serialVersionUID
    com.media.zlibrary.core.money.Money Price -> a
com.media.dbstarplayer.network.urlInfo.BookUrlInfo -> com.media.dbstarplayer.c.e.b:
    long serialVersionUID -> serialVersionUID
    int BookFormat -> b
    java.lang.String makeBookFileName(java.lang.String,int,com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> a
    java.lang.String cleanUrl() -> a
    java.lang.String localCopyFileName(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> a
    java.lang.String toString() -> toString
com.media.dbstarplayer.network.urlInfo.DecoratedBookUrlInfo -> com.media.dbstarplayer.c.e.c:
    long serialVersionUID -> serialVersionUID
    java.lang.String myCleanUrl -> a
    java.lang.String cleanUrl() -> a
com.media.dbstarplayer.network.urlInfo.RelatedUrlInfo -> com.media.dbstarplayer.c.e.d:
    long serialVersionUID -> serialVersionUID
    java.lang.String Title -> a
com.media.dbstarplayer.network.urlInfo.UrlInfo -> com.media.dbstarplayer.c.e.e:
    long serialVersionUID -> serialVersionUID
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type InfoType -> c
    java.lang.String Url -> d
    com.media.zlibrary.core.util.MimeType Mime -> e
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.dbstarplayer.network.urlInfo.UrlInfo$Type -> com.media.dbstarplayer.c.e.f:
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type Catalog -> a
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type HtmlPage -> b
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type SingleEntry -> c
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type Related -> d
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type Image -> e
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type Thumbnail -> f
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type Search -> g
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type ListBooks -> h
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type SignIn -> i
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type SignOut -> j
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type SignUp -> k
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type TopUp -> l
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type RecoverPassword -> m
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type Book -> n
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type BookConditional -> o
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type BookDemo -> p
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type BookFullOrDemo -> q
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type BookBuy -> r
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type BookBuyInBrowser -> s
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type TOC -> t
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type Comments -> u
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type[] ENUM$VALUES -> v
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type[] values() -> values
    com.media.dbstarplayer.network.urlInfo.UrlInfo$Type valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.network.urlInfo.UrlInfoCollection -> com.media.dbstarplayer.c.e.g:
    long serialVersionUID -> serialVersionUID
    java.util.LinkedList myInfos -> a
    void upgrade(com.media.dbstarplayer.network.urlInfo.UrlInfoCollection) -> a
    void addInfo(com.media.dbstarplayer.network.urlInfo.UrlInfo) -> a
    com.media.dbstarplayer.network.urlInfo.UrlInfo getInfo(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> a
    java.util.List getAllInfos() -> a
    java.util.List getAllInfos(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> b
    java.lang.String getUrl(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> c
    void clear() -> b
    void removeAllInfos(com.media.dbstarplayer.network.urlInfo.UrlInfo$Type) -> d
    boolean isEmpty() -> c
com.media.dbstarplayer.network.urlInfo.UrlInfoWithDate -> com.media.dbstarplayer.c.e.h:
    long serialVersionUID -> serialVersionUID
    com.media.dbstarplayer.network.urlInfo.UrlInfoWithDate NULL -> a
    java.util.Date Updated -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.dbstarplayer.sort.TitledEntity -> com.media.dbstarplayer.d.a:
    java.lang.String myTitle -> myTitle
    java.lang.String mySortKey -> mySortKey
    java.util.Map ARTICLES -> ARTICLES
    java.lang.String[] EN_ARTICLES -> EN_ARTICLES
    java.lang.String[] FR_ARTICLES -> FR_ARTICLES
    java.lang.String[] GE_ARTICLES -> GE_ARTICLES
    java.lang.String[] IT_ARTICLES -> IT_ARTICLES
    java.lang.String[] SP_ARTICLES -> SP_ARTICLES
    java.lang.String getTitle() -> getTitle
    boolean isTitleEmpty() -> isTitleEmpty
    void setTitle(java.lang.String) -> setTitle
    void resetSortKey() -> resetSortKey
    java.lang.String getLanguage() -> getLanguage
    java.lang.String getSortKey() -> getSortKey
    java.lang.String trim(java.lang.String,java.lang.String) -> trim
    java.lang.String normalize(java.lang.String) -> normalize
    java.lang.String firstTitleLetter() -> firstTitleLetter
com.media.dbstarplayer.tips.Tip -> com.media.dbstarplayer.e.a:
    java.lang.CharSequence Title -> a
    java.lang.CharSequence Content -> b
com.media.dbstarplayer.tips.TipsFeedHandler -> com.media.dbstarplayer.e.b:
    java.util.List Tips -> a
    boolean processFeedEntry(com.media.dbstarplayer.network.atom.ATOMEntry) -> a
com.media.dbstarplayer.tips.TipsManager -> com.media.dbstarplayer.e.c:
    com.media.dbstarplayer.tips.TipsManager ourInstance -> c
    com.media.zlibrary.core.options.ZLBooleanOption TipsAreInitializedOption -> a
    com.media.zlibrary.core.options.ZLBooleanOption ShowTipsOption -> b
    com.media.zlibrary.core.options.ZLIntegerOption myLastShownOption -> d
    com.media.zlibrary.core.options.ZLIntegerOption myIndexOption -> e
    boolean myDownloadInProgress -> f
    java.util.List myTips -> g
    int DELAY -> h
    com.media.dbstarplayer.tips.TipsManager Instance() -> a
    java.lang.String getLocalFilePath() -> f
    java.util.List getTips() -> g
    boolean hasNextTip() -> b
    com.media.dbstarplayer.tips.Tip getNextTip() -> c
    int currentTime() -> h
    void startDownloading() -> d
    void access$0$1db55eb(com.media.dbstarplayer.tips.TipsManager) -> a
    java.lang.String access$2$414e7649() -> e
com.media.dbstarplayer.tips.TipsManager$1 -> com.media.dbstarplayer.e.d:
    com.media.dbstarplayer.tips.TipsManager this$0 -> a
    void run() -> run
com.media.dbstarplayer.tips.TipsManager$Action -> com.media.dbstarplayer.e.e:
    com.media.dbstarplayer.tips.TipsManager$Action Initialize -> a
    com.media.dbstarplayer.tips.TipsManager$Action Show -> b
    com.media.dbstarplayer.tips.TipsManager$Action Download -> c
    com.media.dbstarplayer.tips.TipsManager$Action None -> d
    com.media.dbstarplayer.tips.TipsManager$Action[] ENUM$VALUES -> e
    com.media.dbstarplayer.tips.TipsManager$Action[] values() -> values
    com.media.dbstarplayer.tips.TipsManager$Action valueOf(java.lang.String) -> valueOf
com.media.dbstarplayer.tree.FBTree -> com.media.dbstarplayer.f.a:
    com.media.zlibrary.core.image.ZLImage myCover -> a
    boolean myCoverRequested -> b
    com.media.dbstarplayer.tree.FBTree$Key myKey -> c
    com.media.dbstarplayer.tree.FBTree$Key getUniqueKey() -> v
    java.lang.String getStringId() -> g
    com.media.dbstarplayer.tree.FBTree getSubTree(java.lang.String) -> d
    java.lang.String getName() -> c
    java.lang.String getTreeTitle() -> f
    java.lang.String getSortKey() -> h
    int compareTo(com.media.dbstarplayer.tree.FBTree) -> a
    java.lang.String getSummary() -> d
    com.media.zlibrary.core.image.ZLImage createCover() -> j
    boolean canUseParentCover() -> i
    com.media.zlibrary.core.image.ZLImage getCover() -> w
    com.media.dbstarplayer.tree.FBTree$Status getOpeningStatus() -> a
    java.lang.String getOpeningStatusMessage() -> k
    void waitForOpening() -> b
    int compareTo(java.lang.Object) -> compareTo
com.media.dbstarplayer.tree.FBTree$Key -> com.media.dbstarplayer.f.b:
    long serialVersionUID -> serialVersionUID
    com.media.dbstarplayer.tree.FBTree$Key Parent -> a
    java.lang.String Id -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.media.dbstarplayer.tree.FBTree$Status -> com.media.dbstarplayer.f.c:
    com.media.dbstarplayer.tree.FBTree$Status READY_TO_OPEN -> a
    com.media.dbstarplayer.tree.FBTree$Status WAIT_FOR_OPEN -> b
    com.media.dbstarplayer.tree.FBTree$Status ALWAYS_RELOAD_BEFORE_OPENING -> c
    com.media.dbstarplayer.tree.FBTree$Status CANNOT_OPEN -> d
    com.media.dbstarplayer.tree.FBTree$Status[] ENUM$VALUES -> e
    com.media.dbstarplayer.tree.FBTree$Status[] values() -> values
    com.media.dbstarplayer.tree.FBTree$Status valueOf(java.lang.String) -> valueOf
com.media.player.common.Utils -> com.media.a.a.a:
    boolean FLAG_LOG_ERROR -> c
    boolean FLAG_LOG_INFO -> d
    boolean IS_TEST -> a
    java.lang.String PATH_IMAGE_SAVED -> b
    int dip2px(android.content.Context,float) -> a
    void printLogError(java.lang.String,java.lang.String) -> a
    void printLogInfo(java.lang.String,java.lang.String) -> b
com.media.reader.dialog.CustomDialog -> com.media.reader.a.a:
    java.lang.String TAG -> d
    android.widget.RelativeLayout mDlgRoot -> e
    com.media.android.dbstarplayer.DbStarPlayer mActivity -> f
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp mReader -> g
    android.widget.LinearLayout mToolBarLayout -> h
    android.widget.Button mAddBookmark -> i
    android.widget.Button mDeleteBookmark -> j
    android.widget.Button mFindToc -> k
    android.widget.Button mFindBookmark -> l
    android.widget.Button mFontAdjust -> m
    int mScreenWidth -> n
    android.widget.ListView mListToc -> o
    com.media.reader.view.CatalogAdapter mTocAdapter -> p
    java.util.ArrayList mTocList -> a
    android.widget.ListView mListBookmark -> q
    com.media.reader.view.CustomBookMarksAdapter mBookMarksAdapter -> r
    android.widget.LinearLayout mFontAdjustLayout -> s
    com.media.reader.view.VerticalSeekBar mFontAdjustSeekBar -> t
    int mSeekBarProgress -> u
    int SEEK_SENSITIVITY -> v
    int SEEKBAR_PROGRESS_STEP -> w
    void initTocList(com.media.dbstarplayer.bookmodel.TOCTree) -> a
    void showTocList(android.view.View) -> a
    void setViewLoacation(android.view.View,android.view.View) -> a
    void hideTocList() -> d
    void showBookMarkList(android.view.View) -> b
    void hideBookMarkList() -> e
    void showFontAdjustView(android.view.View) -> c
    void changeProgress(boolean) -> a
    void hideFontAdjustView() -> f
    void initBookMarkOpertion() -> g
    void initAddBookMark() -> h
    void initDeleteBookMark() -> i
    void doShow() -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void refreshReader() -> j
    void onClick(android.view.View) -> onClick
    void close() -> b
    void onFocusChange(android.view.View,boolean) -> onFocusChange
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp access$0(com.media.reader.dialog.CustomDialog) -> a
    com.media.reader.view.CustomBookMarksAdapter access$1(com.media.reader.dialog.CustomDialog) -> b
    com.media.android.dbstarplayer.DbStarPlayer access$2(com.media.reader.dialog.CustomDialog) -> c
    android.widget.ListView access$3(com.media.reader.dialog.CustomDialog) -> d
    com.media.reader.view.CatalogAdapter access$4(com.media.reader.dialog.CustomDialog) -> e
    android.widget.ListView access$5(com.media.reader.dialog.CustomDialog) -> f
    void access$6(com.media.reader.dialog.CustomDialog,int) -> a
    void access$7(com.media.reader.dialog.CustomDialog,com.media.dbstarplayer.book.Bookmark) -> a
    com.media.reader.view.VerticalSeekBar access$8(com.media.reader.dialog.CustomDialog) -> g
    android.widget.Button access$9(com.media.reader.dialog.CustomDialog) -> h
    android.widget.Button access$10(com.media.reader.dialog.CustomDialog) -> i
com.media.reader.dialog.CustomDialog$1 -> com.media.reader.a.b:
    com.media.reader.dialog.CustomDialog this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.media.reader.dialog.CustomDialog$10 -> com.media.reader.a.c:
    com.media.reader.dialog.CustomDialog this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.media.reader.dialog.CustomDialog$11 -> com.media.reader.a.d:
    com.media.reader.dialog.CustomDialog this$0 -> a
    void run() -> run
com.media.reader.dialog.CustomDialog$12 -> com.media.reader.a.e:
    com.media.reader.dialog.CustomDialog this$0 -> a
    void onStopTrackingTouch(android.widget.SeekBar) -> onStopTrackingTouch
    void onStartTrackingTouch(android.widget.SeekBar) -> onStartTrackingTouch
    void onProgressChanged(android.widget.SeekBar,int,boolean) -> onProgressChanged
com.media.reader.dialog.CustomDialog$13 -> com.media.reader.a.f:
    com.media.reader.dialog.CustomDialog this$0 -> a
    void run() -> run
com.media.reader.dialog.CustomDialog$2 -> com.media.reader.a.g:
    com.media.reader.dialog.CustomDialog this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.media.reader.dialog.CustomDialog$3 -> com.media.reader.a.h:
    com.media.reader.dialog.CustomDialog this$0 -> a
    boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long) -> onItemLongClick
com.media.reader.dialog.CustomDialog$4 -> com.media.reader.a.i:
    com.media.reader.dialog.CustomDialog this$0 -> a
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
com.media.reader.dialog.CustomDialog$5 -> com.media.reader.a.j:
    com.media.reader.dialog.CustomDialog this$0 -> a
    int val$pos -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.reader.dialog.CustomDialog$6 -> com.media.reader.a.k:
    com.media.reader.dialog.CustomDialog this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.media.reader.dialog.CustomDialog$7 -> com.media.reader.a.l:
    com.media.reader.dialog.CustomDialog this$0 -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
com.media.reader.dialog.CustomDialog$8 -> com.media.reader.a.m:
    com.media.reader.dialog.CustomDialog this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.media.reader.dialog.CustomDialog$9 -> com.media.reader.a.n:
    com.media.reader.dialog.CustomDialog this$0 -> a
    void run() -> run
com.media.reader.dialog.CustomDialog$Initializer -> com.media.reader.a.o:
    com.media.reader.dialog.CustomDialog this$0 -> a
    void run() -> run
com.media.reader.dialog.CustomDialog$Initializer$1 -> com.media.reader.a.p:
    com.media.reader.dialog.CustomDialog$Initializer this$1 -> a
    void run() -> run
com.media.reader.dialog.DialogBaseLayout -> com.media.reader.a.q:
    android.view.LayoutInflater mInflater -> b
    android.view.WindowManager mWindowManager -> c
    void show() -> c
    void doShow() -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    void close() -> b
com.media.reader.interfaces.AudioSpeekListener -> com.media.reader.b.a:
    void onEnd() -> a
    void onError(int,java.lang.String) -> a
com.media.reader.model.ImageManager -> com.media.reader.c.a:
    java.util.HashMap bitmapCache -> a
    com.media.reader.model.ImageManager getInstance() -> a
    void setCache(java.lang.String,android.graphics.Bitmap) -> a
    void clearBitmapCache() -> b
    void recycleById(int) -> a
    android.graphics.Bitmap loadBitmapByResourceId(android.content.Context,int) -> a
    android.graphics.Bitmap decodeResource(android.content.res.Resources,int) -> a
com.media.reader.model.ImageManager$ImageManagerHolder -> com.media.reader.c.b:
    com.media.reader.model.ImageManager instance -> a
    com.media.reader.model.ImageManager access$0() -> a
com.media.reader.view.CatalogAdapter -> com.media.reader.view.a:
    java.util.List mData -> a
    android.widget.ListView mList -> b
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.media.reader.view.CustomBookMarksAdapter -> com.media.reader.view.b:
    java.util.List myBookmarks -> a
    com.media.zlibrary.core.resources.ZLResource myResource -> b
    java.util.Comparator myComparator -> c
    com.media.android.dbstarplayer.DbStarPlayer mActivity -> d
    android.widget.ListView mList -> e
    void addAll(java.util.List) -> a
    void remove(com.media.dbstarplayer.book.Bookmark) -> a
    void clear() -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    boolean areAllItemsEnabled() -> areAllItemsEnabled
    boolean isEnabled(int) -> isEnabled
    long getItemId(int) -> getItemId
    com.media.dbstarplayer.book.Bookmark getItem(int) -> a
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    java.util.List access$1(com.media.reader.view.CustomBookMarksAdapter) -> a
    java.util.Comparator access$2(com.media.reader.view.CustomBookMarksAdapter) -> b
    android.widget.ListView access$3(com.media.reader.view.CustomBookMarksAdapter) -> c
com.media.reader.view.CustomBookMarksAdapter$1 -> com.media.reader.view.c:
    com.media.reader.view.CustomBookMarksAdapter this$0 -> a
    java.util.List val$bookmarks -> b
    void run() -> run
com.media.reader.view.CustomBookMarksAdapter$1$1 -> com.media.reader.view.d:
    com.media.reader.view.CustomBookMarksAdapter$1 this$1 -> a
    void run() -> run
com.media.reader.view.CustomBookMarksAdapter$3 -> com.media.reader.view.e:
    com.media.reader.view.CustomBookMarksAdapter this$0 -> a
    com.media.dbstarplayer.book.Bookmark val$b -> b
    void run() -> run
com.media.reader.view.CustomBookMarksAdapter$4 -> com.media.reader.view.f:
    com.media.reader.view.CustomBookMarksAdapter this$0 -> a
    void run() -> run
com.media.reader.view.ReadProgressChangeListener -> com.media.reader.view.g:
    void onReadProgressChange(int) -> b
com.media.reader.view.RepeatCharTextView -> com.media.reader.view.RepeatCharTextView:
    android.graphics.Paint paint -> a
    java.lang.String text -> b
    void onDraw(android.graphics.Canvas) -> onDraw
com.media.reader.view.VerticalSeekBar -> com.media.reader.view.VerticalSeekBar:
    android.view.View$OnKeyListener mOnKeyListener -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onMeasure(int,int) -> onMeasure
    void onDraw(android.graphics.Canvas) -> onDraw
    void setProgress(int) -> setProgress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void setOnKeyListener(android.view.View$OnKeyListener) -> setOnKeyListener
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
com.media.reader.vo.ImageEntity -> com.media.reader.d.a:
    int width -> a
    int height -> b
    com.media.reader.vo.ImageEntity$ImageAlign align -> c
    int textHeight -> e
    com.media.zlibrary.text.view.ZLTextLineInfo lineInfo -> d
    boolean isOverHeight -> f
    int lineHeight -> g
    java.lang.String ID -> h
    void setLineHeight(int) -> a
    int getLineHeight() -> a
    java.lang.String getPath() -> b
    void resetTextAreaHeight() -> c
    boolean isReduceTextLineWidth() -> d
    void setOverHeight$1385ff() -> e
    int getCurTextHeight() -> f
    boolean addTextLineHeight(int) -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.media.reader.vo.ImageEntity$ImageAlign -> com.media.reader.d.b:
    com.media.reader.vo.ImageEntity$ImageAlign IMAGE_ALIGN_CENTER -> a
    com.media.reader.vo.ImageEntity$ImageAlign IMAGE_ALIGN_MID -> b
    com.media.reader.vo.ImageEntity$ImageAlign IMAGE_ALIGN_RIGHT -> c
    com.media.reader.vo.ImageEntity$ImageAlign IMAGE_ALIGN_LEFT -> d
    com.media.reader.vo.ImageEntity$ImageAlign IMAGE_ALIGN_TEXT -> e
    com.media.reader.vo.ImageEntity$ImageAlign[] ENUM$VALUES -> f
    com.media.reader.vo.ImageEntity$ImageAlign[] values() -> values
    com.media.reader.vo.ImageEntity$ImageAlign valueOf(java.lang.String) -> valueOf
com.media.reader.vo.TocReference -> com.media.reader.d.c:
    java.lang.String tocName -> a
    com.media.dbstarplayer.bookmodel.TOCTree$Reference mRef -> b
com.media.zlibrary.core.application.ZLApplication -> com.media.zlibrary.core.a.a:
    com.media.zlibrary.core.application.ZLApplication ourInstance -> a
    com.media.zlibrary.core.application.ZLApplicationWindow myWindow -> b
    com.media.zlibrary.core.view.ZLView myView -> c
    java.util.HashMap myIdToActionMap -> d
    java.util.HashMap myPopups -> e
    com.media.zlibrary.core.application.ZLApplication$PopupPanel myActivePopup -> f
    java.util.Timer myTimer -> g
    java.util.HashMap myTimerTaskPeriods -> h
    java.util.HashMap myTimerTasks -> i
    java.lang.Object myTimerLock -> j
    com.media.zlibrary.core.application.ZLApplication Instance() -> n
    void setView(com.media.zlibrary.core.view.ZLView) -> a
    com.media.zlibrary.core.view.ZLView getCurrentView() -> o
    void setWindow(com.media.zlibrary.core.application.ZLApplicationWindow) -> a
    void initWindow() -> p
    void setTitle(java.lang.String) -> d
    void runWithMessage(java.lang.String,java.lang.Runnable,java.lang.Runnable) -> a
    void processException(java.lang.Exception) -> a
    com.media.zlibrary.core.view.ZLViewWidget getViewWidget() -> q
    void onRepaintFinished() -> r
    void hideActivePopup() -> s
    void showPopup(java.lang.String) -> e
    void addAction(java.lang.String,com.media.zlibrary.core.application.ZLApplication$ZLAction) -> a
    void removeAction(java.lang.String) -> f
    boolean isActionEnabled(java.lang.String) -> g
    void runAction(java.lang.String,java.lang.Object[]) -> a
    com.media.zlibrary.core.application.ZLKeyBindings keyBindings() -> b
    boolean hasActionForKey(int,boolean) -> a
    boolean runActionByKey(int,boolean) -> b
    boolean closeWindow() -> t
    void onWindowClosing() -> f
    java.util.Collection popupPanels() -> u
    com.media.zlibrary.core.application.ZLApplication$PopupPanel getActivePopup() -> v
    com.media.zlibrary.core.application.ZLApplication$PopupPanel getPopupById(java.lang.String) -> h
    int getBatteryLevel() -> w
    void addTimerTaskInternal(java.lang.Runnable,long) -> a
    void startTimer() -> x
    void stopTimer() -> y
    void addTimerTask$574944f(java.lang.Runnable) -> a
    void removeTimerTask(java.lang.Runnable) -> b
    java.util.HashMap access$0(com.media.zlibrary.core.application.ZLApplication) -> a
com.media.zlibrary.core.application.ZLApplication$MyTimerTask -> com.media.zlibrary.core.a.b:
    java.lang.Runnable myRunnable -> a
    void run() -> run
com.media.zlibrary.core.application.ZLApplication$PopupPanel -> com.media.zlibrary.core.a.c:
    com.media.zlibrary.core.application.ZLApplication Application -> c
    java.lang.String getId() -> c
    void update() -> a
    void hide_() -> f
    void show_() -> d
com.media.zlibrary.core.application.ZLApplication$ZLAction -> com.media.zlibrary.core.a.d:
    boolean isVisible() -> b
    boolean isEnabled() -> a
    boolean checkAndRun(java.lang.Object[]) -> b
    void run(java.lang.Object[]) -> a
com.media.zlibrary.core.application.ZLApplicationWindow -> com.media.zlibrary.core.a.e:
    com.media.zlibrary.core.application.ZLApplication myApplication -> a
    com.media.zlibrary.core.application.ZLApplication getApplication() -> a
    void setTitle(java.lang.String) -> a
    void runWithMessage(java.lang.String,java.lang.Runnable,java.lang.Runnable) -> a
    void processException(java.lang.Exception) -> a
    com.media.zlibrary.core.view.ZLViewWidget getViewWidget() -> b
    void close() -> c
    int getBatteryLevel() -> d
com.media.zlibrary.core.application.ZLKeyBindings -> com.media.zlibrary.core.a.f:
    java.lang.String myName -> a
    com.media.zlibrary.core.options.ZLStringListOption myKeysOption -> b
    java.util.TreeMap myActionMap -> c
    java.util.TreeMap myLongPressActionMap -> d
    com.media.zlibrary.core.options.ZLStringOption createOption(int,boolean,java.lang.String) -> b
    com.media.zlibrary.core.options.ZLStringOption getOption(int,boolean) -> a
    void bindKey(int,boolean,java.lang.String) -> a
    java.lang.String getBinding(int,boolean) -> b
    java.util.TreeMap access$0(com.media.zlibrary.core.application.ZLKeyBindings) -> a
    com.media.zlibrary.core.options.ZLStringOption access$1$64e9ffe5(com.media.zlibrary.core.application.ZLKeyBindings,int,java.lang.String) -> a
com.media.zlibrary.core.application.ZLKeyBindings$Reader -> com.media.zlibrary.core.a.g:
    java.util.Set myKeySet -> b
    com.media.zlibrary.core.application.ZLKeyBindings this$0 -> a
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.zlibrary.core.config.ZLConfig -> com.media.zlibrary.core.b.a:
    com.media.zlibrary.core.config.ZLConfig ourInstance -> a
    com.media.zlibrary.core.config.ZLConfig Instance() -> a
    java.util.List listGroups() -> b
    java.util.List listNames(java.lang.String) -> a
    java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String) -> a
    void setValue(java.lang.String,java.lang.String,java.lang.String) -> b
    void unsetValue(java.lang.String,java.lang.String) -> a
    void removeGroup(java.lang.String) -> b
com.media.zlibrary.core.encodings.AutoEncodingCollection -> com.media.zlibrary.core.encodings.AutoEncodingCollection:
    com.media.zlibrary.core.encodings.Encoding myEncoding -> myEncoding
    java.util.List encodings() -> encodings
    com.media.zlibrary.core.encodings.Encoding getEncoding(java.lang.String) -> getEncoding
    com.media.zlibrary.core.encodings.Encoding getEncoding(int) -> getEncoding
com.media.zlibrary.core.encodings.Encoding -> com.media.zlibrary.core.encodings.Encoding:
    java.lang.String Family -> Family
    java.lang.String Name -> Name
    java.lang.String DisplayName -> DisplayName
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.media.zlibrary.core.encodings.EncodingConverter createConverter() -> createConverter
com.media.zlibrary.core.encodings.EncodingCollection -> com.media.zlibrary.core.encodings.EncodingCollection:
    java.util.List encodings() -> encodings
    com.media.zlibrary.core.encodings.Encoding getEncoding(java.lang.String) -> getEncoding
    com.media.zlibrary.core.encodings.Encoding getEncoding(int) -> getEncoding
com.media.zlibrary.core.encodings.EncodingConverter -> com.media.zlibrary.core.encodings.EncodingConverter:
    java.lang.String Name -> Name
    java.nio.charset.CharsetDecoder myDecoder -> myDecoder
    int convert(byte[],int,int,char[]) -> convert
    void reset() -> reset
com.media.zlibrary.core.encodings.FilteredEncodingCollection -> com.media.zlibrary.core.encodings.FilteredEncodingCollection:
    java.util.List myEncodings -> myEncodings
    java.util.Map myEncodingByAlias -> myEncodingByAlias
    boolean isEncodingSupported(java.lang.String) -> isEncodingSupported
    java.util.List encodings() -> encodings
    com.media.zlibrary.core.encodings.Encoding getEncoding(java.lang.String) -> getEncoding
    com.media.zlibrary.core.encodings.Encoding getEncoding(int) -> getEncoding
    boolean providesConverterFor(java.lang.String) -> providesConverterFor
    java.util.List access$0(com.media.zlibrary.core.encodings.FilteredEncodingCollection) -> access$0
    java.util.Map access$1(com.media.zlibrary.core.encodings.FilteredEncodingCollection) -> access$1
com.media.zlibrary.core.encodings.FilteredEncodingCollection$EncodingCollectionReader -> com.media.zlibrary.core.encodings.FilteredEncodingCollection$EncodingCollectionReader:
    java.lang.String myCurrentFamilyName -> myCurrentFamilyName
    com.media.zlibrary.core.encodings.Encoding myCurrentEncoding -> myCurrentEncoding
    com.media.zlibrary.core.encodings.FilteredEncodingCollection this$0 -> this$0
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.zlibrary.core.encodings.JavaEncodingCollection -> com.media.zlibrary.core.encodings.JavaEncodingCollection:
    com.media.zlibrary.core.encodings.JavaEncodingCollection ourInstance -> ourInstance
    com.media.zlibrary.core.encodings.JavaEncodingCollection Instance() -> Instance
    boolean isEncodingSupported(java.lang.String) -> isEncodingSupported
    boolean providesConverterFor(java.lang.String) -> providesConverterFor
    java.util.List encodings() -> encodings
    com.media.zlibrary.core.encodings.Encoding getEncoding(int) -> getEncoding
    com.media.zlibrary.core.encodings.Encoding getEncoding(java.lang.String) -> getEncoding
com.media.zlibrary.core.filesystem.ZLArchiveEntryFile -> com.media.zlibrary.core.filesystem.ZLArchiveEntryFile:
    com.media.zlibrary.core.filesystem.ZLFile myParent -> myParent
    java.lang.String myName -> myName
    java.lang.String normalizeEntryName(java.lang.String) -> normalizeEntryName
    com.media.zlibrary.core.filesystem.ZLArchiveEntryFile createArchiveEntryFile(com.media.zlibrary.core.filesystem.ZLFile,java.lang.String) -> createArchiveEntryFile
    java.util.List archiveEntries(com.media.zlibrary.core.filesystem.ZLFile) -> archiveEntries
    boolean isDirectory() -> isDirectory
    java.lang.String getPath() -> getPath
    java.lang.String getLongName() -> getLongName
    com.media.zlibrary.core.filesystem.ZLFile getParent() -> getParent
    com.media.zlibrary.core.filesystem.ZLPhysicalFile getPhysicalFile() -> getPhysicalFile
com.media.zlibrary.core.filesystem.ZLFile -> com.media.zlibrary.core.filesystem.ZLFile:
    java.util.HashMap ourCachedFiles -> ourCachedFiles
    java.lang.String myExtension -> myExtension
    java.lang.String myShortName -> myShortName
    int myArchiveType -> myArchiveType
    boolean myIsCached -> myIsCached
    void init() -> init
    com.media.zlibrary.core.filesystem.ZLFile createFile(com.media.zlibrary.core.filesystem.ZLFile,java.lang.String) -> createFile
    com.media.zlibrary.core.filesystem.ZLFile createFileByUrl(java.lang.String) -> createFileByUrl
    com.media.zlibrary.core.filesystem.ZLFile createFileByPath(java.lang.String) -> createFileByPath
    long size() -> size
    boolean exists() -> exists
    boolean isDirectory() -> isDirectory
    java.lang.String getPath() -> getPath
    com.media.zlibrary.core.filesystem.ZLFile getParent() -> getParent
    com.media.zlibrary.core.filesystem.ZLPhysicalFile getPhysicalFile() -> getPhysicalFile
    java.io.InputStream getInputStream() -> getInputStream
    java.lang.String getUrl() -> getUrl
    boolean isReadable() -> isReadable
    boolean isCompressed() -> isCompressed
    boolean isArchive() -> isArchive
    java.lang.String getLongName() -> getLongName
    java.lang.String getShortName() -> getShortName
    java.lang.String getExtension() -> getExtension
    java.util.List directoryEntries() -> directoryEntries
    java.util.List children() -> children
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    boolean isCached() -> isCached
    void setCached(boolean) -> setCached
com.media.zlibrary.core.filesystem.ZLFile$ArchiveType -> com.media.zlibrary.core.filesystem.ZLFile$ArchiveType:
    int NONE -> NONE
    int GZIP -> GZIP
    int BZIP2 -> BZIP2
    int COMPRESSED -> COMPRESSED
    int ZIP -> ZIP
    int TAR -> TAR
    int ARCHIVE -> ARCHIVE
com.media.zlibrary.core.filesystem.ZLPhysicalFile -> com.media.zlibrary.core.filesystem.ZLPhysicalFile:
    java.io.File myFile -> myFile
    boolean exists() -> exists
    long size() -> size
    boolean isDirectory() -> isDirectory
    boolean isReadable() -> isReadable
    boolean delete() -> delete
    java.io.File javaFile() -> javaFile
    java.lang.String getPath() -> getPath
    java.lang.String getLongName() -> getLongName
    com.media.zlibrary.core.filesystem.ZLFile getParent() -> getParent
    com.media.zlibrary.core.filesystem.ZLPhysicalFile getPhysicalFile() -> getPhysicalFile
    java.io.InputStream getInputStream() -> getInputStream
    java.util.List directoryEntries() -> directoryEntries
com.media.zlibrary.core.filesystem.ZLResourceFile -> com.media.zlibrary.core.filesystem.ZLResourceFile:
    java.lang.String myPath -> myPath
    com.media.zlibrary.core.filesystem.ZLResourceFile createResourceFile(java.lang.String) -> createResourceFile
    com.media.zlibrary.core.filesystem.ZLResourceFile createResourceFile(com.media.zlibrary.core.filesystem.ZLResourceFile,java.lang.String) -> createResourceFile
    java.lang.String getPath() -> getPath
    java.lang.String getLongName() -> getLongName
    com.media.zlibrary.core.filesystem.ZLPhysicalFile getPhysicalFile() -> getPhysicalFile
com.media.zlibrary.core.filesystem.ZLZipEntryFile -> com.media.zlibrary.core.filesystem.ZLZipEntryFile:
    java.util.HashMap ourZipFileMap -> ourZipFileMap
    java.util.List archiveEntries(com.media.zlibrary.core.filesystem.ZLFile) -> archiveEntries
    org.amse.ys.zip.ZipFile getZipFile(com.media.zlibrary.core.filesystem.ZLFile) -> getZipFile
    void removeFromCache(com.media.zlibrary.core.filesystem.ZLFile) -> removeFromCache
    boolean exists() -> exists
    long size() -> size
    java.io.InputStream getInputStream() -> getInputStream
com.media.zlibrary.core.filesystem.ZLZipEntryFile$1 -> com.media.zlibrary.core.filesystem.ZLZipEntryFile$1:
    com.media.zlibrary.core.filesystem.ZLFile val$file -> val$file
    java.io.InputStream getInputStream() -> getInputStream
com.media.zlibrary.core.filesystem.tar.ZLTarEntryFile -> com.media.zlibrary.core.filesystem.tar.ZLTarEntryFile:
    java.util.List archiveEntries(com.media.zlibrary.core.filesystem.ZLFile) -> archiveEntries
    boolean exists() -> exists
    long size() -> size
    java.io.InputStream getInputStream() -> getInputStream
com.media.zlibrary.core.filesystem.tar.ZLTarHeader -> com.media.zlibrary.core.filesystem.tar.ZLTarHeader:
    java.lang.String Name -> Name
    int Size -> Size
    boolean IsRegularFile -> IsRegularFile
    java.lang.String getStringFromByteArray(byte[]) -> getStringFromByteArray
    boolean read(java.io.InputStream) -> read
    void erase() -> erase
com.media.zlibrary.core.filesystem.tar.ZLTarInputStream -> com.media.zlibrary.core.filesystem.tar.ZLTarInputStream:
    java.io.InputStream myBase -> myBase
    int read() -> read
    int read(byte[]) -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
com.media.zlibrary.core.filetypes.FileType -> com.media.zlibrary.core.c.a:
    java.lang.String Id -> a
    boolean acceptsFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.zlibrary.core.util.MimeType mimeType(com.media.zlibrary.core.filesystem.ZLFile) -> b
    com.media.zlibrary.core.util.MimeType rawMimeType(com.media.zlibrary.core.filesystem.ZLFile) -> c
com.media.zlibrary.core.filetypes.FileTypeCollection -> com.media.zlibrary.core.c.b:
    com.media.zlibrary.core.filetypes.FileTypeCollection Instance -> a
    java.util.TreeMap myTypes -> b
    void addType(com.media.zlibrary.core.filetypes.FileType) -> a
    com.media.zlibrary.core.filetypes.FileType typeForFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.zlibrary.core.util.MimeType rawMimeType(com.media.zlibrary.core.filesystem.ZLFile) -> b
com.media.zlibrary.core.filetypes.FileTypeDjVu -> com.media.zlibrary.core.c.c:
    boolean acceptsFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.zlibrary.core.util.MimeType mimeType(com.media.zlibrary.core.filesystem.ZLFile) -> b
com.media.zlibrary.core.filetypes.FileTypeEpub -> com.media.zlibrary.core.c.d:
    boolean acceptsFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.zlibrary.core.util.MimeType mimeType(com.media.zlibrary.core.filesystem.ZLFile) -> b
    com.media.zlibrary.core.util.MimeType rawMimeType(com.media.zlibrary.core.filesystem.ZLFile) -> c
com.media.zlibrary.core.filetypes.FileTypeFB2 -> com.media.zlibrary.core.c.e:
    java.util.List myMimeTypes -> b
    boolean acceptsFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.zlibrary.core.util.MimeType mimeType(com.media.zlibrary.core.filesystem.ZLFile) -> b
    com.media.zlibrary.core.util.MimeType rawMimeType(com.media.zlibrary.core.filesystem.ZLFile) -> c
com.media.zlibrary.core.filetypes.FileTypeHtml -> com.media.zlibrary.core.c.f:
    boolean acceptsFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.zlibrary.core.util.MimeType mimeType(com.media.zlibrary.core.filesystem.ZLFile) -> b
com.media.zlibrary.core.filetypes.FileTypeMobipocket -> com.media.zlibrary.core.c.g:
    boolean acceptsFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.zlibrary.core.util.MimeType mimeType(com.media.zlibrary.core.filesystem.ZLFile) -> b
com.media.zlibrary.core.filetypes.FileTypePalm -> com.media.zlibrary.core.c.h:
    java.lang.String myPalmId -> b
    java.lang.String palmFileType(com.media.zlibrary.core.filesystem.ZLFile) -> d
    boolean acceptsFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
com.media.zlibrary.core.filetypes.SimpleFileType -> com.media.zlibrary.core.c.i:
    java.lang.String myExtension -> b
    java.util.List myMimeTypes -> c
    boolean acceptsFile(com.media.zlibrary.core.filesystem.ZLFile) -> a
    com.media.zlibrary.core.util.MimeType mimeType(com.media.zlibrary.core.filesystem.ZLFile) -> b
    java.lang.String toString() -> toString
com.media.zlibrary.core.html.ZLByteBuffer -> com.media.zlibrary.core.d.a:
    byte[] myData -> a
    int myLength -> b
    java.lang.Object myConverterLock -> c
    char[] myConverterBuffer -> d
    java.lang.String myStringValue -> e
    boolean isEmpty() -> a
    void append(byte[],int,int) -> a
    void clear() -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    boolean equalsToLCString(java.lang.String) -> a
    java.lang.String toString(java.nio.charset.CharsetDecoder) -> a
    java.lang.String toString() -> toString
com.media.zlibrary.core.html.ZLHtmlAttributeMap -> com.media.zlibrary.core.d.b:
    com.media.zlibrary.core.html.ZLByteBuffer[] myKeys -> a
    com.media.zlibrary.core.html.ZLByteBuffer[] myValues -> b
    int mySize -> c
    void put(com.media.zlibrary.core.html.ZLByteBuffer,com.media.zlibrary.core.html.ZLByteBuffer) -> a
    com.media.zlibrary.core.html.ZLByteBuffer getValue(java.lang.String) -> a
    void clear() -> a
com.media.zlibrary.core.html.ZLHtmlParser -> com.media.zlibrary.core.d.c:
    com.media.zlibrary.core.html.ZLHtmlReader myReader -> a
    java.io.InputStream myStream -> b
    com.media.zlibrary.core.html.ZLByteBuffer unique(java.util.HashMap,com.media.zlibrary.core.html.ZLByteBuffer) -> a
    void doIt() -> a
    void processStartTag(com.media.zlibrary.core.html.ZLHtmlReader,com.media.zlibrary.core.html.ZLByteBuffer,int,com.media.zlibrary.core.html.ZLHtmlAttributeMap) -> a
    void processEndTag(com.media.zlibrary.core.html.ZLHtmlReader,com.media.zlibrary.core.html.ZLByteBuffer) -> a
com.media.zlibrary.core.html.ZLHtmlProcessor -> com.media.zlibrary.core.d.d:
    boolean read(com.media.zlibrary.core.html.ZLHtmlReader,java.io.InputStream) -> a
com.media.zlibrary.core.html.ZLHtmlReader -> com.media.zlibrary.core.d.e:
    void startDocumentHandler() -> d
    void endDocumentHandler() -> e
    void startElementHandler(java.lang.String,int,com.media.zlibrary.core.html.ZLHtmlAttributeMap) -> a
    void endElementHandler(java.lang.String) -> b
    void byteDataHandler(byte[],int,int) -> a
    void entityDataHandler(java.lang.String) -> a
com.media.zlibrary.core.image.ZLBase64EncodedImage -> com.media.zlibrary.core.image.ZLBase64EncodedImage:
    boolean myIsDecoded -> myIsDecoded
    byte decodeByte(byte) -> decodeByte
    java.lang.String getURI() -> getURI
    java.lang.String encodedFileName() -> encodedFileName
    java.lang.String decodedFileName() -> decodedFileName
    boolean isCacheValid(java.io.File) -> isCacheValid
    void decode() -> decode
    java.io.InputStream inputStream() -> inputStream
com.media.zlibrary.core.image.ZLFileImage -> com.media.zlibrary.core.image.ZLFileImage:
    java.lang.String SCHEME -> SCHEME
    java.lang.String ENCODING_NONE -> ENCODING_NONE
    java.lang.String ENCODING_HEX -> ENCODING_HEX
    java.lang.String ENCODING_BASE64 -> ENCODING_BASE64
    com.media.zlibrary.core.filesystem.ZLFile myFile -> myFile
    java.lang.String myEncoding -> myEncoding
    int[] myOffsets -> myOffsets
    int[] myLengths -> myLengths
    com.media.zlibrary.core.image.ZLFileImage byUrlPath(java.lang.String) -> byUrlPath
    java.lang.String getURI() -> getURI
    java.io.InputStream inputStream() -> inputStream
com.media.zlibrary.core.image.ZLImage -> com.media.zlibrary.core.image.ZLImage:
    java.lang.String getURI() -> getURI
com.media.zlibrary.core.image.ZLImageData -> com.media.zlibrary.core.image.ZLImageData:
com.media.zlibrary.core.image.ZLImageManager -> com.media.zlibrary.core.image.ZLImageManager:
    com.media.zlibrary.core.image.ZLImageManager ourInstance -> ourInstance
    int[][] PalmImage8bitColormap -> PalmImage8bitColormap
    com.media.zlibrary.core.image.ZLImageManager Instance() -> Instance
    com.media.zlibrary.core.image.ZLImageData getImageData(com.media.zlibrary.core.image.ZLImage) -> getImageData
    void startImageLoading(com.media.zlibrary.core.image.ZLLoadableImage,java.lang.Runnable) -> startImageLoading
    int uShort(byte[],int) -> uShort
    int access$0(byte[],int) -> access$0
com.media.zlibrary.core.image.ZLImageManager$PalmImageHeader -> com.media.zlibrary.core.image.ZLImageManager$PalmImageHeader:
    int Width -> Width
    int Height -> Height
    int BytesPerRow -> BytesPerRow
    int Flags -> Flags
    byte BitsPerPixel -> BitsPerPixel
    byte CompressionType -> CompressionType
com.media.zlibrary.core.image.ZLImageProxy -> com.media.zlibrary.core.image.ZLImageProxy:
    com.media.zlibrary.core.image.ZLSingleImage myImage -> myImage
    com.media.zlibrary.core.image.ZLSingleImage getRealImage() -> getRealImage
    java.lang.String getURI() -> getURI
    java.io.InputStream inputStream() -> inputStream
    void synchronize() -> synchronize
    void synchronizeFast() -> synchronizeFast
com.media.zlibrary.core.image.ZLLoadableImage -> com.media.zlibrary.core.image.ZLLoadableImage:
    boolean myIsSynchronized -> myIsSynchronized
    boolean isSynchronized() -> isSynchronized
    void setSynchronized() -> setSynchronized
    void startSynchronization(java.lang.Runnable) -> startSynchronization
    int sourceType() -> sourceType
    void synchronize() -> synchronize
    void synchronizeFast() -> synchronizeFast
    java.lang.String getId() -> getId
com.media.zlibrary.core.image.ZLLoadableImage$SourceType -> com.media.zlibrary.core.image.ZLLoadableImage$SourceType:
    int DISK -> DISK
    int NETWORK -> NETWORK
com.media.zlibrary.core.image.ZLSingleImage -> com.media.zlibrary.core.image.ZLSingleImage:
    com.media.zlibrary.core.util.MimeType myMimeType -> myMimeType
    java.io.InputStream inputStream() -> inputStream
    com.media.zlibrary.core.util.MimeType mimeType() -> mimeType
com.media.zlibrary.core.language.Language -> com.media.zlibrary.core.e.a:
    java.lang.String Code -> a
    java.lang.String Name -> b
    java.lang.String mySortKey -> c
    com.media.zlibrary.core.language.Language$Order myOrder -> d
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    int compareTo(java.lang.Object) -> compareTo
com.media.zlibrary.core.language.Language$Order -> com.media.zlibrary.core.e.b:
    com.media.zlibrary.core.language.Language$Order Before -> a
    com.media.zlibrary.core.language.Language$Order Normal -> b
    com.media.zlibrary.core.language.Language$Order After -> c
    com.media.zlibrary.core.language.Language$Order[] ENUM$VALUES -> d
    com.media.zlibrary.core.language.Language$Order[] values() -> values
    com.media.zlibrary.core.language.Language$Order valueOf(java.lang.String) -> valueOf
com.media.zlibrary.core.language.ZLLanguageUtil -> com.media.zlibrary.core.e.c:
    java.util.ArrayList ourLanguageCodes -> a
    java.lang.String defaultLanguageCode() -> a
    java.util.List languageCodes() -> b
    java.lang.String languageByIntCode(int,int) -> a
com.media.zlibrary.core.library.ZLibrary -> com.media.zlibrary.core.library.ZLibrary:
    com.media.zlibrary.core.library.ZLibrary ourImplementation -> ourImplementation
    java.lang.String SCREEN_ORIENTATION_SYSTEM -> SCREEN_ORIENTATION_SYSTEM
    java.lang.String SCREEN_ORIENTATION_SENSOR -> SCREEN_ORIENTATION_SENSOR
    java.lang.String SCREEN_ORIENTATION_PORTRAIT -> SCREEN_ORIENTATION_PORTRAIT
    java.lang.String SCREEN_ORIENTATION_LANDSCAPE -> SCREEN_ORIENTATION_LANDSCAPE
    java.lang.String SCREEN_ORIENTATION_REVERSE_PORTRAIT -> SCREEN_ORIENTATION_REVERSE_PORTRAIT
    java.lang.String SCREEN_ORIENTATION_REVERSE_LANDSCAPE -> SCREEN_ORIENTATION_REVERSE_LANDSCAPE
    com.media.zlibrary.core.library.ZLibrary Instance() -> Instance
    com.media.zlibrary.core.options.ZLStringOption getOrientationOption() -> getOrientationOption
    com.media.zlibrary.core.filesystem.ZLResourceFile createResourceFile(java.lang.String) -> createResourceFile
    com.media.zlibrary.core.filesystem.ZLResourceFile createResourceFile(com.media.zlibrary.core.filesystem.ZLResourceFile,java.lang.String) -> createResourceFile
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getFullVersionName() -> getFullVersionName
    java.lang.String getCurrentTimeString() -> getCurrentTimeString
    void setScreenBrightness(int) -> setScreenBrightness
    int getScreenBrightness() -> getScreenBrightness
    int getDisplayDPI() -> getDisplayDPI
    int getPixelWidth() -> getPixelWidth
    int getPixelHeight() -> getPixelHeight
    java.util.List defaultLanguageCodes() -> defaultLanguageCodes
    boolean supportsAllOrientations() -> supportsAllOrientations
    java.lang.String[] allOrientations() -> allOrientations
com.media.zlibrary.core.money.Money -> com.media.zlibrary.core.f.a:
    com.media.zlibrary.core.money.Money ZERO -> a
    java.math.BigDecimal Amount -> b
    java.lang.String Currency -> c
    com.media.zlibrary.core.money.Money add(com.media.zlibrary.core.money.Money) -> a
    com.media.zlibrary.core.money.Money subtract(com.media.zlibrary.core.money.Money) -> b
    int compareTo(com.media.zlibrary.core.money.Money) -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.media.zlibrary.core.money.MoneyException -> com.media.zlibrary.core.f.b:
    long serialVersionUID -> serialVersionUID
com.media.zlibrary.core.network.CookieDatabase -> com.media.zlibrary.core.g.a:
    com.media.zlibrary.core.network.CookieDatabase ourInstance -> a
    com.media.zlibrary.core.network.CookieDatabase getInstance() -> a
    void removeObsolete(java.util.Date) -> a
    void removeAll() -> b
    void saveCookies(java.util.List) -> a
    java.util.List loadCookies() -> c
com.media.zlibrary.core.network.ZLNetworkException -> com.media.zlibrary.core.g.b:
    long serialVersionUID -> serialVersionUID
    java.lang.String myCode -> a
    com.media.zlibrary.core.resources.ZLResource getResource() -> b
    java.lang.String errorMessage(java.lang.String,java.lang.String) -> a
    java.lang.String getCode() -> a
com.media.zlibrary.core.network.ZLNetworkManager -> com.media.zlibrary.core.g.c:
    com.media.zlibrary.core.network.ZLNetworkManager ourManager -> a
    com.media.zlibrary.core.network.ZLNetworkManager$CredentialsCreator myCredentialsCreator -> b
    org.apache.http.client.CookieStore myCookieStore -> c
    com.media.zlibrary.core.network.ZLNetworkManager Instance() -> a
    void setCredentialsCreator(com.media.zlibrary.core.network.ZLNetworkManager$CredentialsCreator) -> a
    com.media.zlibrary.core.network.ZLNetworkManager$CredentialsCreator getCredentialsCreator() -> b
    void perform(com.media.zlibrary.core.network.ZLNetworkRequest) -> a
    void perform(com.media.zlibrary.core.network.ZLNetworkRequest,int,int) -> a
    void perform(java.util.List) -> a
    void downloadToFile(java.lang.String,java.io.File) -> a
    com.media.zlibrary.core.network.ZLNetworkManager$CredentialsCreator access$0(com.media.zlibrary.core.network.ZLNetworkManager) -> a
com.media.zlibrary.core.network.ZLNetworkManager$1 -> com.media.zlibrary.core.g.d:
    java.util.HashMap myCookies -> b
    com.media.zlibrary.core.network.ZLNetworkManager this$0 -> a
    void addCookie(org.apache.http.cookie.Cookie) -> addCookie
    void clear() -> clear
    boolean clearExpired(java.util.Date) -> clearExpired
    java.util.List getCookies() -> getCookies
com.media.zlibrary.core.network.ZLNetworkManager$2 -> com.media.zlibrary.core.g.e:
    com.media.zlibrary.core.network.ZLNetworkManager this$0 -> a
    java.io.File val$outFile -> f
    int val$bufferSize -> g
    void handleStream(java.io.InputStream,int) -> a
com.media.zlibrary.core.network.ZLNetworkManager$AuthScopeKey -> com.media.zlibrary.core.g.f:
    org.apache.http.auth.AuthScope myScope -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.zlibrary.core.network.ZLNetworkManager$CredentialsCreator -> com.media.zlibrary.core.g.g:
    java.util.HashMap myCredentialsMap -> a
    java.lang.String myUsername -> b
    java.lang.String myPassword -> c
    void setCredentials(java.lang.String,java.lang.String) -> a
    void release() -> a
    org.apache.http.auth.Credentials createCredentials(java.lang.String,org.apache.http.auth.AuthScope,boolean) -> a
    boolean removeCredentials(com.media.zlibrary.core.network.ZLNetworkManager$AuthScopeKey) -> a
    void startAuthenticationDialog(java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
com.media.zlibrary.core.network.ZLNetworkManager$Key -> com.media.zlibrary.core.g.h:
    java.lang.String Domain -> a
    java.lang.String Path -> b
    java.lang.String Name -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.zlibrary.core.network.ZLNetworkManager$MyCredentialsProvider -> com.media.zlibrary.core.g.i:
    org.apache.http.client.methods.HttpUriRequest myRequest -> b
    boolean myQuietly -> c
    com.media.zlibrary.core.network.ZLNetworkManager this$0 -> a
    org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope) -> getCredentials
com.media.zlibrary.core.network.ZLNetworkRequest -> com.media.zlibrary.core.g.j:
    java.lang.String URL -> b
    java.lang.String PostData -> c
    java.util.Map PostParameters -> d
    com.media.zlibrary.core.util.MimeType Mime -> e
    boolean myIsQuiet -> a
    void addPostParameter(java.lang.String,java.lang.String) -> a
    java.lang.String getURL() -> b
    boolean isQuiet() -> c
    void handleStream(java.io.InputStream,int) -> a
    void doAfter$1385ff() -> a
com.media.zlibrary.core.options.ZLBoolean3Option -> com.media.zlibrary.core.h.a:
    com.media.zlibrary.core.util.ZLBoolean3 myValue -> a
    com.media.zlibrary.core.util.ZLBoolean3 myDefaultValue -> b
    com.media.zlibrary.core.util.ZLBoolean3 getValue() -> a
    void setValue(com.media.zlibrary.core.util.ZLBoolean3) -> a
com.media.zlibrary.core.options.ZLBooleanOption -> com.media.zlibrary.core.h.b:
    boolean myDefaultValue -> a
    boolean myValue -> b
    boolean getValue() -> a
    void setValue(boolean) -> a
com.media.zlibrary.core.options.ZLColorOption -> com.media.zlibrary.core.h.c:
    com.media.zlibrary.core.util.ZLColor myDefaultValue -> a
    com.media.zlibrary.core.util.ZLColor myValue -> b
    com.media.zlibrary.core.util.ZLColor getValue() -> a
com.media.zlibrary.core.options.ZLEnumOption -> com.media.zlibrary.core.h.d:
    java.lang.Enum myDefaultValue -> a
    java.lang.Enum myValue -> b
    java.lang.Enum getValue() -> a
    void setValue(java.lang.Enum) -> a
com.media.zlibrary.core.options.ZLIntegerOption -> com.media.zlibrary.core.h.e:
    int myDefaultValue -> a
    int myValue -> b
    int getValue() -> a
    void setValue(int) -> a
com.media.zlibrary.core.options.ZLIntegerRangeOption -> com.media.zlibrary.core.h.f:
    int MinValue -> a
    int MaxValue -> b
    int myDefaultValue -> d
    int myValue -> e
    int getValue() -> a
    void setValue(int) -> a
com.media.zlibrary.core.options.ZLOption -> com.media.zlibrary.core.h.g:
    java.lang.String myGroup -> a
    java.lang.String myOptionName -> b
    boolean myIsSynchronized -> c
    java.lang.String getConfigValue(java.lang.String) -> a
    void setConfigValue(java.lang.String) -> b
    void unsetConfigValue() -> b
com.media.zlibrary.core.options.ZLStringListOption -> com.media.zlibrary.core.h.h:
    java.util.List myDefaultValue -> a
    java.util.List myValue -> b
    java.lang.String myDelimiter -> d
    java.util.List getValue() -> a
    void setValue(java.util.List) -> a
com.media.zlibrary.core.options.ZLStringOption -> com.media.zlibrary.core.h.i:
    java.lang.String myDefaultValue -> a
    java.lang.String myValue -> b
    java.lang.String getValue() -> a
    void setValue(java.lang.String) -> c
com.media.zlibrary.core.resources.ZLMissingResource -> com.media.zlibrary.core.i.a:
    com.media.zlibrary.core.resources.ZLMissingResource Instance -> a
    com.media.zlibrary.core.resources.ZLResource getResource(java.lang.String) -> a
    boolean hasValue() -> a
    java.lang.String getValue() -> b
    java.lang.String getValue(int) -> a
com.media.zlibrary.core.resources.ZLResource -> com.media.zlibrary.core.i.b:
    java.lang.String Name -> b
    java.util.List ourLanguages -> a
    java.util.List languages() -> c
    com.media.zlibrary.core.options.ZLStringOption getLanguageOption() -> d
    com.media.zlibrary.core.resources.ZLResource resource(java.lang.String) -> b
    boolean hasValue() -> a
    java.lang.String getValue() -> b
    java.lang.String getValue(int) -> a
    com.media.zlibrary.core.resources.ZLResource getResource(java.lang.String) -> a
com.media.zlibrary.core.resources.ZLTreeResource -> com.media.zlibrary.core.i.c:
    com.media.zlibrary.core.resources.ZLTreeResource ourRoot -> a
    java.lang.Object ourLock -> c
    long ourTimeStamp -> d
    java.lang.String ourLanguage -> e
    java.lang.String ourCountry -> f
    boolean myHasValue -> g
    java.lang.String myValue -> h
    java.util.HashMap myChildren -> i
    java.util.LinkedHashMap myConditionalValues -> j
    com.media.zlibrary.core.resources.ZLTreeResource$Condition parseCondition(java.lang.String) -> d
    void buildTree() -> e
    void updateLanguage() -> f
    void loadData(com.media.zlibrary.core.resources.ZLTreeResource$ResourceTreeReader,java.lang.String) -> a
    void loadData() -> g
    void setValue(java.lang.String) -> e
    boolean hasValue() -> a
    java.lang.String getValue() -> b
    java.lang.String getValue(int) -> a
    com.media.zlibrary.core.resources.ZLResource getResource(java.lang.String) -> a
    java.util.HashMap access$0(com.media.zlibrary.core.resources.ZLTreeResource) -> a
    void access$1(com.media.zlibrary.core.resources.ZLTreeResource,java.util.HashMap) -> a
    void access$3(com.media.zlibrary.core.resources.ZLTreeResource,java.lang.String) -> a
    void access$4(com.media.zlibrary.core.resources.ZLTreeResource,java.util.LinkedHashMap) -> a
    com.media.zlibrary.core.resources.ZLTreeResource$Condition access$5(java.lang.String) -> c
    java.util.LinkedHashMap access$6(com.media.zlibrary.core.resources.ZLTreeResource) -> b
com.media.zlibrary.core.resources.ZLTreeResource$Condition -> com.media.zlibrary.core.i.d:
    boolean accepts(int) -> a
com.media.zlibrary.core.resources.ZLTreeResource$ModCondition -> com.media.zlibrary.core.i.e:
    int myMod -> a
    int myBase -> b
    boolean accepts(int) -> a
com.media.zlibrary.core.resources.ZLTreeResource$ModRangeCondition -> com.media.zlibrary.core.i.f:
    int myMin -> a
    int myMax -> b
    int myBase -> c
    boolean accepts(int) -> a
com.media.zlibrary.core.resources.ZLTreeResource$RangeCondition -> com.media.zlibrary.core.i.g:
    int myMin -> a
    int myMax -> b
    boolean accepts(int) -> a
com.media.zlibrary.core.resources.ZLTreeResource$ResourceTreeReader -> com.media.zlibrary.core.i.h:
    java.util.ArrayList myStack -> a
    void readDocument(com.media.zlibrary.core.resources.ZLTreeResource,com.media.zlibrary.core.filesystem.ZLFile) -> a
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
com.media.zlibrary.core.resources.ZLTreeResource$ValueCondition -> com.media.zlibrary.core.i.i:
    int myValue -> a
    boolean accepts(int) -> a
com.media.zlibrary.core.sqliteconfig.ZLSQLiteConfig -> com.media.zlibrary.core.j.a:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    android.database.sqlite.SQLiteStatement myGetValueStatement -> b
    android.database.sqlite.SQLiteStatement mySetValueStatement -> c
    android.database.sqlite.SQLiteStatement myUnsetValueStatement -> d
    android.database.sqlite.SQLiteStatement myDeleteGroupStatement -> e
    java.util.List listGroups() -> b
    java.util.List listNames(java.lang.String) -> a
    void removeGroup(java.lang.String) -> b
    java.lang.String getValue(java.lang.String,java.lang.String,java.lang.String) -> a
    void setValue(java.lang.String,java.lang.String,java.lang.String) -> b
    void unsetValue(java.lang.String,java.lang.String) -> a
com.media.zlibrary.core.tree.ZLTree -> com.media.zlibrary.core.k.a:
    int mySize -> mySize
    com.media.zlibrary.core.tree.ZLTree Parent -> Parent
    int Level -> Level
    java.util.List mySubTrees -> mySubTrees
    int getSize() -> getSize
    boolean hasChildren() -> hasChildren
    java.util.List subTrees() -> subTrees
    com.media.zlibrary.core.tree.ZLTree getTreeByParagraphNumber(int) -> getTreeByParagraphNumber
    void addSubTree(com.media.zlibrary.core.tree.ZLTree,int) -> addSubTree
    void removeSelf() -> removeSelf
    void clear() -> clear
    com.media.zlibrary.core.tree.ZLTree$TreeIterator iterator() -> iterator
    java.lang.Iterable allSubTrees(int) -> allSubTrees
    java.util.Iterator iterator() -> iterator
    java.util.List access$1(com.media.zlibrary.core.tree.ZLTree) -> access$1
com.media.zlibrary.core.tree.ZLTree$1 -> com.media.zlibrary.core.k.b:
    com.media.zlibrary.core.tree.ZLTree this$0 -> a
    int val$maxLevel -> b
    java.util.Iterator iterator() -> iterator
com.media.zlibrary.core.tree.ZLTree$TreeIterator -> com.media.zlibrary.core.k.c:
    com.media.zlibrary.core.tree.ZLTree myCurrentElement -> b
    java.util.LinkedList myIndexStack -> c
    int myMaxLevel -> d
    com.media.zlibrary.core.tree.ZLTree this$0 -> a
    boolean hasNext() -> hasNext
    com.media.zlibrary.core.tree.ZLTree next() -> a
    void remove() -> remove
    java.lang.Object next() -> next
com.media.zlibrary.core.util.Base64InputStream -> com.media.zlibrary.core.l.a:
    java.io.InputStream myBaseStream -> a
    int myDecoded0 -> b
    int myDecoded1 -> c
    int myDecoded2 -> d
    byte[] myBuffer -> e
    int myBufferOffset -> f
    int myBufferLength -> g
    int available() -> available
    long skip(long) -> skip
    int read() -> read
    void close() -> close
    int read(byte[],int,int) -> read
    void reset() -> reset
    void fillDecodedBuffer() -> a
    void fillBuffer() -> b
    int decode(byte) -> a
com.media.zlibrary.core.util.HexInputStream -> com.media.zlibrary.core.l.b:
    java.io.InputStream myBaseStream -> a
    byte[] myBuffer -> b
    int myBufferOffset -> c
    int myBufferLength -> d
    int available() -> available
    long skip(long) -> skip
    int read() -> read
    void close() -> close
    int read(byte[],int,int) -> read
    void reset() -> reset
    void fillBuffer() -> a
    int decode(byte) -> a
com.media.zlibrary.core.util.MergedInputStream -> com.media.zlibrary.core.l.c:
    java.io.InputStream[] myStreams -> a
    java.io.InputStream myCurrentStream -> b
    int myCurrentStreamNumber -> c
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void reset() -> reset
    boolean nextStream() -> a
com.media.zlibrary.core.util.MimeType -> com.media.zlibrary.core.l.d:
    java.util.Map ourSimpleTypesMap -> R
    com.media.zlibrary.core.util.MimeType APP_ZIP -> a
    com.media.zlibrary.core.util.MimeType APP_EPUB_ZIP -> b
    com.media.zlibrary.core.util.MimeType APP_EPUB -> c
    com.media.zlibrary.core.util.MimeType APP_MOBIPOCKET -> d
    com.media.zlibrary.core.util.MimeType APP_PDF -> e
    com.media.zlibrary.core.util.MimeType APP_RTF -> f
    com.media.zlibrary.core.util.MimeType APP_TXT -> g
    com.media.zlibrary.core.util.MimeType APP_DJVU -> h
    com.media.zlibrary.core.util.MimeType APP_HTML -> i
    com.media.zlibrary.core.util.MimeType APP_HTMLHTM -> j
    com.media.zlibrary.core.util.MimeType APP_DOC -> k
    com.media.zlibrary.core.util.MimeType APP_MSWORD -> l
    com.media.zlibrary.core.util.MimeType APP_FB2_ZIP -> m
    com.media.zlibrary.core.util.MimeType APP_ATOM_XML -> n
    com.media.zlibrary.core.util.MimeType APP_ATOM_XML_ENTRY -> o
    com.media.zlibrary.core.util.MimeType APP_RSS_XML -> p
    com.media.zlibrary.core.util.MimeType APP_OPENSEARCHDESCRIPTION -> q
    com.media.zlibrary.core.util.MimeType APP_LITRES -> r
    com.media.zlibrary.core.util.MimeType TEXT_XML -> s
    com.media.zlibrary.core.util.MimeType TEXT_HTML -> t
    com.media.zlibrary.core.util.MimeType TEXT_XHTML -> u
    com.media.zlibrary.core.util.MimeType TEXT_PLAIN -> v
    com.media.zlibrary.core.util.MimeType TEXT_RTF -> w
    com.media.zlibrary.core.util.MimeType TEXT_FB2 -> x
    com.media.zlibrary.core.util.MimeType IMAGE_PNG -> y
    com.media.zlibrary.core.util.MimeType IMAGE_JPEG -> z
    com.media.zlibrary.core.util.MimeType IMAGE_AUTO -> A
    com.media.zlibrary.core.util.MimeType IMAGE_PALM -> B
    com.media.zlibrary.core.util.MimeType IMAGE_VND_DJVU -> C
    com.media.zlibrary.core.util.MimeType IMAGE_XDJVU -> D
    com.media.zlibrary.core.util.MimeType UNKNOWN -> E
    com.media.zlibrary.core.util.MimeType NULL -> F
    java.util.List TYPES_FB2 -> G
    java.util.List TYPES_EPUB -> H
    java.util.List TYPES_MOBIPOCKET -> I
    java.util.List TYPES_TXT -> J
    java.util.List TYPES_RTF -> K
    java.util.List TYPES_HTML -> L
    java.util.List TYPES_PDF -> M
    java.util.List TYPES_DJVU -> N
    java.util.List TYPES_DOC -> O
    java.util.List TYPES_FB2_ZIP -> P
    java.lang.String Name -> Q
    java.util.Map myParameters -> S
    com.media.zlibrary.core.util.MimeType get(java.lang.String) -> a
    java.lang.String getParameter(java.lang.String) -> b
    boolean equals(java.lang.Object) -> equals
    boolean weakEquals(com.media.zlibrary.core.util.MimeType) -> a
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.media.zlibrary.core.util.MiscUtil -> com.media.zlibrary.core.l.e:
    boolean equals(java.lang.Object,java.lang.Object) -> a
    int hashCode(java.lang.Object) -> a
    boolean matchesIgnoreCase(java.lang.String,java.lang.String) -> a
    java.lang.String join(java.util.List,java.lang.String) -> a
com.media.zlibrary.core.util.SliceInputStream -> com.media.zlibrary.core.l.f:
    int myStart -> a
    int myLength -> b
    int read() -> read
    int read(byte[],int,int) -> read
    long skip(long) -> skip
    int available() -> available
    void reset() -> reset
    int offset() -> a
com.media.zlibrary.core.util.ZLArrayUtils -> com.media.zlibrary.core.l.g:
    byte[] createCopy(byte[],int,int) -> a
    char[] createCopy(char[],int,int) -> a
    int[] createCopy(int[],int,int) -> a
    java.lang.String[] createCopy(java.lang.String[],int,int) -> a
com.media.zlibrary.core.util.ZLBoolean3 -> com.media.zlibrary.core.l.h:
    com.media.zlibrary.core.util.ZLBoolean3 B3_FALSE -> a
    com.media.zlibrary.core.util.ZLBoolean3 B3_TRUE -> b
    com.media.zlibrary.core.util.ZLBoolean3 B3_UNDEFINED -> c
    java.lang.String Name -> d
    com.media.zlibrary.core.util.ZLBoolean3[] ENUM$VALUES -> e
    com.media.zlibrary.core.util.ZLBoolean3 getByName(java.lang.String) -> a
    com.media.zlibrary.core.util.ZLBoolean3[] values() -> values
    com.media.zlibrary.core.util.ZLBoolean3 valueOf(java.lang.String) -> valueOf
com.media.zlibrary.core.util.ZLColor -> com.media.zlibrary.core.l.i:
    short Red -> a
    short Green -> b
    short Blue -> c
    int intValue() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.media.zlibrary.core.util.ZLInputStreamWithOffset -> com.media.zlibrary.core.l.j:
    java.io.InputStream myDecoratedStream -> a
    int myOffset -> b
    int available() -> available
    long skip(long) -> skip
    int read() -> read
    void close() -> close
    int read(byte[],int,int) -> read
    void reset() -> reset
    int offset() -> a
com.media.zlibrary.core.util.ZLNetworkUtil -> com.media.zlibrary.core.l.k:
    java.lang.String url(java.lang.String,java.lang.String) -> a
    boolean hasParameter(java.lang.String,java.lang.String) -> b
    java.lang.String appendParameter(java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String hostFromUrl(java.lang.String) -> a
com.media.zlibrary.core.util.ZLSearchPattern -> com.media.zlibrary.core.l.l:
    boolean IgnoreCase -> a
    char[] LowerCasePattern -> b
    char[] UpperCasePattern -> c
    int getLength() -> a
com.media.zlibrary.core.util.ZLSearchUtil -> com.media.zlibrary.core.l.m:
    int find(char[],int,int,com.media.zlibrary.core.util.ZLSearchPattern) -> a
    int find(char[],int,int,com.media.zlibrary.core.util.ZLSearchPattern,int) -> a
com.media.zlibrary.core.util.ZLTTFInfo -> com.media.zlibrary.core.l.n:
    java.lang.String FamilyName -> a
    java.lang.String SubFamilyName -> b
com.media.zlibrary.core.util.ZLTTFInfoDetector -> com.media.zlibrary.core.l.o:
    java.io.InputStream myStream -> a
    int myPosition -> b
    java.util.Map collectFonts(java.lang.Iterable) -> a
    com.media.zlibrary.core.util.ZLTTFInfo detectInfo(java.io.File) -> a
    int getInt16(byte[],int) -> b
    com.media.zlibrary.core.util.ZLTTFInfo readFontInfo(com.media.zlibrary.core.util.ZLTTFInfoDetector$TableInfo) -> a
    int access$0(byte[],int) -> a
com.media.zlibrary.core.util.ZLTTFInfoDetector$TableInfo -> com.media.zlibrary.core.l.p:
    java.lang.String Name -> a
    int Offset -> b
    int Length -> c
com.media.zlibrary.core.view.DummyPaintContext -> com.media.zlibrary.core.m.a:
    com.media.zlibrary.core.util.ZLColor getBackgroundColor() -> a
    void setFontInternal(java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    void setTextColor(com.media.zlibrary.core.util.ZLColor) -> a
    void setLineColor(com.media.zlibrary.core.util.ZLColor) -> b
    void setFillColor(com.media.zlibrary.core.util.ZLColor,int) -> a
    int getWidth() -> b
    int getHeight() -> c
    int getStringWidth(char[],int,int) -> a
    int getSpaceWidthInternal() -> d
    int getStringHeightInternal() -> e
    int getDescentInternal() -> f
    void drawString(int,int,char[],int,int) -> a
    com.media.zlibrary.core.view.ZLPaintContext$Size imageSize(com.media.zlibrary.core.image.ZLImageData,com.media.zlibrary.core.view.ZLPaintContext$Size,com.media.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    void drawImage(int,int,com.media.zlibrary.core.image.ZLImageData,com.media.zlibrary.core.view.ZLPaintContext$Size,com.media.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    void drawImage(int,int,android.graphics.Bitmap) -> a
    void drawImage(android.graphics.Rect,android.graphics.Rect,android.graphics.Bitmap) -> a
    void fillRectangle(int,int,int,int) -> a
    void fillPolygon(int[],int[]) -> a
    void drawPolygonalLine(int[],int[]) -> b
    void drawOutline(int[],int[]) -> c
com.media.zlibrary.core.view.ZLPaintContext -> com.media.zlibrary.core.m.b:
    java.util.ArrayList myFamilies -> a
    boolean myResetFont -> b
    java.lang.String myFontFamily -> c
    int myFontSize -> d
    boolean myFontIsBold -> e
    boolean myFontIsItalic -> f
    boolean myFontIsUnderlined -> g
    boolean myFontIsStrikedThrough -> h
    int mySpaceWidth -> i
    int myStringHeight -> j
    int myDescent -> k
    com.media.zlibrary.core.util.ZLColor getBackgroundColor() -> a
    void setFont(java.lang.String,int,boolean,boolean,boolean,boolean) -> b
    void setFontInternal(java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    void setTextColor(com.media.zlibrary.core.util.ZLColor) -> a
    void setLineColor(com.media.zlibrary.core.util.ZLColor) -> b
    void setFillColor(com.media.zlibrary.core.util.ZLColor) -> c
    void setFillColor(com.media.zlibrary.core.util.ZLColor,int) -> a
    int getWidth() -> b
    int getHeight() -> c
    int getStringWidth(char[],int,int) -> a
    int getSpaceWidth() -> g
    int getSpaceWidthInternal() -> d
    int getStringHeight() -> h
    int getStringHeightInternal() -> e
    int getDescent() -> i
    int getDescentInternal() -> f
    void drawString(int,int,char[],int,int) -> a
    com.media.zlibrary.core.view.ZLPaintContext$Size imageSize(com.media.zlibrary.core.image.ZLImageData,com.media.zlibrary.core.view.ZLPaintContext$Size,com.media.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    void drawImage(int,int,com.media.zlibrary.core.image.ZLImageData,com.media.zlibrary.core.view.ZLPaintContext$Size,com.media.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    void drawImage(int,int,android.graphics.Bitmap) -> a
    void drawImage(android.graphics.Rect,android.graphics.Rect,android.graphics.Bitmap) -> a
    void fillRectangle(int,int,int,int) -> a
    void drawPolygonalLine(int[],int[]) -> b
    void fillPolygon(int[],int[]) -> a
    void drawOutline(int[],int[]) -> c
com.media.zlibrary.core.view.ZLPaintContext$ScalingType -> com.media.zlibrary.core.m.c:
    com.media.zlibrary.core.view.ZLPaintContext$ScalingType OriginalSize -> a
    com.media.zlibrary.core.view.ZLPaintContext$ScalingType IntegerCoefficient -> b
    com.media.zlibrary.core.view.ZLPaintContext$ScalingType FitMaximum -> c
    com.media.zlibrary.core.view.ZLPaintContext$ScalingType[] ENUM$VALUES -> d
    com.media.zlibrary.core.view.ZLPaintContext$ScalingType[] values() -> values
    com.media.zlibrary.core.view.ZLPaintContext$ScalingType valueOf(java.lang.String) -> valueOf
com.media.zlibrary.core.view.ZLPaintContext$Size -> com.media.zlibrary.core.m.d:
    int Width -> a
    int Height -> b
    boolean equals(java.lang.Object) -> equals
com.media.zlibrary.core.view.ZLView -> com.media.zlibrary.core.m.e:
    com.media.zlibrary.core.application.ZLApplication Application -> a
    com.media.zlibrary.core.view.ZLPaintContext myViewContext -> b
    void setContext(com.media.zlibrary.core.view.ZLPaintContext) -> a
    com.media.zlibrary.core.view.ZLPaintContext getContext() -> m
    int getContextWidth() -> n
    int getContextHeight() -> o
    com.media.zlibrary.core.view.ZLView$Animation getAnimationType() -> l
    void preparePage(com.media.zlibrary.core.view.ZLPaintContext,com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    void paint(com.media.zlibrary.core.view.ZLPaintContext,com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition,com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    void onScrollingFinished(com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    boolean onFingerPress(int,int) -> b
    boolean onFingerRelease(int,int) -> d
    boolean onFingerMove(int,int) -> c
    boolean onFingerLongPress(int,int) -> e
    boolean onFingerReleaseAfterLongPress(int,int) -> g
    boolean onFingerMoveAfterLongPress(int,int) -> f
    boolean onFingerSingleTap(int,int) -> a
    boolean onTrackballRotated(int,int) -> h
    boolean isScrollbarShown() -> p
    int getScrollbarFullSize() -> q
    int getScrollbarThumbPosition(com.media.zlibrary.core.view.ZLView$PageIndex) -> b
    int getScrollbarThumbLength(com.media.zlibrary.core.view.ZLView$PageIndex) -> c
    boolean canScroll(com.media.zlibrary.core.view.ZLView$PageIndex) -> d
    com.media.dbstarplayer.book.Bookmark getCurBookMark() -> r
    void setReadProgressChangeListener(com.media.reader.view.ReadProgressChangeListener) -> a
com.media.zlibrary.core.view.ZLView$Animation -> com.media.zlibrary.core.m.f:
    com.media.zlibrary.core.view.ZLView$Animation none -> a
    com.media.zlibrary.core.view.ZLView$Animation curl -> b
    com.media.zlibrary.core.view.ZLView$Animation slide -> c
    com.media.zlibrary.core.view.ZLView$Animation shift -> d
    com.media.zlibrary.core.view.ZLView$Animation realsingle -> e
    com.media.zlibrary.core.view.ZLView$Animation realdouble -> f
    com.media.zlibrary.core.view.ZLView$Animation[] ENUM$VALUES -> g
    com.media.zlibrary.core.view.ZLView$Animation[] values() -> values
    com.media.zlibrary.core.view.ZLView$Animation valueOf(java.lang.String) -> valueOf
com.media.zlibrary.core.view.ZLView$Direction -> com.media.zlibrary.core.m.g:
    com.media.zlibrary.core.view.ZLView$Direction leftToRight -> a
    com.media.zlibrary.core.view.ZLView$Direction rightToLeft -> b
    com.media.zlibrary.core.view.ZLView$Direction up -> c
    com.media.zlibrary.core.view.ZLView$Direction down -> d
    boolean IsHorizontal -> e
    com.media.zlibrary.core.view.ZLView$Direction[] ENUM$VALUES -> f
    com.media.zlibrary.core.view.ZLView$Direction[] values() -> values
    com.media.zlibrary.core.view.ZLView$Direction valueOf(java.lang.String) -> valueOf
com.media.zlibrary.core.view.ZLView$PageIndex -> com.media.zlibrary.core.m.h:
    com.media.zlibrary.core.view.ZLView$PageIndex previous -> a
    com.media.zlibrary.core.view.ZLView$PageIndex current -> b
    com.media.zlibrary.core.view.ZLView$PageIndex next -> c
    com.media.zlibrary.core.view.ZLView$PageIndex curright -> d
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$PageIndex -> e
    com.media.zlibrary.core.view.ZLView$PageIndex[] ENUM$VALUES -> f
    com.media.zlibrary.core.view.ZLView$PageIndex getNext() -> a
    com.media.zlibrary.core.view.ZLView$PageIndex getPrevious() -> b
    com.media.zlibrary.core.view.ZLView$PageIndex[] values() -> values
    com.media.zlibrary.core.view.ZLView$PageIndex valueOf(java.lang.String) -> valueOf
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$PageIndex() -> c
com.media.zlibrary.core.view.ZLViewWidget -> com.media.zlibrary.core.m.i:
    void reset() -> a
    void repaint() -> b
    void startManualScrolling(int,int,com.media.zlibrary.core.view.ZLView$Direction) -> a
    void scrollManuallyTo(int,int) -> a
    void startAnimatedScrolling$77ae46f6(com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.core.view.ZLView$Direction,int) -> a
    void startAnimatedScrolling(com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.core.view.ZLView$Direction,int) -> b
    void startAnimatedScrolling(int,int,int) -> a
    com.media.zlibrary.core.view.ZLView$Animation getCurAnimationType() -> c
    boolean isTurningPage() -> d
com.media.zlibrary.core.xml.ZLDTDParser -> com.media.zlibrary.core.n.a:
    void doIt(java.io.InputStream,java.util.HashMap) -> a
com.media.zlibrary.core.xml.ZLMutableString -> com.media.zlibrary.core.n.b:
    char[] myData -> a
    int myLength -> b
    void append(char[],int,int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.media.zlibrary.core.xml.ZLStringMap -> com.media.zlibrary.core.n.c:
    java.lang.String[] myKeys -> a
    java.lang.String[] myValues -> b
    int mySize -> c
    void put(java.lang.String,java.lang.String) -> a
    java.lang.String getValue(java.lang.String) -> a
    int getSize() -> a
    java.lang.String getKey(int) -> a
    java.lang.String getValue(int) -> b
    void clear() -> b
com.media.zlibrary.core.xml.ZLXMLParser -> com.media.zlibrary.core.n.d:
    java.io.Reader myStreamReader -> a
    com.media.zlibrary.core.xml.ZLXMLReader myXMLReader -> b
    boolean myProcessNamespaces -> c
    java.util.HashMap ourBufferPool -> d
    java.util.Queue ourStringPool -> e
    char[] myBuffer -> f
    int myBufferDescriptionLength -> g
    com.media.zlibrary.core.xml.ZLMutableString myTagName -> h
    com.media.zlibrary.core.xml.ZLMutableString myCData -> i
    com.media.zlibrary.core.xml.ZLMutableString myAttributeName -> j
    com.media.zlibrary.core.xml.ZLMutableString myAttributeValue -> k
    com.media.zlibrary.core.xml.ZLMutableString myEntityName -> l
    java.util.HashMap ourDTDMaps -> m
    java.lang.String convertToString(java.util.Map,com.media.zlibrary.core.xml.ZLMutableString) -> a
    char[] getBuffer(int) -> a
    void storeBuffer(char[]) -> a
    com.media.zlibrary.core.xml.ZLMutableString getMutableString() -> c
    void storeString(com.media.zlibrary.core.xml.ZLMutableString) -> a
    void finish() -> a
    char[] getEntityValue(java.util.HashMap,java.lang.String) -> a
    java.util.HashMap getDTDMap(java.util.List) -> a
    void doIt() -> b
    boolean processFullTag(com.media.zlibrary.core.xml.ZLXMLReader,java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> a
    boolean processStartTag(com.media.zlibrary.core.xml.ZLXMLReader,java.lang.String,com.media.zlibrary.core.xml.ZLStringMap,java.util.HashMap) -> a
com.media.zlibrary.core.xml.ZLXMLProcessor -> com.media.zlibrary.core.n.e:
    java.util.Map getEntityMap(java.util.List) -> a
    void read(com.media.zlibrary.core.xml.ZLXMLReader,java.io.InputStream,int) -> a
    void read$70e8dae4(com.media.zlibrary.core.xml.ZLXMLReader,java.io.Reader) -> a
    void read(com.media.zlibrary.core.xml.ZLXMLReader,com.media.zlibrary.core.filesystem.ZLFile,int) -> a
com.media.zlibrary.core.xml.ZLXMLReader -> com.media.zlibrary.core.n.f:
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    void startDocumentHandler() -> startDocumentHandler
    void endDocumentHandler() -> endDocumentHandler
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
    void characterDataHandlerFinal(char[],int,int) -> characterDataHandlerFinal
    boolean processNamespaces() -> processNamespaces
    void namespaceMapChangedHandler(java.util.Map) -> namespaceMapChangedHandler
    void collectExternalEntities(java.util.HashMap) -> collectExternalEntities
    java.util.List externalDTDs() -> externalDTDs
com.media.zlibrary.core.xml.ZLXMLReaderAdapter -> com.media.zlibrary.core.n.g:
    java.util.Map myNamespaceMap -> myNamespaceMap
    boolean readQuietly(com.media.zlibrary.core.filesystem.ZLFile) -> readQuietly
    boolean readQuietly(java.lang.String) -> readQuietly
    void read(com.media.zlibrary.core.filesystem.ZLFile) -> read
    void read(java.io.InputStream) -> read
    void read(java.lang.String) -> read
    void read(java.io.Reader) -> read
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
    void characterDataHandlerFinal(char[],int,int) -> characterDataHandlerFinal
    void startDocumentHandler() -> startDocumentHandler
    void endDocumentHandler() -> endDocumentHandler
    boolean processNamespaces() -> processNamespaces
    void namespaceMapChangedHandler(java.util.Map) -> namespaceMapChangedHandler
    boolean testTag(java.lang.String,java.lang.String,java.lang.String) -> testTag
    java.lang.String getAttributeValue(com.media.zlibrary.core.xml.ZLStringMap,java.lang.String,java.lang.String) -> getAttributeValue
    java.lang.String getAttributeValue(com.media.zlibrary.core.xml.ZLStringMap,com.media.zlibrary.core.xml.ZLXMLReaderAdapter$Predicate,java.lang.String) -> getAttributeValue
    void collectExternalEntities(java.util.HashMap) -> collectExternalEntities
    java.util.List externalDTDs() -> externalDTDs
com.media.zlibrary.core.xml.ZLXMLReaderAdapter$Predicate -> com.media.zlibrary.core.n.h:
    boolean accepts$552c4dfd() -> a
com.media.zlibrary.text.hyphenation.ZLTextHyphenationInfo -> com.media.zlibrary.text.a.a:
    boolean[] Mask -> a
    boolean isHyphenationPossible(int) -> a
com.media.zlibrary.text.hyphenation.ZLTextHyphenationReader -> com.media.zlibrary.text.a.b:
    com.media.zlibrary.text.hyphenation.ZLTextTeXHyphenator myHyphenator -> a
    boolean myReadPattern -> b
    char[] myBuffer -> c
    int myBufferLength -> d
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
    boolean endElementHandler(java.lang.String) -> endElementHandler
    void characterDataHandler(char[],int,int) -> characterDataHandler
com.media.zlibrary.text.hyphenation.ZLTextHyphenator -> com.media.zlibrary.text.a.c:
    com.media.zlibrary.text.hyphenation.ZLTextHyphenator ourInstance -> a
    com.media.zlibrary.text.hyphenation.ZLTextHyphenator Instance() -> a
    java.util.List languageCodes() -> b
    void load(java.lang.String) -> a
    com.media.zlibrary.text.hyphenation.ZLTextHyphenationInfo getInfo(com.media.zlibrary.text.view.ZLTextWord) -> a
    void hyphenate(char[],boolean[],int) -> a
com.media.zlibrary.text.hyphenation.ZLTextTeXHyphenationPattern -> com.media.zlibrary.text.a.d:
    int myLength -> a
    char[] mySymbols -> b
    byte[] myValues -> d
    int myHashCode -> c
    void apply(byte[],int) -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.media.zlibrary.text.hyphenation.ZLTextTeXHyphenator -> com.media.zlibrary.text.a.e:
    java.util.HashMap myPatternTable -> a
    java.lang.String myLanguage -> b
    java.util.List myLanguageCodes -> c
    void addPattern(com.media.zlibrary.text.hyphenation.ZLTextTeXHyphenationPattern) -> a
    java.util.List languageCodes() -> b
    void load(java.lang.String) -> a
    void hyphenate(char[],boolean[],int) -> a
com.media.zlibrary.text.model.CachedCharStorage -> com.media.zlibrary.text.model.CachedCharStorage:
    int myBlockSize -> myBlockSize
    char[] createNewBlock(int) -> createNewBlock
    void freezeLastBlock() -> freezeLastBlock
    char[] block(int) -> block
    int size() -> size
com.media.zlibrary.text.model.CachedCharStorageBase -> com.media.zlibrary.text.model.CachedCharStorageBase:
    java.util.ArrayList myArray -> myArray
    java.lang.String myDirectoryName -> myDirectoryName
    java.lang.String myFileExtension -> myFileExtension
    java.lang.String fileName(int) -> fileName
    int size() -> size
    char[] block(int) -> block
com.media.zlibrary.text.model.CachedCharStorageException -> com.media.zlibrary.text.model.CachedCharStorageException:
    long serialVersionUID -> serialVersionUID
com.media.zlibrary.text.model.CachedCharStorageRO -> com.media.zlibrary.text.model.CachedCharStorageRO:
    char[] createNewBlock(int) -> createNewBlock
    void freezeLastBlock() -> freezeLastBlock
    char[] block(int) -> block
    int size() -> size
com.media.zlibrary.text.model.CharStorage -> com.media.zlibrary.text.model.CharStorage:
    int size() -> size
    char[] block(int) -> block
    char[] createNewBlock(int) -> createNewBlock
    void freezeLastBlock() -> freezeLastBlock
com.media.zlibrary.text.model.SimpleCharStorage -> com.media.zlibrary.text.model.SimpleCharStorage:
    int myBlockSize -> myBlockSize
    java.util.ArrayList myArray -> myArray
    int size() -> size
    char[] block(int) -> block
    char[] createNewBlock(int) -> createNewBlock
    void freezeLastBlock() -> freezeLastBlock
    void clear() -> clear
com.media.zlibrary.text.model.ZLImageEntry -> com.media.zlibrary.text.model.ZLImageEntry:
    java.util.Map myImageMap -> myImageMap
    java.lang.String Id -> Id
    short VOffset -> VOffset
    boolean IsCover -> IsCover
    com.media.zlibrary.core.image.ZLImage getImage() -> getImage
com.media.zlibrary.text.model.ZLTextAlignmentType -> com.media.zlibrary.text.model.ZLTextAlignmentType:
    byte ALIGN_UNDEFINED -> ALIGN_UNDEFINED
    byte ALIGN_LEFT -> ALIGN_LEFT
    byte ALIGN_RIGHT -> ALIGN_RIGHT
    byte ALIGN_CENTER -> ALIGN_CENTER
    byte ALIGN_JUSTIFY -> ALIGN_JUSTIFY
    byte ALIGN_LINESTART -> ALIGN_LINESTART
com.media.zlibrary.text.model.ZLTextCSSStyleEntry -> com.media.zlibrary.text.model.ZLTextCSSStyleEntry:
com.media.zlibrary.text.model.ZLTextMark -> com.media.zlibrary.text.model.ZLTextMark:
    int ParagraphIndex -> ParagraphIndex
    int Offset -> Offset
    int Length -> Length
    int compareTo(com.media.zlibrary.text.model.ZLTextMark) -> compareTo
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.media.zlibrary.text.model.ZLTextMetrics -> com.media.zlibrary.text.model.ZLTextMetrics:
    int DPI -> DPI
    int DefaultFontSize -> DefaultFontSize
    int FontSize -> FontSize
    int FontXHeight -> FontXHeight
    int FullWidth -> FullWidth
    int FullHeight -> FullHeight
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.zlibrary.text.model.ZLTextModel -> com.media.zlibrary.text.model.ZLTextModel:
    java.lang.String getId() -> getId
    java.lang.String getLanguage() -> getLanguage
    int getParagraphsNumber() -> getParagraphsNumber
    com.media.zlibrary.text.model.ZLTextParagraph getParagraph(int) -> getParagraph
    void removeAllMarks() -> removeAllMarks
    com.media.zlibrary.text.model.ZLTextMark getFirstMark() -> getFirstMark
    com.media.zlibrary.text.model.ZLTextMark getLastMark() -> getLastMark
    com.media.zlibrary.text.model.ZLTextMark getNextMark(com.media.zlibrary.text.model.ZLTextMark) -> getNextMark
    com.media.zlibrary.text.model.ZLTextMark getPreviousMark(com.media.zlibrary.text.model.ZLTextMark) -> getPreviousMark
    java.util.List getMarks() -> getMarks
    int getTextLength(int) -> getTextLength
    int findParagraphByTextLength(int) -> findParagraphByTextLength
    int search(java.lang.String,int,int,boolean) -> search
com.media.zlibrary.text.model.ZLTextNativeModel -> com.media.zlibrary.text.model.ZLTextNativeModel:
com.media.zlibrary.text.model.ZLTextOtherStyleEntry -> com.media.zlibrary.text.model.ZLTextOtherStyleEntry:
com.media.zlibrary.text.model.ZLTextParagraph -> com.media.zlibrary.text.model.ZLTextParagraph:
    com.media.zlibrary.text.model.ZLTextParagraph$EntryIterator iterator() -> iterator
    byte getKind() -> getKind
com.media.zlibrary.text.model.ZLTextParagraph$Entry -> com.media.zlibrary.text.model.ZLTextParagraph$Entry:
    byte TEXT -> TEXT
    byte IMAGE -> IMAGE
    byte CONTROL -> CONTROL
    byte HYPERLINK_CONTROL -> HYPERLINK_CONTROL
    byte STYLE_CSS -> STYLE_CSS
    byte STYLE_OTHER -> STYLE_OTHER
    byte STYLE_CLOSE -> STYLE_CLOSE
    byte FIXED_HSPACE -> FIXED_HSPACE
    byte RESET_BIDI -> RESET_BIDI
com.media.zlibrary.text.model.ZLTextParagraph$EntryIterator -> com.media.zlibrary.text.model.ZLTextParagraph$EntryIterator:
    byte getType() -> getType
    char[] getTextData() -> getTextData
    int getTextOffset() -> getTextOffset
    int getTextLength() -> getTextLength
    byte getControlKind() -> getControlKind
    boolean getControlIsStart() -> getControlIsStart
    byte getHyperlinkType() -> getHyperlinkType
    java.lang.String getHyperlinkId() -> getHyperlinkId
    com.media.zlibrary.text.model.ZLImageEntry getImageEntry() -> getImageEntry
    com.media.zlibrary.text.model.ZLTextStyleEntry getStyleEntry() -> getStyleEntry
    short getFixedHSpaceLength() -> getFixedHSpaceLength
    boolean hasNext() -> hasNext
    void next() -> next
com.media.zlibrary.text.model.ZLTextParagraph$Kind -> com.media.zlibrary.text.model.ZLTextParagraph$Kind:
    byte TEXT_PARAGRAPH -> TEXT_PARAGRAPH
    byte EMPTY_LINE_PARAGRAPH -> EMPTY_LINE_PARAGRAPH
    byte BEFORE_SKIP_PARAGRAPH -> BEFORE_SKIP_PARAGRAPH
    byte AFTER_SKIP_PARAGRAPH -> AFTER_SKIP_PARAGRAPH
    byte END_OF_SECTION_PARAGRAPH -> END_OF_SECTION_PARAGRAPH
    byte END_OF_TEXT_PARAGRAPH -> END_OF_TEXT_PARAGRAPH
com.media.zlibrary.text.model.ZLTextParagraphImpl -> com.media.zlibrary.text.model.ZLTextParagraphImpl:
    com.media.zlibrary.text.model.ZLTextPlainModel myModel -> myModel
    int myIndex -> myIndex
    com.media.zlibrary.text.model.ZLTextParagraph$EntryIterator iterator() -> iterator
    byte getKind() -> getKind
com.media.zlibrary.text.model.ZLTextPlainModel -> com.media.zlibrary.text.model.ZLTextPlainModel:
    java.lang.String myId -> myId
    java.lang.String myLanguage -> myLanguage
    int[] myStartEntryIndices -> myStartEntryIndices
    int[] myStartEntryOffsets -> myStartEntryOffsets
    int[] myParagraphLengths -> myParagraphLengths
    int[] myTextSizes -> myTextSizes
    byte[] myParagraphKinds -> myParagraphKinds
    int myParagraphsNumber -> myParagraphsNumber
    com.media.zlibrary.text.model.CharStorage myStorage -> myStorage
    java.util.Map myImageMap -> myImageMap
    java.util.ArrayList myMarks -> myMarks
    java.lang.String getId() -> getId
    java.lang.String getLanguage() -> getLanguage
    com.media.zlibrary.text.model.ZLTextMark getFirstMark() -> getFirstMark
    com.media.zlibrary.text.model.ZLTextMark getLastMark() -> getLastMark
    com.media.zlibrary.text.model.ZLTextMark getNextMark(com.media.zlibrary.text.model.ZLTextMark) -> getNextMark
    com.media.zlibrary.text.model.ZLTextMark getPreviousMark(com.media.zlibrary.text.model.ZLTextMark) -> getPreviousMark
    int search(java.lang.String,int,int,boolean) -> search
    java.util.List getMarks() -> getMarks
    void removeAllMarks() -> removeAllMarks
    int getParagraphsNumber() -> getParagraphsNumber
    com.media.zlibrary.text.model.ZLTextParagraph getParagraph(int) -> getParagraph
    int getTextLength(int) -> getTextLength
    int binarySearch(int[],int,int) -> binarySearch
    int findParagraphByTextLength(int) -> findParagraphByTextLength
com.media.zlibrary.text.model.ZLTextPlainModel$EntryIteratorImpl -> com.media.zlibrary.text.model.ZLTextPlainModel$EntryIteratorImpl:
    int myCounter -> myCounter
    int myLength -> myLength
    byte myType -> myType
    int myDataIndex -> myDataIndex
    int myDataOffset -> myDataOffset
    char[] myTextData -> myTextData
    int myTextOffset -> myTextOffset
    int myTextLength -> myTextLength
    byte myControlKind -> myControlKind
    boolean myControlIsStart -> myControlIsStart
    byte myHyperlinkType -> myHyperlinkType
    java.lang.String myHyperlinkId -> myHyperlinkId
    com.media.zlibrary.text.model.ZLImageEntry myImageEntry -> myImageEntry
    com.media.zlibrary.text.model.ZLTextStyleEntry myStyleEntry -> myStyleEntry
    short myFixedHSpaceLength -> myFixedHSpaceLength
    com.media.zlibrary.text.model.ZLTextPlainModel this$0 -> this$0
    void reset(int) -> reset
    byte getType() -> getType
    char[] getTextData() -> getTextData
    int getTextOffset() -> getTextOffset
    int getTextLength() -> getTextLength
    byte getControlKind() -> getControlKind
    boolean getControlIsStart() -> getControlIsStart
    byte getHyperlinkType() -> getHyperlinkType
    java.lang.String getHyperlinkId() -> getHyperlinkId
    com.media.zlibrary.text.model.ZLImageEntry getImageEntry() -> getImageEntry
    com.media.zlibrary.text.model.ZLTextStyleEntry getStyleEntry() -> getStyleEntry
    short getFixedHSpaceLength() -> getFixedHSpaceLength
    boolean hasNext() -> hasNext
    void next() -> next
com.media.zlibrary.text.model.ZLTextSpecialParagraphImpl -> com.media.zlibrary.text.model.ZLTextSpecialParagraphImpl:
    byte myKind -> myKind
    byte getKind() -> getKind
com.media.zlibrary.text.model.ZLTextStyleEntry -> com.media.zlibrary.text.model.ZLTextStyleEntry:
    short myFeatureMask -> myFeatureMask
    com.media.zlibrary.text.model.ZLTextStyleEntry$Length[] myLengths -> myLengths
    byte myAlignmentType -> myAlignmentType
    java.lang.String myFontFamily -> myFontFamily
    byte mySupportedFontModifiers -> mySupportedFontModifiers
    byte myFontModifiers -> myFontModifiers
    boolean isFeatureSupported(short,int) -> isFeatureSupported
    boolean isFeatureSupported(int) -> isFeatureSupported
    void setLength(int,short,byte) -> setLength
    int fullSize(com.media.zlibrary.text.model.ZLTextMetrics,int) -> fullSize
    int getLength(int,com.media.zlibrary.text.model.ZLTextMetrics) -> getLength
    void setAlignmentType(byte) -> setAlignmentType
    byte getAlignmentType() -> getAlignmentType
    void setFontFamily(java.lang.String) -> setFontFamily
    java.lang.String getFontFamily() -> getFontFamily
    void setFontModifiers(byte,byte) -> setFontModifiers
    void setFontModifier(byte,boolean) -> setFontModifier
    com.media.zlibrary.core.util.ZLBoolean3 getFontModifier(byte) -> getFontModifier
com.media.zlibrary.text.model.ZLTextStyleEntry$Feature -> com.media.zlibrary.text.model.ZLTextStyleEntry$Feature:
    int LENGTH_LEFT_INDENT -> LENGTH_LEFT_INDENT
    int LENGTH_RIGHT_INDENT -> LENGTH_RIGHT_INDENT
    int LENGTH_FIRST_LINE_INDENT_DELTA -> LENGTH_FIRST_LINE_INDENT_DELTA
    int LENGTH_SPACE_BEFORE -> LENGTH_SPACE_BEFORE
    int LENGTH_SPACE_AFTER -> LENGTH_SPACE_AFTER
    int LENGTH_FONT_SIZE -> LENGTH_FONT_SIZE
    int NUMBER_OF_LENGTHS -> NUMBER_OF_LENGTHS
    int ALIGNMENT_TYPE -> ALIGNMENT_TYPE
    int FONT_FAMILY -> FONT_FAMILY
    int FONT_STYLE_MODIFIER -> FONT_STYLE_MODIFIER
com.media.zlibrary.text.model.ZLTextStyleEntry$FontModifier -> com.media.zlibrary.text.model.ZLTextStyleEntry$FontModifier:
    byte FONT_MODIFIER_BOLD -> FONT_MODIFIER_BOLD
    byte FONT_MODIFIER_ITALIC -> FONT_MODIFIER_ITALIC
    byte FONT_MODIFIER_UNDERLINED -> FONT_MODIFIER_UNDERLINED
    byte FONT_MODIFIER_STRIKEDTHROUGH -> FONT_MODIFIER_STRIKEDTHROUGH
    byte FONT_MODIFIER_SMALLCAPS -> FONT_MODIFIER_SMALLCAPS
    byte FONT_MODIFIER_INHERIT -> FONT_MODIFIER_INHERIT
    byte FONT_MODIFIER_SMALLER -> FONT_MODIFIER_SMALLER
    byte FONT_MODIFIER_LARGER -> FONT_MODIFIER_LARGER
com.media.zlibrary.text.model.ZLTextStyleEntry$Length -> com.media.zlibrary.text.model.ZLTextStyleEntry$Length:
    short Size -> Size
    byte Unit -> Unit
    com.media.zlibrary.text.model.ZLTextStyleEntry this$0 -> this$0
com.media.zlibrary.text.model.ZLTextStyleEntry$SizeUnit -> com.media.zlibrary.text.model.ZLTextStyleEntry$SizeUnit:
    byte PIXEL -> PIXEL
    byte POINT -> POINT
    byte EM_100 -> EM_100
    byte EX_100 -> EX_100
    byte PERCENT -> PERCENT
com.media.zlibrary.text.model.ZLTextWritableModel -> com.media.zlibrary.text.model.ZLTextWritableModel:
    void createParagraph(byte) -> createParagraph
    void addText(char[]) -> addText
    void addText(char[],int,int) -> addText
    void addImage(java.lang.String,short,boolean) -> addImage
    void addControl(byte,boolean) -> addControl
    void addHyperlinkControl(byte,byte,java.lang.String) -> addHyperlinkControl
    void addStyleEntry(com.media.zlibrary.text.model.ZLTextStyleEntry) -> addStyleEntry
    void addFixedHSpace(short) -> addFixedHSpace
    void addBidiReset() -> addBidiReset
    void stopReading() -> stopReading
com.media.zlibrary.text.model.ZLTextWritablePlainModel -> com.media.zlibrary.text.model.ZLTextWritablePlainModel:
    char[] myCurrentDataBlock -> myCurrentDataBlock
    int myBlockOffset -> myBlockOffset
    void extend() -> extend
    void createParagraph(byte) -> createParagraph
    char[] getDataBlock(int) -> getDataBlock
    void addText(char[]) -> addText
    void addText(char[],int,int) -> addText
    void addImage(java.lang.String,short,boolean) -> addImage
    void addControl(byte,boolean) -> addControl
    void addHyperlinkControl(byte,byte,java.lang.String) -> addHyperlinkControl
    void addStyleEntry(com.media.zlibrary.text.model.ZLTextStyleEntry) -> addStyleEntry
    void addFixedHSpace(short) -> addFixedHSpace
    void addBidiReset() -> addBidiReset
    void stopReading() -> stopReading
com.media.zlibrary.text.view.ZLTextControlElement -> com.media.zlibrary.text.b.a:
    com.media.zlibrary.text.view.ZLTextControlElement[] myStartElements -> g
    com.media.zlibrary.text.view.ZLTextControlElement[] myEndElements -> h
    byte Kind -> a
    boolean IsStart -> b
    com.media.zlibrary.text.view.ZLTextControlElement get(byte,boolean) -> a
com.media.zlibrary.text.view.ZLTextElement -> com.media.zlibrary.text.b.b:
    com.media.zlibrary.text.view.ZLTextElement HSpace -> c
    com.media.zlibrary.text.view.ZLTextElement AfterParagraph -> d
    com.media.zlibrary.text.view.ZLTextElement Indent -> e
    com.media.zlibrary.text.view.ZLTextElement StyleClose -> f
com.media.zlibrary.text.view.ZLTextElementArea -> com.media.zlibrary.text.b.c:
    int XStart -> a
    int XEnd -> b
    int YStart -> c
    int YEnd -> d
    int Length -> e
    boolean AddHyphenationSign -> f
    boolean ChangeStyle -> g
    com.media.zlibrary.text.view.ZLTextStyle Style -> h
    com.media.zlibrary.text.view.ZLTextElement Element -> i
    boolean myIsLastInElement -> j
    boolean isLastInElement() -> a
com.media.zlibrary.text.view.ZLTextElementAreaVector -> com.media.zlibrary.text.b.d:
    java.util.List myAreas -> a
    java.util.List myElementRegions -> b
    com.media.zlibrary.text.view.ZLTextRegion myCurrentElementRegion -> c
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction -> d
    void clear() -> a
    int size() -> b
    com.media.zlibrary.text.view.ZLTextElementArea get(int) -> a
    com.media.zlibrary.text.view.ZLTextElementArea getFirstArea() -> c
    com.media.zlibrary.text.view.ZLTextElementArea getLastArea() -> d
    boolean add(com.media.zlibrary.text.view.ZLTextElementArea) -> a
    com.media.zlibrary.text.view.ZLTextElementArea getFirstAfter(com.media.zlibrary.text.view.ZLTextPosition) -> a
    com.media.zlibrary.text.view.ZLTextElementArea getLastBefore(com.media.zlibrary.text.view.ZLTextPosition) -> b
    com.media.zlibrary.text.view.ZLTextRegion getRegion(com.media.zlibrary.text.view.ZLTextRegion$Soul) -> a
    com.media.zlibrary.text.view.ZLTextRegion findRegion(int,int,int,com.media.zlibrary.text.view.ZLTextRegion$Filter) -> a
    com.media.zlibrary.text.view.ZLTextRegion nextRegion(com.media.zlibrary.text.view.ZLTextRegion,com.media.zlibrary.core.view.ZLView$Direction,com.media.zlibrary.text.view.ZLTextRegion$Filter) -> a
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction() -> e
com.media.zlibrary.text.view.ZLTextFixedHSpaceElement -> com.media.zlibrary.text.b.e:
    com.media.zlibrary.text.view.ZLTextElement[] ourCollection -> b
    short Length -> a
    com.media.zlibrary.text.view.ZLTextElement getElement(short) -> a
com.media.zlibrary.text.view.ZLTextFixedPosition -> com.media.zlibrary.text.b.f:
    int ParagraphIndex -> ParagraphIndex
    int ElementIndex -> ElementIndex
    int CharIndex -> CharIndex
    int getParagraphIndex() -> getParagraphIndex
    int getElementIndex() -> getElementIndex
    int getCharIndex() -> getCharIndex
com.media.zlibrary.text.view.ZLTextHighlighting -> com.media.zlibrary.text.b.g:
    boolean isEmpty() -> c
    com.media.zlibrary.text.view.ZLTextPosition getStartPosition() -> d
    com.media.zlibrary.text.view.ZLTextPosition getEndPosition() -> e
    com.media.zlibrary.text.view.ZLTextElementArea getStartArea(com.media.zlibrary.text.view.ZLTextPage) -> a
    com.media.zlibrary.text.view.ZLTextElementArea getEndArea(com.media.zlibrary.text.view.ZLTextPage) -> b
    com.media.zlibrary.core.util.ZLColor getBackgroundColor() -> b
    boolean intersects(com.media.zlibrary.text.view.ZLTextPage) -> c
    int compareTo(java.lang.Object) -> compareTo
com.media.zlibrary.text.view.ZLTextHorizontalConvexHull -> com.media.zlibrary.text.b.h:
    java.util.LinkedList myRectangles -> a
    void addArea(com.media.zlibrary.text.view.ZLTextElementArea) -> a
    void normalize() -> a
    int distanceTo(int,int) -> a
    void draw(com.media.zlibrary.core.view.ZLPaintContext) -> a
com.media.zlibrary.text.view.ZLTextHorizontalConvexHull$Rectangle -> com.media.zlibrary.text.b.i:
    int Left -> a
    int Right -> b
    int Top -> c
    int Bottom -> d
com.media.zlibrary.text.view.ZLTextHyperlink -> com.media.zlibrary.text.b.j:
    byte Type -> a
    java.lang.String Id -> b
    java.util.List myElementIndexes -> d
    com.media.zlibrary.text.view.ZLTextHyperlink NO_LINK -> c
    void addElementIndex(int) -> a
    java.util.List elementIndexes() -> a
com.media.zlibrary.text.view.ZLTextHyperlinkControlElement -> com.media.zlibrary.text.b.k:
    com.media.zlibrary.text.view.ZLTextHyperlink Hyperlink -> g
com.media.zlibrary.text.view.ZLTextHyperlinkRegionSoul -> com.media.zlibrary.text.b.l:
    com.media.zlibrary.text.view.ZLTextHyperlink Hyperlink -> a
com.media.zlibrary.text.view.ZLTextImageElement -> com.media.zlibrary.text.b.m:
    java.lang.String Id -> a
    com.media.zlibrary.core.image.ZLImageData ImageData -> b
    java.lang.String URL -> g
    boolean IsCover -> h
    int width -> i
    int height -> j
    com.media.reader.vo.ImageEntity$ImageAlign align -> k
com.media.zlibrary.text.view.ZLTextImageRegionSoul -> com.media.zlibrary.text.b.n:
    com.media.zlibrary.text.view.ZLTextImageElement ImageElement -> a
com.media.zlibrary.text.view.ZLTextLineInfo -> com.media.zlibrary.text.b.o:
    com.media.zlibrary.text.view.ZLTextParagraphCursor ParagraphCursor -> a
    int ParagraphCursorLength -> b
    int StartElementIndex -> c
    int StartCharIndex -> d
    int RealStartElementIndex -> e
    int RealStartCharIndex -> f
    int EndElementIndex -> g
    int EndCharIndex -> h
    boolean IsVisible -> i
    int LeftIndent -> j
    int Width -> k
    int Height -> l
    int xMax -> m
    int xMin -> n
    int Descent -> o
    int VSpaceAfter -> p
    int SpaceCounter -> q
    com.media.zlibrary.text.view.ZLTextStyle StartStyle -> r
    boolean isImageLine -> s
    boolean isSideTextLine -> t
    boolean isEndOfParagraph() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.zlibrary.text.view.ZLTextManualHighlighting -> com.media.zlibrary.text.b.p:
    com.media.zlibrary.core.util.ZLColor getBackgroundColor() -> b
com.media.zlibrary.text.view.ZLTextPage -> com.media.zlibrary.text.b.q:
    com.media.zlibrary.text.view.ZLTextWordCursor StartCursor -> a
    com.media.zlibrary.text.view.ZLTextWordCursor EndCursor -> b
    java.util.ArrayList LineInfos -> c
    java.util.ArrayList ImageLists -> d
    int curImageIndex -> g
    int PaintState -> e
    com.media.zlibrary.text.view.ZLTextElementAreaVector TextElementMap -> f
    int myWidth -> h
    int myHeight -> i
    com.media.dbstarplayer.book.Bookmark mBookMark -> j
    void setSize(int,int,boolean) -> a
    java.lang.String toString() -> toString
    com.media.reader.vo.ImageEntity getCurrentImage() -> a
    boolean hasImage(com.media.reader.vo.ImageEntity) -> a
    com.media.reader.vo.ImageEntity getPreviousImage() -> b
    void setCurImage(int) -> a
    void resetImageTextHeight(com.media.reader.vo.ImageEntity) -> b
    void reset() -> c
    void moveStartCursor(com.media.zlibrary.text.view.ZLTextParagraphCursor) -> a
    void moveStartCursor(int,int,int) -> a
    int getTextWidth() -> d
    int getTextHeight() -> e
    boolean isEmptyPage() -> f
    void findLineFromStart(com.media.zlibrary.text.view.ZLTextWordCursor,int) -> a
    void findLineFromEnd(com.media.zlibrary.text.view.ZLTextWordCursor,int) -> b
    void findPercentFromStart(com.media.zlibrary.text.view.ZLTextWordCursor,int) -> c
    com.media.dbstarplayer.book.Bookmark getBookMark() -> g
    void setBookMark(com.media.dbstarplayer.book.Bookmark) -> a
com.media.zlibrary.text.view.ZLTextParagraphCursor -> com.media.zlibrary.text.b.r:
    int Index -> a
    com.media.zlibrary.text.model.ZLTextModel Model -> b
    java.util.ArrayList myElements -> c
    char[] SPACE_ARRAY -> d
    com.media.zlibrary.text.view.ZLTextParagraphCursor cursor(com.media.zlibrary.text.model.ZLTextModel,int) -> a
    void fill() -> a
    void clear() -> b
    boolean isFirst() -> c
    boolean isLast() -> d
    boolean isEndOfSection() -> e
    int getParagraphLength() -> f
    com.media.zlibrary.text.view.ZLTextParagraphCursor previous() -> g
    com.media.zlibrary.text.view.ZLTextParagraphCursor next() -> h
    com.media.zlibrary.text.view.ZLTextElement getElement(int) -> a
    java.lang.String toString() -> toString
com.media.zlibrary.text.view.ZLTextParagraphCursor$Processor -> com.media.zlibrary.text.b.s:
    com.media.zlibrary.text.model.ZLTextParagraph myParagraph -> a
    org.vimgadgets.linebreak.LineBreaker myLineBreaker -> b
    java.util.ArrayList myElements -> c
    int myOffset -> d
    int myFirstMark -> e
    int myLastMark -> f
    java.util.List myMarks -> g
    byte[] ourBreaks -> h
    void fill() -> a
    void addWord(char[],int,int,int,com.media.zlibrary.text.view.ZLTextHyperlink) -> a
com.media.zlibrary.text.view.ZLTextParagraphCursorCache -> com.media.zlibrary.text.b.t:
    java.util.HashMap ourMap -> a
    void put(com.media.zlibrary.text.model.ZLTextModel,int,com.media.zlibrary.text.view.ZLTextParagraphCursor) -> a
    com.media.zlibrary.text.view.ZLTextParagraphCursor get(com.media.zlibrary.text.model.ZLTextModel,int) -> a
    void clear() -> a
com.media.zlibrary.text.view.ZLTextParagraphCursorCache$Key -> com.media.zlibrary.text.b.u:
    com.media.zlibrary.text.model.ZLTextModel myModel -> a
    int myIndex -> b
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.media.zlibrary.text.view.ZLTextPosition -> com.media.zlibrary.text.b.v:
    int getParagraphIndex() -> getParagraphIndex
    int getElementIndex() -> getElementIndex
    int getCharIndex() -> getCharIndex
    boolean samePositionAs(com.media.zlibrary.text.view.ZLTextPosition) -> samePositionAs
    int compareTo(com.media.zlibrary.text.view.ZLTextPosition) -> compareTo
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    java.lang.String toString() -> toString
    int compareTo(java.lang.Object) -> compareTo
com.media.zlibrary.text.view.ZLTextRegion -> com.media.zlibrary.text.b.w:
    com.media.zlibrary.text.view.ZLTextRegion$Filter AnyRegionFilter -> a
    com.media.zlibrary.text.view.ZLTextRegion$Filter HyperlinkFilter -> b
    com.media.zlibrary.text.view.ZLTextRegion$Filter ImageOrHyperlinkFilter -> c
    com.media.zlibrary.text.view.ZLTextRegion$Soul mySoul -> d
    java.util.List myAreaList -> e
    com.media.zlibrary.text.view.ZLTextElementArea[] myAreas -> f
    int myFromIndex -> g
    int myToIndex -> h
    com.media.zlibrary.text.view.ZLTextHorizontalConvexHull myHull -> i
    void extend() -> a
    com.media.zlibrary.text.view.ZLTextRegion$Soul getSoul() -> b
    com.media.zlibrary.text.view.ZLTextElementArea[] textAreas() -> g
    com.media.zlibrary.text.view.ZLTextHorizontalConvexHull convexHull() -> h
    com.media.zlibrary.text.view.ZLTextElementArea getFirstArea() -> c
    com.media.zlibrary.text.view.ZLTextElementArea getLastArea() -> d
    int getTop() -> e
    int getBottom() -> f
    void draw(com.media.zlibrary.core.view.ZLPaintContext) -> a
    int distanceTo(int,int) -> a
    boolean isAtRightOf(com.media.zlibrary.text.view.ZLTextRegion) -> a
    boolean isAtLeftOf(com.media.zlibrary.text.view.ZLTextRegion) -> b
    boolean isUnder(com.media.zlibrary.text.view.ZLTextRegion) -> c
    boolean isOver(com.media.zlibrary.text.view.ZLTextRegion) -> d
    boolean isExactlyUnder(com.media.zlibrary.text.view.ZLTextRegion) -> e
    boolean isExactlyOver(com.media.zlibrary.text.view.ZLTextRegion) -> f
com.media.zlibrary.text.view.ZLTextRegion$1 -> com.media.zlibrary.text.b.x:
    boolean accepts(com.media.zlibrary.text.view.ZLTextRegion) -> a
com.media.zlibrary.text.view.ZLTextRegion$2 -> com.media.zlibrary.text.b.y:
    boolean accepts(com.media.zlibrary.text.view.ZLTextRegion) -> a
com.media.zlibrary.text.view.ZLTextRegion$3 -> com.media.zlibrary.text.b.z:
    boolean accepts(com.media.zlibrary.text.view.ZLTextRegion) -> a
com.media.zlibrary.text.view.ZLTextRegion$Filter -> com.media.zlibrary.text.b.aa:
    boolean accepts(com.media.zlibrary.text.view.ZLTextRegion) -> a
com.media.zlibrary.text.view.ZLTextRegion$Soul -> com.media.zlibrary.text.b.ab:
    int ParagraphIndex -> b
    int StartElementIndex -> c
    int EndElementIndex -> d
    boolean accepts(com.media.zlibrary.text.view.ZLTextElementArea) -> a
    boolean equals(java.lang.Object) -> equals
    int compareTo(com.media.zlibrary.text.view.ZLTextRegion$Soul) -> a
    int compareTo(com.media.zlibrary.text.view.ZLTextElementArea) -> b
    int compareTo(java.lang.Object) -> compareTo
com.media.zlibrary.text.view.ZLTextSelection -> com.media.zlibrary.text.b.ac:
    com.media.zlibrary.text.view.ZLTextView myView -> a
    com.media.zlibrary.text.view.ZLTextRegion$Soul myLeftMostRegionSoul -> b
    com.media.zlibrary.text.view.ZLTextRegion$Soul myRightMostRegionSoul -> c
    com.media.zlibrary.text.view.ZLTextSelectionCursor myCursorInMovement -> d
    com.media.zlibrary.text.view.ZLTextSelection$Point myCursorInMovementPoint -> e
    com.media.zlibrary.text.view.ZLTextSelection$Scroller myScroller -> f
    boolean isEmpty() -> c
    boolean clear() -> a
    void setCursorInMovement(com.media.zlibrary.text.view.ZLTextSelectionCursor,int,int) -> a
    com.media.zlibrary.text.view.ZLTextSelectionCursor getCursorInMovement() -> f
    com.media.zlibrary.text.view.ZLTextSelection$Point getCursorInMovementPoint() -> g
    boolean start(int,int) -> a
    void stop() -> h
    void expandTo(com.media.zlibrary.text.view.ZLTextPage,int,int) -> a
    boolean isAreaSelected(com.media.zlibrary.text.view.ZLTextElementArea) -> a
    com.media.zlibrary.text.view.ZLTextPosition getStartPosition() -> d
    com.media.zlibrary.text.view.ZLTextPosition getEndPosition() -> e
    com.media.zlibrary.text.view.ZLTextElementArea getStartArea(com.media.zlibrary.text.view.ZLTextPage) -> a
    com.media.zlibrary.text.view.ZLTextElementArea getEndArea(com.media.zlibrary.text.view.ZLTextPage) -> b
    boolean hasPartBeforePage(com.media.zlibrary.text.view.ZLTextPage) -> d
    boolean hasPartAfterPage(com.media.zlibrary.text.view.ZLTextPage) -> e
    com.media.zlibrary.core.util.ZLColor getBackgroundColor() -> b
    com.media.zlibrary.text.view.ZLTextView access$0(com.media.zlibrary.text.view.ZLTextSelection) -> a
com.media.zlibrary.text.view.ZLTextSelection$Point -> com.media.zlibrary.text.b.ad:
    int X -> a
    int Y -> b
com.media.zlibrary.text.view.ZLTextSelection$Scroller -> com.media.zlibrary.text.b.ae:
    com.media.zlibrary.text.view.ZLTextPage myPage -> b
    boolean myScrollForward -> c
    int myX -> d
    int myY -> e
    com.media.zlibrary.text.view.ZLTextSelection this$0 -> a
    boolean scrollsForward() -> a
    void setXY(int,int) -> a
    void run() -> run
    void access$0(com.media.zlibrary.text.view.ZLTextSelection$Scroller) -> a
com.media.zlibrary.text.view.ZLTextSelectionCursor -> com.media.zlibrary.text.b.af:
    com.media.zlibrary.text.view.ZLTextSelectionCursor None -> a
    com.media.zlibrary.text.view.ZLTextSelectionCursor Left -> b
    com.media.zlibrary.text.view.ZLTextSelectionCursor Right -> c
    int ourHeight -> d
    int ourWidth -> e
    int ourAccent -> f
    com.media.zlibrary.text.view.ZLTextSelectionCursor[] ENUM$VALUES -> g
    void init() -> d
    int getHeight() -> a
    int getWidth() -> b
    int getAccent() -> c
    com.media.zlibrary.text.view.ZLTextSelectionCursor[] values() -> values
    com.media.zlibrary.text.view.ZLTextSelectionCursor valueOf(java.lang.String) -> valueOf
com.media.zlibrary.text.view.ZLTextSimpleHighlighting -> com.media.zlibrary.text.b.ag:
    com.media.zlibrary.text.view.ZLTextView View -> c
    com.media.zlibrary.text.view.ZLTextPosition myStartPosition -> a
    com.media.zlibrary.text.view.ZLTextPosition myEndPosition -> b
    boolean isEmpty() -> c
    com.media.zlibrary.text.view.ZLTextPosition getStartPosition() -> d
    com.media.zlibrary.text.view.ZLTextPosition getEndPosition() -> e
    com.media.zlibrary.text.view.ZLTextElementArea getStartArea(com.media.zlibrary.text.view.ZLTextPage) -> a
    com.media.zlibrary.text.view.ZLTextElementArea getEndArea(com.media.zlibrary.text.view.ZLTextPage) -> b
com.media.zlibrary.text.view.ZLTextStyle -> com.media.zlibrary.text.b.ah:
    com.media.zlibrary.text.view.ZLTextStyle Base -> a
    com.media.zlibrary.text.view.ZLTextHyperlink Hyperlink -> b
    java.lang.String getFontFamily() -> a
    int getFontSize(com.media.zlibrary.text.model.ZLTextMetrics) -> a
    boolean isBold() -> b
    boolean isItalic() -> c
    boolean isUnderline() -> d
    boolean isStrikeThrough() -> e
    int getLeftIndent() -> f
    int getRightIndent() -> g
    int getFirstLineIndentDelta() -> h
    int getLineSpacePercent() -> i
    int getVerticalShift() -> j
    int getSpaceBefore() -> k
    int getSpaceAfter() -> l
    byte getAlignment() -> m
    boolean allowHyphenations() -> n
com.media.zlibrary.text.view.ZLTextStyleElement -> com.media.zlibrary.text.b.ai:
    com.media.zlibrary.text.model.ZLTextStyleEntry Entry -> a
com.media.zlibrary.text.view.ZLTextTraverser -> com.media.zlibrary.text.b.aj:
    com.media.zlibrary.text.view.ZLTextView myView -> a
    void processWord(com.media.zlibrary.text.view.ZLTextWord) -> a
    void processSpace() -> a
    void processEndOfParagraph() -> b
    void traverse(com.media.zlibrary.text.view.ZLTextPosition,com.media.zlibrary.text.view.ZLTextPosition) -> a
com.media.zlibrary.text.view.ZLTextView -> com.media.zlibrary.text.b.ak:
    java.lang.String TAG -> f
    com.media.zlibrary.text.model.ZLTextModel myModel -> g
    int myScrollingMode -> h
    int myOverlappingValue -> i
    com.media.zlibrary.text.view.ZLTextPage myPreviousPage -> j
    com.media.zlibrary.text.view.ZLTextPage myCurrentPage -> b
    com.media.zlibrary.text.view.ZLTextPage myNextPage -> k
    com.media.zlibrary.text.view.ZLTextPage myCurrentRightPage -> c
    java.util.HashMap myLineInfoCache -> l
    com.media.zlibrary.text.view.ZLTextRegion$Soul mySelectedRegionSoul -> m
    boolean myHighlightSelectedRegion -> n
    com.media.zlibrary.text.view.ZLTextSelection mySelection -> o
    java.util.Set myHighlightings -> p
    android.graphics.Bitmap mBookMarkBitmap -> q
    int mBookMarkImageWidth -> r
    int mBookMarkImageHeight -> s
    int mBookMarkTransparentHeight -> t
    boolean isShowVolumeStatus -> u
    android.media.AudioManager mAudioManager -> v
    android.graphics.Bitmap mAudioBackBitmap -> w
    android.graphics.Bitmap mAudioLevelBitmap -> x
    int mCurAudioLevel -> y
    int mCurAudioLevelImageResID -> z
    com.media.zlibrary.text.view.ZLTextView$HideVolumeStatusRunnable mHideVolumeStatusRunnable -> A
    int VOLUME_DISMISS_TIME -> B
    com.media.reader.view.ReadProgressChangeListener mReadProgressChangeListener -> C
    int MSG_READ_PROGRESS_CHANGED -> D
    android.os.Handler mHandler -> d
    char[] ourDefaultLetters -> E
    char[] myLettersBuffer -> F
    int myLettersBufferLength -> G
    com.media.zlibrary.text.model.ZLTextModel myLettersModel -> H
    float myCharWidth -> I
    com.media.zlibrary.text.view.ZLTextPage myRealBookmarkPage -> J
    char[] SPACE -> K
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$PageIndex -> L
    int[] $SWITCH_TABLE$com$media$reader$vo$ImageEntity$ImageAlign -> M
    void getBookMarkBitmap() -> i
    android.graphics.Bitmap getAudioBackBitmap() -> j
    void setModel(com.media.zlibrary.text.model.ZLTextModel) -> a
    com.media.zlibrary.text.model.ZLTextModel getModel() -> s
    com.media.zlibrary.text.view.ZLTextWordCursor getStartCursor() -> t
    com.media.zlibrary.text.view.ZLTextWordCursor getEndCursor() -> u
    com.media.zlibrary.text.view.ZLTextWordCursor getDoublePageStartCursor() -> v
    com.media.zlibrary.text.view.ZLTextWordCursor getDoublePageEndCursor() -> w
    void gotoMark(com.media.zlibrary.text.model.ZLTextMark) -> a
    void gotoHighlighting(com.media.zlibrary.text.view.ZLTextHighlighting) -> a
    int search$299caf72$53ec41e8(java.lang.String) -> a
    boolean canFindNext() -> x
    void findNext() -> y
    boolean canFindPrevious() -> z
    void findPrevious() -> A
    void clearFindResults() -> B
    void onScrollingFinished(com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    void setAudioSpeekPosition() -> Y
    boolean removeHighlightings(java.lang.Class) -> a
    void highlight(com.media.zlibrary.text.view.ZLTextPosition,com.media.zlibrary.text.view.ZLTextPosition) -> a
    void addHighlighting(com.media.zlibrary.text.view.ZLTextHighlighting) -> b
    void clearHighlighting() -> C
    void moveSelectionCursorTo(com.media.zlibrary.text.view.ZLTextSelectionCursor,int,int) -> a
    void releaseSelectionCursor() -> h
    com.media.zlibrary.text.view.ZLTextSelectionCursor getSelectionCursorInMovement() -> D
    com.media.zlibrary.text.view.ZLTextSelection$Point getSelectionCursorPoint(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextSelectionCursor) -> a
    int distanceToCursor(int,int,com.media.zlibrary.text.view.ZLTextSelection$Point) -> a
    com.media.zlibrary.text.view.ZLTextSelectionCursor findSelectionCursor(int,int) -> i
    com.media.zlibrary.text.view.ZLTextSelectionCursor findSelectionCursor(int,int,int) -> a
    void drawSelectionCursor(com.media.zlibrary.core.view.ZLPaintContext,com.media.zlibrary.text.view.ZLTextSelection$Point) -> a
    void preparePage(com.media.zlibrary.core.view.ZLPaintContext,com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    void paint(com.media.zlibrary.core.view.ZLPaintContext,com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition,com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    void drawBookMark$7e31a228(com.media.zlibrary.core.view.ZLPaintContext) -> b
    void drawVolume(com.media.zlibrary.core.view.ZLPaintContext) -> c
    void checkCurAudioLevelImageByResID(int) -> b
    com.media.zlibrary.text.view.ZLTextPage getPage(com.media.zlibrary.core.view.ZLView$PageIndex) -> e
    int scrollbarType() -> k
    boolean isScrollbarShown() -> p
    int sizeOfFullText() -> Z
    int getCurrentCharNumber(com.media.zlibrary.core.view.ZLView$PageIndex,boolean) -> a
    int getScrollbarFullSize() -> q
    int getScrollbarThumbPosition(com.media.zlibrary.core.view.ZLView$PageIndex) -> b
    int getScrollbarThumbLength(com.media.zlibrary.core.view.ZLView$PageIndex) -> c
    int sizeOfTextBeforeCursor(com.media.zlibrary.text.view.ZLTextWordCursor) -> a
    float computeCharsPerPage() -> aa
    int computeTextPageNumber(int) -> c
    com.media.zlibrary.text.view.ZLTextView$PagePosition pagePosition() -> E
    void gotoPage(int) -> a
    void gotoHome() -> F
    void drawHighlightings(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition,com.media.zlibrary.text.view.ZLTextLineInfo,int,int,int,int) -> a
    void drawTextLine(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextLineInfo,int,int) -> a
    int checkLostContent(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextLineInfo,com.media.zlibrary.text.view.ZLTextWordCursor,com.media.zlibrary.text.view.ZLTextWordCursor,com.media.zlibrary.text.view.ZLTextWordCursor,int) -> a
    void buildInfos(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextWordCursor,com.media.zlibrary.text.view.ZLTextWordCursor,boolean) -> a
    com.media.zlibrary.text.view.ZLTextLineInfo processTextLine(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextParagraphCursor,int,int,int,boolean) -> a
    void prepareTextLine(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextLineInfo,int,int) -> b
    void scrollPage(boolean,int,int) -> a
    void gotoPosition(com.media.zlibrary.text.view.ZLTextPosition) -> a
    void gotoPosition(int,int,int) -> b
    void gotoPositionByEnd$4868d30e(int,int) -> k
    void preparePaintInfo() -> G
    void preparePaintInfo(com.media.zlibrary.text.view.ZLTextPage) -> a
    void clearCaches() -> H
    void rebuildPaintInfo() -> ab
    int infoSize(com.media.zlibrary.text.view.ZLTextLineInfo,int) -> a
    int paragraphSize(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextWordCursor,int,boolean,int) -> a
    com.media.zlibrary.text.view.ZLTextWordCursor findStartOfPrevousPage(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextWordCursor) -> a
    com.media.zlibrary.text.view.ZLTextWordCursor findStart(com.media.zlibrary.text.view.ZLTextPage,com.media.zlibrary.text.view.ZLTextWordCursor,int,int) -> a
    void hideSelectedRegionBorder() -> I
    com.media.zlibrary.text.view.ZLTextRegion getSelectedRegion(com.media.zlibrary.text.view.ZLTextPage) -> b
    com.media.zlibrary.text.view.ZLTextRegion getSelectedRegion() -> J
    com.media.zlibrary.text.view.ZLTextRegion findRegion(int,int,com.media.zlibrary.text.view.ZLTextRegion$Filter) -> a
    com.media.zlibrary.text.view.ZLTextRegion findRegion(int,int,int,com.media.zlibrary.text.view.ZLTextRegion$Filter) -> a
    void selectRegion(com.media.zlibrary.text.view.ZLTextRegion) -> a
    boolean initSelection(int,int) -> j
    void clearSelection() -> K
    int getSelectionStartY() -> L
    int getSelectionEndY() -> M
    com.media.zlibrary.text.view.ZLTextPosition getSelectionStartPosition() -> N
    com.media.zlibrary.text.view.ZLTextPosition getSelectionEndPosition() -> O
    boolean isSelectionEmpty() -> P
    com.media.zlibrary.text.view.ZLTextRegion nextRegion(com.media.zlibrary.core.view.ZLView$Direction,com.media.zlibrary.text.view.ZLTextRegion$Filter) -> a
    boolean canScroll(com.media.zlibrary.core.view.ZLView$PageIndex) -> d
    void refreshReadPage() -> ac
    void setShowVolumeStatus$1385ff() -> Q
    com.media.dbstarplayer.book.Bookmark getCurBookMark() -> r
    void checkHightlings(com.media.zlibrary.text.view.ZLTextPage) -> c
    void setReadProgressChangeListener(com.media.reader.view.ReadProgressChangeListener) -> a
    com.media.reader.view.ReadProgressChangeListener access$0(com.media.zlibrary.text.view.ZLTextView) -> a
    boolean access$1(com.media.zlibrary.text.view.ZLTextView) -> b
    android.media.AudioManager access$2(com.media.zlibrary.text.view.ZLTextView) -> c
    int access$3(com.media.zlibrary.text.view.ZLTextView) -> d
    void access$4$50c97bb7(com.media.zlibrary.text.view.ZLTextView) -> e
    void access$5(com.media.zlibrary.text.view.ZLTextView) -> f
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$PageIndex() -> ad
    int[] $SWITCH_TABLE$com$media$reader$vo$ImageEntity$ImageAlign() -> ae
com.media.zlibrary.text.view.ZLTextView$1 -> com.media.zlibrary.text.b.al:
    com.media.zlibrary.text.view.ZLTextView this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
com.media.zlibrary.text.view.ZLTextView$HideVolumeStatusRunnable -> com.media.zlibrary.text.b.am:
    com.media.zlibrary.text.view.ZLTextView this$0 -> a
    void run() -> run
com.media.zlibrary.text.view.ZLTextView$PagePosition -> com.media.zlibrary.text.b.an:
    int Current -> a
    int Total -> b
com.media.zlibrary.text.view.ZLTextViewBase -> com.media.zlibrary.text.b.ao:
    com.media.zlibrary.text.view.ZLTextStyle myTextStyle -> b
    int myWordHeight -> c
    com.media.zlibrary.text.model.ZLTextMetrics myMetrics -> d
    int PICTURE_WIDTH_MAX_WIDTH_BOUNDARY -> e
    char[] myWordPartArray -> f
    void resetMetrics() -> R
    int getWordHeight() -> S
    int getLeftMargin() -> a
    int getRightMargin() -> b
    int getTopMargin() -> c
    int getBottomMargin() -> d
    com.media.zlibrary.core.util.ZLColor getSelectionBackgroundColor() -> e
    com.media.zlibrary.core.util.ZLColor getSelectionForegroundColor() -> f
    com.media.zlibrary.core.util.ZLColor getHighlightingBackgroundColor() -> g
    com.media.zlibrary.core.util.ZLColor getTextColor(com.media.zlibrary.text.view.ZLTextHyperlink) -> a
    com.media.zlibrary.core.view.ZLPaintContext$Size getTextAreaSize() -> T
    int getTextAreaHeight() -> U
    int getTextAreaWidth() -> V
    com.media.zlibrary.text.view.ZLTextStyle getTextStyle() -> W
    void setTextStyle(com.media.zlibrary.text.view.ZLTextStyle) -> a
    void resetTextStyle() -> X
    boolean isStyleChangeElement(com.media.zlibrary.text.view.ZLTextElement) -> a
    void applyStyleChangeElement(com.media.zlibrary.text.view.ZLTextElement) -> b
    void applyStyleChanges(com.media.zlibrary.text.view.ZLTextParagraphCursor,int,int) -> a
    int getPictureWidthMax(com.media.reader.vo.ImageEntity$ImageAlign) -> a
    int getElementWidth(com.media.zlibrary.text.view.ZLTextElement,int) -> a
    int getElementHeight(com.media.zlibrary.text.view.ZLTextElement) -> c
    int getElementDescent(com.media.zlibrary.text.view.ZLTextElement) -> d
    int getWordWidth(com.media.zlibrary.text.view.ZLTextWord,int) -> a
    int getWordWidth(com.media.zlibrary.text.view.ZLTextWord,int,int,boolean) -> a
    void drawWord(int,int,com.media.zlibrary.text.view.ZLTextWord,int,int,boolean,com.media.zlibrary.core.util.ZLColor) -> a
    void drawString(int,int,char[],int,int,com.media.zlibrary.text.view.ZLTextWord$Mark,int) -> a
com.media.zlibrary.text.view.ZLTextViewBase$ImageFitting -> com.media.zlibrary.text.b.ap:
    com.media.zlibrary.text.view.ZLTextViewBase$ImageFitting none -> a
    com.media.zlibrary.text.view.ZLTextViewBase$ImageFitting covers -> b
    com.media.zlibrary.text.view.ZLTextViewBase$ImageFitting all -> c
    com.media.zlibrary.text.view.ZLTextViewBase$ImageFitting[] ENUM$VALUES -> d
    com.media.zlibrary.text.view.ZLTextViewBase$ImageFitting[] values() -> values
    com.media.zlibrary.text.view.ZLTextViewBase$ImageFitting valueOf(java.lang.String) -> valueOf
com.media.zlibrary.text.view.ZLTextWord -> com.media.zlibrary.text.b.aq:
    char[] Data -> a
    int Offset -> b
    int Length -> g
    int myWidth -> h
    com.media.zlibrary.text.view.ZLTextWord$Mark myMark -> i
    int myParagraphOffset -> j
    boolean isASpace() -> a
    com.media.zlibrary.text.view.ZLTextWord$Mark getMark() -> b
    int getParagraphOffset() -> c
    void addMark(int,int) -> a
    int getWidth(com.media.zlibrary.core.view.ZLPaintContext) -> a
    java.lang.String toString() -> toString
com.media.zlibrary.text.view.ZLTextWord$Mark -> com.media.zlibrary.text.b.ar:
    int Start -> a
    int Length -> b
    com.media.zlibrary.text.view.ZLTextWord$Mark myNext -> d
    com.media.zlibrary.text.view.ZLTextWord this$0 -> c
    com.media.zlibrary.text.view.ZLTextWord$Mark getNext() -> a
    void access$1(com.media.zlibrary.text.view.ZLTextWord$Mark,com.media.zlibrary.text.view.ZLTextWord$Mark) -> a
com.media.zlibrary.text.view.ZLTextWordCursor -> com.media.zlibrary.text.b.as:
    com.media.zlibrary.text.view.ZLTextParagraphCursor myParagraphCursor -> a
    int myElementIndex -> b
    int myCharIndex -> c
    void setCursor(com.media.zlibrary.text.view.ZLTextWordCursor) -> a
    void setCursor(com.media.zlibrary.text.view.ZLTextParagraphCursor) -> a
    boolean isNull() -> a
    boolean isStartOfParagraph() -> b
    boolean isStartOfText() -> c
    boolean isEndOfParagraph() -> d
    boolean isEndOfText() -> e
    int getParagraphIndex() -> getParagraphIndex
    int getElementIndex() -> getElementIndex
    int getCharIndex() -> getCharIndex
    com.media.zlibrary.text.view.ZLTextElement getElement() -> f
    com.media.zlibrary.text.view.ZLTextParagraphCursor getParagraphCursor() -> g
    com.media.zlibrary.text.model.ZLTextMark getMark() -> h
    void nextWord() -> i
    boolean nextParagraph() -> j
    boolean previousParagraph() -> k
    void moveToParagraphStart() -> l
    void moveToParagraphEnd() -> m
    void moveToParagraph(int) -> a
    void moveTo(int,int) -> a
    void setCharIndex(int) -> b
    void reset() -> n
    void rebuild() -> o
    java.lang.String toString() -> toString
com.media.zlibrary.text.view.ZLTextWordRegionSoul -> com.media.zlibrary.text.b.at:
    com.media.zlibrary.text.view.ZLTextWord Word -> a
com.media.zlibrary.text.view.style.ZLTextBaseStyle -> com.media.zlibrary.text.b.a.a:
    int DEFAULT_SIZE -> c
    com.media.zlibrary.core.options.ZLBooleanOption AutoHyphenationOption -> d
    com.media.zlibrary.core.options.ZLBooleanOption BoldOption -> e
    com.media.zlibrary.core.options.ZLBooleanOption ItalicOption -> f
    com.media.zlibrary.core.options.ZLBooleanOption UnderlineOption -> g
    com.media.zlibrary.core.options.ZLBooleanOption StrikeThroughOption -> h
    com.media.zlibrary.core.options.ZLIntegerRangeOption AlignmentOption -> i
    com.media.zlibrary.core.options.ZLIntegerRangeOption LineSpaceOption -> j
    com.media.zlibrary.core.options.ZLStringOption FontFamilyOption -> k
    com.media.zlibrary.core.options.ZLIntegerRangeOption FontSizeOption -> l
    java.lang.String getFontFamily() -> a
    int getFontSize() -> o
    int getFontSize(com.media.zlibrary.text.model.ZLTextMetrics) -> a
    boolean isBold() -> b
    boolean isItalic() -> c
    boolean isUnderline() -> d
    boolean isStrikeThrough() -> e
    int getLeftIndent() -> f
    int getRightIndent() -> g
    int getFirstLineIndentDelta() -> h
    int getLineSpacePercent() -> i
    int getVerticalShift() -> j
    int getSpaceBefore() -> k
    int getSpaceAfter() -> l
    byte getAlignment() -> m
    boolean allowHyphenations() -> n
com.media.zlibrary.text.view.style.ZLTextDecoratedStyle -> com.media.zlibrary.text.b.a.b:
    java.lang.String myFontFamily -> c
    boolean myIsItalic -> d
    boolean myIsBold -> e
    boolean myIsUnderline -> f
    boolean myIsStrikeThrough -> g
    int myVerticalShift -> h
    boolean myIsNotCached -> i
    int myFontSize -> j
    com.media.zlibrary.text.model.ZLTextMetrics myMetrics -> k
    void initCache() -> u
    java.lang.String getFontFamily() -> a
    java.lang.String getFontFamilyInternal() -> o
    int getFontSize(com.media.zlibrary.text.model.ZLTextMetrics) -> a
    int getFontSizeInternal(com.media.zlibrary.text.model.ZLTextMetrics) -> b
    boolean isItalic() -> c
    boolean isItalicInternal() -> p
    boolean isBold() -> b
    boolean isBoldInternal() -> q
    boolean isUnderline() -> d
    boolean isUnderlineInternal() -> r
    boolean isStrikeThrough() -> e
    boolean isStrikeThroughInternal() -> s
    int getVerticalShift() -> j
    int getVerticalShiftInternal() -> t
com.media.zlibrary.text.view.style.ZLTextExplicitlyDecoratedStyle -> com.media.zlibrary.text.b.a.c:
    com.media.zlibrary.text.model.ZLTextStyleEntry myEntry -> c
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3 -> d
    java.lang.String getFontFamilyInternal() -> o
    int getFontSizeInternal(com.media.zlibrary.text.model.ZLTextMetrics) -> b
    boolean isBoldInternal() -> q
    boolean isItalicInternal() -> p
    boolean isUnderlineInternal() -> r
    boolean isStrikeThroughInternal() -> s
    int getLeftIndent() -> f
    int getRightIndent() -> g
    int getFirstLineIndentDelta() -> h
    int getLineSpacePercent() -> i
    int getVerticalShiftInternal() -> t
    int getSpaceBefore() -> k
    int getSpaceAfter() -> l
    byte getAlignment() -> m
    boolean allowHyphenations() -> n
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3() -> u
com.media.zlibrary.text.view.style.ZLTextFullStyleDecoration -> com.media.zlibrary.text.b.a.d:
    com.media.zlibrary.core.options.ZLIntegerRangeOption SpaceBeforeOption -> a
    com.media.zlibrary.core.options.ZLIntegerRangeOption SpaceAfterOption -> b
    com.media.zlibrary.core.options.ZLIntegerRangeOption LeftIndentOption -> c
    com.media.zlibrary.core.options.ZLIntegerRangeOption RightIndentOption -> d
    com.media.zlibrary.core.options.ZLIntegerRangeOption FirstLineIndentDeltaOption -> e
    com.media.zlibrary.core.options.ZLIntegerRangeOption AlignmentOption -> f
    com.media.zlibrary.core.options.ZLIntegerOption LineSpacePercentOption -> g
    com.media.zlibrary.text.view.ZLTextStyle createDecoratedStyle(com.media.zlibrary.text.view.ZLTextStyle,com.media.zlibrary.text.view.ZLTextHyperlink) -> a
com.media.zlibrary.text.view.style.ZLTextFullyDecoratedStyle -> com.media.zlibrary.text.b.a.e:
    com.media.zlibrary.text.view.style.ZLTextFullStyleDecoration myFullDecoration -> c
    int getLeftIndent() -> f
    int getRightIndent() -> g
    int getFirstLineIndentDelta() -> h
    int getLineSpacePercent() -> i
    int getSpaceBefore() -> k
    int getSpaceAfter() -> l
    byte getAlignment() -> m
    boolean allowHyphenations() -> n
com.media.zlibrary.text.view.style.ZLTextPartiallyDecoratedStyle -> com.media.zlibrary.text.b.a.f:
    com.media.zlibrary.text.view.style.ZLTextStyleDecoration myDecoration -> c
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3 -> d
    java.lang.String getFontFamilyInternal() -> o
    int getFontSizeInternal(com.media.zlibrary.text.model.ZLTextMetrics) -> b
    boolean isBoldInternal() -> q
    boolean isItalicInternal() -> p
    boolean isUnderlineInternal() -> r
    boolean isStrikeThroughInternal() -> s
    int getLeftIndent() -> f
    int getRightIndent() -> g
    int getFirstLineIndentDelta() -> h
    int getLineSpacePercent() -> i
    int getVerticalShiftInternal() -> t
    int getSpaceBefore() -> k
    int getSpaceAfter() -> l
    byte getAlignment() -> m
    boolean allowHyphenations() -> n
    int[] $SWITCH_TABLE$com$media$zlibrary$core$util$ZLBoolean3() -> u
com.media.zlibrary.text.view.style.ZLTextStyleCollection -> com.media.zlibrary.text.b.a.g:
    com.media.zlibrary.text.view.style.ZLTextStyleCollection ourInstance -> c
    int myDefaultFontSize -> d
    com.media.zlibrary.text.view.style.ZLTextBaseStyle myBaseStyle -> e
    com.media.zlibrary.text.view.style.ZLTextStyleDecoration[] myDecorationMap -> f
    com.media.zlibrary.core.options.ZLBooleanOption UseCSSTextAlignmentOption -> a
    com.media.zlibrary.core.options.ZLBooleanOption UseCSSFontSizeOption -> b
    com.media.zlibrary.text.view.style.ZLTextStyleCollection Instance() -> a
    int getDefaultFontSize() -> b
    com.media.zlibrary.text.view.style.ZLTextBaseStyle getBaseStyle() -> c
    com.media.zlibrary.text.view.style.ZLTextStyleDecoration getDecoration(byte) -> a
    void access$0(com.media.zlibrary.text.view.style.ZLTextStyleCollection,int) -> a
    int access$1(com.media.zlibrary.text.view.style.ZLTextStyleCollection) -> a
    void access$2(com.media.zlibrary.text.view.style.ZLTextStyleCollection,com.media.zlibrary.text.view.style.ZLTextBaseStyle) -> a
    com.media.zlibrary.text.view.style.ZLTextStyleDecoration[] access$3(com.media.zlibrary.text.view.style.ZLTextStyleCollection) -> b
com.media.zlibrary.text.view.style.ZLTextStyleCollection$TextStyleReader -> com.media.zlibrary.text.b.a.h:
    int myDpi -> a
    com.media.zlibrary.text.view.style.ZLTextStyleCollection myCollection -> b
    boolean dontCacheAttributeValues() -> dontCacheAttributeValues
    int intValue(com.media.zlibrary.core.xml.ZLStringMap,java.lang.String,int) -> a
    com.media.zlibrary.core.util.ZLBoolean3 b3Value(com.media.zlibrary.core.xml.ZLStringMap,java.lang.String) -> a
    boolean startElementHandler(java.lang.String,com.media.zlibrary.core.xml.ZLStringMap) -> startElementHandler
com.media.zlibrary.text.view.style.ZLTextStyleDecoration -> com.media.zlibrary.text.b.a.i:
    com.media.zlibrary.core.options.ZLStringOption FontFamilyOption -> h
    com.media.zlibrary.core.options.ZLIntegerRangeOption FontSizeDeltaOption -> i
    com.media.zlibrary.core.options.ZLBoolean3Option BoldOption -> j
    com.media.zlibrary.core.options.ZLBoolean3Option ItalicOption -> k
    com.media.zlibrary.core.options.ZLBoolean3Option UnderlineOption -> l
    com.media.zlibrary.core.options.ZLBoolean3Option StrikeThroughOption -> m
    com.media.zlibrary.core.options.ZLIntegerOption VerticalShiftOption -> n
    com.media.zlibrary.core.options.ZLBoolean3Option AllowHyphenationsOption -> o
    java.lang.String myName -> a
    com.media.zlibrary.text.view.ZLTextStyle createDecoratedStyle(com.media.zlibrary.text.view.ZLTextStyle,com.media.zlibrary.text.view.ZLTextHyperlink) -> a
    java.lang.String getName() -> a
com.media.zlibrary.ui.android.application.ZLAndroidApplicationWindow -> com.media.zlibrary.ui.android.a.a:
    java.util.HashMap myMenuItemMap -> a
    android.view.MenuItem$OnMenuItemClickListener myMenuListener -> b
    int myBatteryLevel -> c
    void addMenuItem(android.view.Menu,java.lang.String,java.lang.Integer,java.lang.String) -> a
    void runWithMessage(java.lang.String,java.lang.Runnable,java.lang.Runnable) -> a
    void processException(java.lang.Exception) -> a
    void setTitle(java.lang.String) -> a
    com.media.zlibrary.core.view.ZLViewWidget getViewWidget() -> b
    void close() -> c
    int getBatteryLevel() -> d
    void setBatteryLevel(int) -> a
    java.util.HashMap access$0(com.media.zlibrary.ui.android.application.ZLAndroidApplicationWindow) -> a
com.media.zlibrary.ui.android.application.ZLAndroidApplicationWindow$1 -> com.media.zlibrary.ui.android.a.b:
    com.media.zlibrary.ui.android.application.ZLAndroidApplicationWindow this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
com.media.zlibrary.ui.android.application.ZLAndroidApplicationWindow$2 -> com.media.zlibrary.ui.android.a.c:
    com.media.zlibrary.ui.android.application.ZLAndroidApplicationWindow this$0 -> a
    android.app.Activity val$activity -> b
    java.lang.String val$title -> c
    void run() -> run
com.media.zlibrary.ui.android.error.BugReportActivity -> com.media.zlibrary.ui.android.error.BugReportActivity:
    void onCreate(android.os.Bundle) -> onCreate
com.media.zlibrary.ui.android.error.BugReportActivity$1 -> com.media.zlibrary.ui.android.error.a:
    com.media.zlibrary.ui.android.error.BugReportActivity this$0 -> a
    java.lang.StringBuilder val$reportText -> b
    java.lang.String val$versionName -> c
    void onClick(android.view.View) -> onClick
com.media.zlibrary.ui.android.error.BugReportActivity$2 -> com.media.zlibrary.ui.android.error.b:
    com.media.zlibrary.ui.android.error.BugReportActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.media.zlibrary.ui.android.error.ErrorUtil -> com.media.zlibrary.ui.android.error.c:
    android.content.Context myContext -> a
    java.lang.String getVersionName() -> a
com.media.zlibrary.ui.android.image.InputStreamImageData -> com.media.zlibrary.ui.android.b.a:
    com.media.zlibrary.core.image.ZLSingleImage myImage -> a
    android.graphics.Bitmap decodeWithOptions(android.graphics.BitmapFactory$Options) -> a
com.media.zlibrary.ui.android.image.ZLAndroidImageData -> com.media.zlibrary.ui.android.b.b:
    android.graphics.Bitmap myBitmap -> a
    com.media.zlibrary.core.view.ZLPaintContext$Size myLastRequestedSize -> b
    com.media.zlibrary.core.view.ZLPaintContext$ScalingType myLastRequestedScaling -> c
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLPaintContext$ScalingType -> d
    android.graphics.Bitmap decodeWithOptions(android.graphics.BitmapFactory$Options) -> a
    android.graphics.Bitmap getFullSizeBitmap() -> a
    android.graphics.Bitmap getBitmap(int,int) -> a
    android.graphics.Bitmap getBitmap(com.media.zlibrary.core.view.ZLPaintContext$Size,com.media.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLPaintContext$ScalingType() -> b
com.media.zlibrary.ui.android.image.ZLAndroidImageLoader -> com.media.zlibrary.ui.android.b.c:
    java.util.concurrent.ExecutorService myPool -> a
    java.util.concurrent.ExecutorService mySinglePool -> b
    java.util.HashMap myOnImageSyncRunnables -> c
    com.media.zlibrary.ui.android.image.ZLAndroidImageLoader$ImageSynchronizedHandler myImageSynchronizedHandler -> d
    void startImageLoading(com.media.zlibrary.core.image.ZLLoadableImage,java.lang.Runnable) -> a
    java.util.HashMap access$0(com.media.zlibrary.ui.android.image.ZLAndroidImageLoader) -> a
    com.media.zlibrary.ui.android.image.ZLAndroidImageLoader$ImageSynchronizedHandler access$1(com.media.zlibrary.ui.android.image.ZLAndroidImageLoader) -> b
com.media.zlibrary.ui.android.image.ZLAndroidImageLoader$1 -> com.media.zlibrary.ui.android.b.d:
    com.media.zlibrary.ui.android.image.ZLAndroidImageLoader this$0 -> a
    com.media.zlibrary.core.image.ZLLoadableImage val$image -> b
    void run() -> run
com.media.zlibrary.ui.android.image.ZLAndroidImageLoader$ImageSynchronizedHandler -> com.media.zlibrary.ui.android.b.e:
    com.media.zlibrary.ui.android.image.ZLAndroidImageLoader this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
    void fireMessage(java.lang.String) -> a
com.media.zlibrary.ui.android.image.ZLAndroidImageLoader$MinPriorityThreadFactory -> com.media.zlibrary.ui.android.b.f:
    java.util.concurrent.ThreadFactory myDefaultThreadFactory -> a
    java.lang.Thread newThread(java.lang.Runnable) -> newThread
com.media.zlibrary.ui.android.image.ZLAndroidImageManager -> com.media.zlibrary.ui.android.b.g:
    com.media.zlibrary.ui.android.image.ZLAndroidImageLoader myLoader -> a
    com.media.zlibrary.ui.android.image.ZLAndroidImageData getImageData(com.media.zlibrary.core.image.ZLImage) -> a
    void startImageLoading(com.media.zlibrary.core.image.ZLLoadableImage,java.lang.Runnable) -> startImageLoading
    com.media.zlibrary.core.image.ZLImageData getImageData(com.media.zlibrary.core.image.ZLImage) -> getImageData
com.media.zlibrary.ui.android.library.UncaughtExceptionHandler -> com.media.zlibrary.ui.android.library.a:
    android.content.Context myContext -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.media.zlibrary.ui.android.library.ZLAndroidApplication -> com.media.zlibrary.ui.android.library.ZLAndroidApplication:
    com.media.zlibrary.ui.android.application.ZLAndroidApplicationWindow myMainWindow -> a
    void onCreate() -> onCreate
com.media.zlibrary.ui.android.library.ZLAndroidLibrary -> com.media.zlibrary.ui.android.library.b:
    com.media.zlibrary.core.options.ZLBooleanOption ShowStatusBarOption -> a
    com.media.zlibrary.core.options.ZLIntegerRangeOption BatteryLevelToTurnScreenOffOption -> b
    com.media.zlibrary.core.options.ZLBooleanOption DontTurnScreenOffDuringChargingOption -> c
    com.media.zlibrary.core.options.ZLIntegerRangeOption ScreenBrightnessLevelOption -> d
    com.media.zlibrary.core.options.ZLBooleanOption DisableButtonLightsOption -> e
    java.lang.Boolean myIsKindleFire -> f
    com.media.android.dbstarplayer.DbStarPlayer myActivity -> g
    android.app.Application myApplication -> h
    android.util.DisplayMetrics myMetrics -> i
    boolean isKindleFire() -> a
    void setActivity(com.media.android.dbstarplayer.DbStarPlayer) -> a
    void finish() -> b
    com.media.android.dbstarplayer.DbStarPlayer getActivity() -> c
    com.media.zlibrary.ui.android.view.ZLAndroidWidget getWidget() -> d
    com.media.zlibrary.core.filesystem.ZLResourceFile createResourceFile(java.lang.String) -> createResourceFile
    com.media.zlibrary.core.filesystem.ZLResourceFile createResourceFile(com.media.zlibrary.core.filesystem.ZLResourceFile,java.lang.String) -> createResourceFile
    java.lang.String getVersionName() -> getVersionName
    java.lang.String getFullVersionName() -> getFullVersionName
    java.lang.String getCurrentTimeString() -> getCurrentTimeString
    void setScreenBrightness(int) -> setScreenBrightness
    int getScreenBrightness() -> getScreenBrightness
    int getDisplayDPI() -> getDisplayDPI
    int getPixelWidth() -> getPixelWidth
    int getPixelHeight() -> getPixelHeight
    java.util.List defaultLanguageCodes() -> defaultLanguageCodes
    boolean supportsAllOrientations() -> supportsAllOrientations
    android.app.Application access$0(com.media.zlibrary.ui.android.library.ZLAndroidLibrary) -> a
com.media.zlibrary.ui.android.library.ZLAndroidLibrary$AndroidAssetsFile -> com.media.zlibrary.ui.android.library.c:
    com.media.zlibrary.ui.android.library.ZLAndroidLibrary$AndroidAssetsFile myParent -> b
    long mySize -> c
    com.media.zlibrary.ui.android.library.ZLAndroidLibrary this$0 -> a
    java.util.List directoryEntries() -> directoryEntries
    boolean isDirectory() -> isDirectory
    boolean exists() -> exists
    long size() -> size
    long sizeInternal() -> a
    long sizeSlow() -> b
    java.io.InputStream getInputStream() -> getInputStream
    com.media.zlibrary.core.filesystem.ZLFile getParent() -> getParent
com.media.zlibrary.ui.android.network.SQLiteCookieDatabase -> com.media.zlibrary.ui.android.c.a:
    android.database.sqlite.SQLiteDatabase myDatabase -> a
    android.database.sqlite.SQLiteStatement myInsertStatement -> b
    android.database.sqlite.SQLiteStatement myInsertPortsStatement -> c
    android.database.sqlite.SQLiteStatement myDeletePortsStatement -> d
    void init(android.content.Context) -> a
    void removeObsolete(java.util.Date) -> a
    void removeAll() -> b
    void saveCookies(java.util.List) -> a
    java.util.List loadCookies() -> c
com.media.zlibrary.ui.android.util.ZLAndroidColorUtil -> com.media.zlibrary.ui.android.d.a:
    int rgb(com.media.zlibrary.core.util.ZLColor) -> a
com.media.zlibrary.ui.android.view.AndroidFontUtil -> com.media.zlibrary.ui.android.view.a:
    java.util.Map ourFontMap -> a
    java.util.Set ourFileSet -> b
    long ourTimeStamp -> c
    java.util.HashMap ourTypefaces -> d
    java.util.Map getFontMap(boolean) -> a
    java.lang.String realFontFamilyName(java.lang.String) -> a
    void fillFamiliesList(java.util.ArrayList) -> a
    android.graphics.Typeface typeface(java.lang.String,boolean,boolean) -> a
    void clearFontCache() -> a
com.media.zlibrary.ui.android.view.AndroidFontUtil$1 -> com.media.zlibrary.ui.android.view.b:
    boolean accept(java.io.File,java.lang.String) -> accept
com.media.zlibrary.ui.android.view.AnimationProvider -> com.media.zlibrary.ui.android.view.c:
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode myMode -> k
    com.media.zlibrary.ui.android.view.BitmapManager myBitmapManager -> a
    int myStartX -> b
    int myStartY -> c
    int myEndX -> d
    int myEndY -> e
    com.media.zlibrary.core.view.ZLView$Direction myDirection -> f
    float mySpeed -> g
    int myWidth -> h
    int myHeight -> i
    boolean isNeedTerminate -> j
    java.util.List myDrawInfos -> l
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction -> m
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode getMode() -> a
    void terminate() -> b
    void startManualScrolling(int,int) -> a
    void scrollTo(int,int) -> b
    void startAnimatedScrolling(int,int,int) -> a
    void startAnimatedScrolling(com.media.zlibrary.core.view.ZLView$PageIndex,java.lang.Integer,java.lang.Integer,int) -> a
    void startAnimatedScrollingInternal(int) -> a
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    boolean inProgress() -> c
    int getScrollingShift() -> d
    void setup(com.media.zlibrary.core.view.ZLView$Direction,int,int) -> a
    void doStep() -> e
    int getScrolledPercent() -> f
    void draw(android.graphics.Canvas) -> a
    void drawInternal(android.graphics.Canvas) -> b
    com.media.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
    com.media.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo() -> g
    android.graphics.Bitmap getBitmapFrom() -> h
    android.graphics.Bitmap getBitmapTo() -> i
    android.graphics.Bitmap getBitmapLeft$5de27823() -> j
    android.graphics.Bitmap getBitmapRight$5de27823() -> k
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction() -> l
com.media.zlibrary.ui.android.view.AnimationProvider$DrawInfo -> com.media.zlibrary.ui.android.view.d:
    int X -> a
    int Y -> b
    long Start -> c
    int Duration -> d
com.media.zlibrary.ui.android.view.AnimationProvider$Mode -> com.media.zlibrary.ui.android.view.e:
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode NoScrolling -> a
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode ManualScrolling -> b
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode AnimatedScrollingForward -> c
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode AnimatedScrollingBackward -> d
    boolean Auto -> e
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode[] ENUM$VALUES -> f
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode[] values() -> values
    com.media.zlibrary.ui.android.view.AnimationProvider$Mode valueOf(java.lang.String) -> valueOf
com.media.zlibrary.ui.android.view.BitmapManager -> com.media.zlibrary.ui.android.view.f:
    int SIZE -> a
    com.media.zlibrary.ui.android.view.BitmapManager$PageEntity[] pageEntities -> b
    com.media.zlibrary.core.view.ZLView$PageIndex[] myIndexes -> c
    int myWidth -> d
    int myHeight -> e
    com.media.zlibrary.ui.android.view.BitmapManager instance -> f
    com.media.zlibrary.ui.android.view.ZLAndroidWidget myWidget -> g
    void setSize(int,int) -> a
    android.graphics.Bitmap getBitmap(com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition,com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    void paintPage(int,com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition,com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    void reset() -> a
    void shift(boolean) -> a
com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition -> com.media.zlibrary.ui.android.view.g:
    com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition NO_EDGE -> a
    com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition EDGE_RIGHT -> b
    com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition EDGE_LEFT -> c
    com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition[] ENUM$VALUES -> d
    com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition[] values() -> values
    com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition valueOf(java.lang.String) -> valueOf
com.media.zlibrary.ui.android.view.BitmapManager$PageEntity -> com.media.zlibrary.ui.android.view.h:
    android.graphics.Bitmap bmp -> a
    com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition edgePos -> b
    com.media.zlibrary.ui.android.view.BitmapManager this$0 -> c
com.media.zlibrary.ui.android.view.CurlAnimationProvider -> com.media.zlibrary.ui.android.view.i:
    android.graphics.Paint myPaint -> n
    android.graphics.Paint myBackPaint -> o
    android.graphics.Paint myEdgePaint -> p
    android.graphics.Path myFgPath -> k
    android.graphics.Path myEdgePath -> l
    android.graphics.Path myQuadPath -> m
    float mySpeedFactor -> q
    android.graphics.Bitmap myBuffer -> r
    boolean myUseCanvasHack -> s
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction -> t
    void drawInternal(android.graphics.Canvas) -> b
    void drawInternalNoHack(android.graphics.Canvas) -> c
    com.media.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
    void startAnimatedScrollingInternal(int) -> a
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    void doStep() -> e
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction() -> l
com.media.zlibrary.ui.android.view.DoublePageAnimationProvider -> com.media.zlibrary.ui.android.view.j:
    java.lang.String TAG -> l
    boolean FLAG_LOG_ERROR -> m
    boolean FLAG_LOG_INFO -> n
    int mReadMode -> o
    android.graphics.Rect mPositionRectDst -> p
    android.graphics.Rect mBitmapRectDst -> q
    int mPageBorder -> r
    int mPageBottomBorder -> s
    int mFlipMode -> t
    int mEffectState -> k
    int mPageWidth -> u
    int mPageHeight -> v
    float mCornerX -> w
    float mCornerY -> x
    android.graphics.Path mPath0 -> y
    android.graphics.Path mPath1 -> z
    android.graphics.Bitmap mBeforePreviousPageBitmap -> A
    android.graphics.Bitmap mPreviousPageBitmap -> B
    android.graphics.Bitmap mPreviousBackPageBitmap -> C
    android.graphics.drawable.ShapeDrawable mPreviousBackPageShapeDrawable -> D
    android.graphics.Shader mPreviousBackPageShader -> E
    android.graphics.Bitmap mNextPageBitmap -> F
    android.graphics.drawable.ShapeDrawable mNextPageShapeDrawable -> G
    android.graphics.Shader mNextPagePageShader -> H
    android.graphics.PointF mTouch -> I
    android.graphics.PointF mBezierStart1 -> J
    android.graphics.PointF mBezierStart2 -> K
    android.graphics.PointF mBezierControl1 -> L
    android.graphics.PointF mBezierControl2 -> M
    android.graphics.PointF mBeziervertex1 -> N
    android.graphics.PointF mBeziervertex2 -> O
    android.graphics.PointF mBezierEnd1 -> P
    android.graphics.PointF mBezierEnd2 -> Q
    float mMiddleX -> R
    float mMiddleY -> S
    float mDegrees -> T
    float mTouchToCornerDis -> U
    android.graphics.Matrix mMatrix -> V
    float[] mMatrixArray -> W
    boolean mIsRTandLB -> X
    float mMaxLength -> Y
    int[] mBackShadowColors -> Z
    int[] mFrontShadowColors -> aa
    android.graphics.drawable.GradientDrawable mBackShadowDrawableLR -> ab
    android.graphics.drawable.GradientDrawable mBackShadowDrawableRL -> ac
    android.graphics.drawable.GradientDrawable mFolderShadowDrawableLR -> ad
    android.graphics.drawable.GradientDrawable mFolderShadowDrawableRL -> ae
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableHBT -> af
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableHTB -> ag
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableVLR -> ah
    android.graphics.drawable.GradientDrawable mFrontShadowDrawableVRL -> ai
    android.graphics.Paint mPaint -> aj
    android.widget.Scroller mScroller -> ak
    android.view.View mTargetView -> al
    int mDuration -> am
    boolean isDraging -> an
    int minValue -> ao
    boolean isAutoFlip -> ap
    android.graphics.PaintFlagsDrawFilter paintFilter -> aq
    boolean mFlatFlip -> ar
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction -> as
    void printLogError(java.lang.String,java.lang.String) -> a
    void printLogInfo(java.lang.String,java.lang.String) -> b
    void refreshFourPageBitmap(android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap,android.graphics.Bitmap) -> a
    void drawInternal(android.graphics.Canvas) -> b
    void drawFlippedPage(android.graphics.Canvas) -> c
    void startAutoScrolling$28433b1f(java.lang.Integer,java.lang.Integer) -> b
    android.graphics.PointF getCross(android.graphics.PointF,android.graphics.PointF,android.graphics.PointF,android.graphics.PointF) -> a
    void calcBezierPoints$4098370b(float,float) -> a
    double getDivider(float,float) -> b
    void drawCurrentPageArea$c661da6(android.graphics.Canvas,android.graphics.Bitmap) -> a
    void drawNextPageAreaAndShadow(android.graphics.Canvas,android.graphics.Bitmap) -> b
    void drawCurrentPageShadow(android.graphics.Canvas) -> d
    void drawCurrentBackArea(android.graphics.Canvas,android.graphics.Bitmap) -> c
    void computeScroll() -> l
    void abortAnimation() -> m
    void terminate() -> b
    void startAnimatedScrollingInternal(int) -> a
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    com.media.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
    void doStep() -> e
    void setPageSize(int,int) -> d
    int getPageBorder() -> n
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction() -> o
com.media.zlibrary.ui.android.view.NoneAnimationProvider -> com.media.zlibrary.ui.android.view.k:
    android.graphics.Paint myPaint -> k
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction -> l
    void drawInternal(android.graphics.Canvas) -> b
    void doStep() -> e
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    void startAnimatedScrollingInternal(int) -> a
    com.media.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction() -> l
com.media.zlibrary.ui.android.view.ShiftAnimationProvider -> com.media.zlibrary.ui.android.view.l:
    android.graphics.Paint myPaint -> k
    void drawInternal(android.graphics.Canvas) -> b
com.media.zlibrary.ui.android.view.SimpleAnimationProvider -> com.media.zlibrary.ui.android.view.m:
    float mySpeedFactor -> k
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction -> l
    com.media.zlibrary.core.view.ZLView$PageIndex getPageToScrollTo(int,int) -> c
    void setupAnimatedScrollingStart(java.lang.Integer,java.lang.Integer) -> a
    void startAnimatedScrollingInternal(int) -> a
    void doStep() -> e
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Direction() -> l
com.media.zlibrary.ui.android.view.SlideAnimationProvider -> com.media.zlibrary.ui.android.view.n:
    android.graphics.Paint myPaint -> k
    void drawInternal(android.graphics.Canvas) -> b
com.media.zlibrary.ui.android.view.ZLAndroidPaintContext -> com.media.zlibrary.ui.android.view.o:
    android.graphics.Bitmap mBgPageLeft -> e
    android.graphics.Bitmap mBgPageRight -> f
    com.media.zlibrary.core.options.ZLBooleanOption AntiAliasOption -> a
    com.media.zlibrary.core.options.ZLBooleanOption DeviceKerningOption -> b
    com.media.zlibrary.core.options.ZLBooleanOption DitheringOption -> c
    com.media.zlibrary.core.options.ZLBooleanOption SubpixelOption -> d
    android.graphics.Canvas myCanvas -> g
    android.graphics.Paint myTextPaint -> h
    android.graphics.Paint myLinePaint -> i
    android.graphics.Paint myFillPaint -> j
    android.graphics.Paint myOutlinePaint -> k
    int myWidth -> l
    int myHeight -> m
    int myScrollbarWidth -> n
    com.media.zlibrary.core.util.ZLColor myBackgroundColor -> o
    android.graphics.Paint myBottomPaint -> p
    com.media.dbstarplayer.dbstarplayer.DbStarPlayerApp reader -> q
    android.content.Context mContext -> r
    android.graphics.Rect src -> s
    android.graphics.Rect dst -> t
    int leftMargin -> u
    int bottomMargin -> v
    int pageNumIndent -> w
    int rightMargin -> x
    int paintSiz -> y
    int[] $SWITCH_TABLE$com$media$zlibrary$ui$android$view$BitmapManager$EdgePosition -> z
    void setCanvas(android.graphics.Canvas) -> a
    void setSize(int,int,int) -> a
    com.media.zlibrary.core.util.ZLColor getBackgroundColor() -> a
    void fillPolygon(int[],int[]) -> a
    void drawPolygonalLine(int[],int[]) -> b
    void drawOutline(int[],int[]) -> c
    void setFontInternal(java.lang.String,int,boolean,boolean,boolean,boolean) -> a
    void setTextColor(com.media.zlibrary.core.util.ZLColor) -> a
    void setLineColor(com.media.zlibrary.core.util.ZLColor) -> b
    void setFillColor(com.media.zlibrary.core.util.ZLColor,int) -> a
    int getWidth() -> b
    int getHeight() -> c
    int getStringWidth(char[],int,int) -> a
    int getSpaceWidthInternal() -> d
    int getStringHeightInternal() -> e
    int getDescentInternal() -> f
    void drawString(int,int,char[],int,int) -> a
    com.media.zlibrary.core.view.ZLPaintContext$Size imageSize(com.media.zlibrary.core.image.ZLImageData,com.media.zlibrary.core.view.ZLPaintContext$Size,com.media.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    void drawImage(int,int,com.media.zlibrary.core.image.ZLImageData,com.media.zlibrary.core.view.ZLPaintContext$Size,com.media.zlibrary.core.view.ZLPaintContext$ScalingType) -> a
    void drawImage(int,int,android.graphics.Bitmap) -> a
    void drawImage(android.graphics.Rect,android.graphics.Rect,android.graphics.Bitmap) -> a
    void fillRectangle(int,int,int,int) -> a
    void drawBackground(com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition) -> a
    void drawBookFooter(int,int,com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition) -> a
    int[] $SWITCH_TABLE$com$media$zlibrary$ui$android$view$BitmapManager$EdgePosition() -> j
com.media.zlibrary.ui.android.view.ZLAndroidWidget -> com.media.zlibrary.ui.android.view.ZLAndroidWidget:
    java.lang.String TAG -> a
    android.graphics.Paint myPaint -> b
    com.media.zlibrary.ui.android.view.ZLAndroidPaintContext mPaintContext -> c
    com.media.zlibrary.ui.android.view.BitmapManager myBitmapManager -> d
    com.media.zlibrary.ui.android.view.AnimationProvider myAnimationProvider -> e
    com.media.zlibrary.core.view.ZLView$Animation myAnimationType -> f
    com.media.zlibrary.ui.android.view.ZLAndroidWidget$LongClickRunnable myPendingLongClickRunnable -> g
    boolean myLongClickPerformed -> h
    boolean myPendingPress -> i
    int myPressedX -> j
    int myPressedY -> k
    boolean myScreenIsTouched -> l
    int myKeyUnderTracking -> m
    long myTrackingStartTime -> n
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Animation -> o
    int[] $SWITCH_TABLE$com$media$zlibrary$ui$android$view$AnimationProvider$Mode -> p
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$PageIndex -> q
    void init() -> f
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    com.media.zlibrary.core.view.ZLView$Animation getCurAnimationType() -> c
    com.media.zlibrary.ui.android.view.AnimationProvider getAnimationProvider() -> e
    void checkAudioSpeak() -> g
    void pageShiftCheck() -> h
    void reset() -> a
    void repaint() -> b
    void startManualScrolling(int,int,com.media.zlibrary.core.view.ZLView$Direction) -> a
    void scrollManuallyTo(int,int) -> a
    void startAnimatedScrolling$77ae46f6(com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.core.view.ZLView$Direction,int) -> a
    void startAnimatedScrolling(com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.core.view.ZLView$Direction,int) -> b
    void startAnimatedScrolling(int,int,int) -> a
    void drawOnBitmap(int,int,android.graphics.Bitmap,com.media.zlibrary.core.view.ZLView$PageIndex,com.media.zlibrary.ui.android.view.BitmapManager$EdgePosition,com.media.zlibrary.core.view.ZLView$PageIndex) -> a
    void onDrawStatic(android.graphics.Canvas) -> a
    boolean onTrackballEvent(android.view.MotionEvent) -> onTrackballEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onLongClick(android.view.View) -> onLongClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    int computeVerticalScrollRange() -> computeVerticalScrollRange
    void computeScroll() -> computeScroll
    boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    boolean isTurningPage() -> d
    void access$0$7c40ecf3(com.media.zlibrary.ui.android.view.ZLAndroidWidget) -> a
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$Animation() -> i
    int[] $SWITCH_TABLE$com$media$zlibrary$ui$android$view$AnimationProvider$Mode() -> j
    int[] $SWITCH_TABLE$com$media$zlibrary$core$view$ZLView$PageIndex() -> k
    com.media.zlibrary.core.view.ZLView$Animation access$4(com.media.zlibrary.ui.android.view.ZLAndroidWidget) -> b
    com.media.zlibrary.ui.android.view.ZLAndroidPaintContext access$5(com.media.zlibrary.ui.android.view.ZLAndroidWidget) -> c
    void access$6(com.media.zlibrary.ui.android.view.ZLAndroidWidget,com.media.zlibrary.ui.android.view.ZLAndroidPaintContext) -> a
    int access$7(com.media.zlibrary.ui.android.view.ZLAndroidWidget) -> d
com.media.zlibrary.ui.android.view.ZLAndroidWidget$1 -> com.media.zlibrary.ui.android.view.p:
    com.media.zlibrary.ui.android.view.ZLAndroidWidget this$0 -> a
    android.graphics.Canvas val$canvas -> b
    void run() -> run
com.media.zlibrary.ui.android.view.ZLAndroidWidget$LongClickRunnable -> com.media.zlibrary.ui.android.view.q:
    com.media.zlibrary.ui.android.view.ZLAndroidWidget this$0 -> a
    void run() -> run
org.amse.ys.zip.Decompressor -> org.amse.ys.zip.Decompressor:
    java.util.Queue ourDeflators -> ourDeflators
    int read(byte[],int,int) -> read
    int read() -> read
    void storeDecompressor(org.amse.ys.zip.Decompressor) -> storeDecompressor
    org.amse.ys.zip.Decompressor init(org.amse.ys.zip.MyBufferedInputStream,org.amse.ys.zip.LocalFileHeader) -> init
    int available() -> available
org.amse.ys.zip.DeflatingDecompressor -> org.amse.ys.zip.DeflatingDecompressor:
    org.amse.ys.zip.MyBufferedInputStream myStream -> myStream
    int myCompressedAvailable -> myCompressedAvailable
    int myAvailable -> myAvailable
    int IN_BUFFER_SIZE -> IN_BUFFER_SIZE
    int OUT_BUFFER_SIZE -> OUT_BUFFER_SIZE
    byte[] myInBuffer -> myInBuffer
    int myInBufferOffset -> myInBufferOffset
    int myInBufferLength -> myInBufferLength
    byte[] myOutBuffer -> myOutBuffer
    int myOutBufferOffset -> myOutBufferOffset
    int myOutBufferLength -> myOutBufferLength
    int myInflatorId -> myInflatorId
    void reset(org.amse.ys.zip.MyBufferedInputStream,org.amse.ys.zip.LocalFileHeader) -> reset
    int available() -> available
    int read(byte[],int,int) -> read
    int read() -> read
    void fillOutBuffer() -> fillOutBuffer
    int startInflating() -> startInflating
    void endInflating(int) -> endInflating
    long inflate(int,byte[],int,int,byte[]) -> inflate
org.amse.ys.zip.LocalFileHeader -> org.amse.ys.zip.LocalFileHeader:
    int FILE_HEADER_SIGNATURE -> FILE_HEADER_SIGNATURE
    int FOLDER_HEADER_SIGNATURE -> FOLDER_HEADER_SIGNATURE
    int END_OF_CENTRAL_DIRECTORY_SIGNATURE -> END_OF_CENTRAL_DIRECTORY_SIGNATURE
    int DATA_DESCRIPTOR_SIGNATURE -> DATA_DESCRIPTOR_SIGNATURE
    int Signature -> Signature
    int Version -> Version
    int Flags -> Flags
    int CompressionMethod -> CompressionMethod
    int ModificationTime -> ModificationTime
    int ModificationDate -> ModificationDate
    int CRC32 -> CRC32
    int CompressedSize -> CompressedSize
    int UncompressedSize -> UncompressedSize
    int NameLength -> NameLength
    int ExtraLength -> ExtraLength
    java.lang.String FileName -> FileName
    int DataOffset -> DataOffset
    void readFrom(org.amse.ys.zip.MyBufferedInputStream) -> readFrom
org.amse.ys.zip.MyBufferedInputStream -> org.amse.ys.zip.MyBufferedInputStream:
    org.amse.ys.zip.ZipFile$InputStreamHolder myStreamHolder -> myStreamHolder
    java.io.InputStream myFileInputStream -> myFileInputStream
    byte[] myBuffer -> myBuffer
    int myBytesReady -> myBytesReady
    int myPositionInBuffer -> myPositionInBuffer
    int myCurrentPosition -> myCurrentPosition
    int available() -> available
    int offset() -> offset
    int read(byte[],int,int) -> read
    int read() -> read
    int read2Bytes() -> read2Bytes
    int read4Bytes() -> read4Bytes
    java.lang.String readString(int) -> readString
    long skip(long) -> skip
    void backSkip(int) -> backSkip
    void setPosition(int) -> setPosition
    void close() -> close
org.amse.ys.zip.NoCompressionDecompressor -> org.amse.ys.zip.NoCompressionDecompressor:
    org.amse.ys.zip.LocalFileHeader myHeader -> myHeader
    org.amse.ys.zip.MyBufferedInputStream myStream -> myStream
    int myCurrentPosition -> myCurrentPosition
    int read(byte[],int,int) -> read
    int read() -> read
    int available() -> available
org.amse.ys.zip.ZipException -> org.amse.ys.zip.ZipException:
org.amse.ys.zip.ZipFile -> org.amse.ys.zip.ZipFile:
    org.amse.ys.zip.ZipFile$InputStreamHolder myStreamHolder -> myStreamHolder
    java.util.LinkedHashMap myFileHeaders -> myFileHeaders
    boolean myAllFilesAreRead -> myAllFilesAreRead
    java.util.Queue myStoredStreams -> myStoredStreams
    java.util.Collection headers() -> headers
    boolean readFileHeader(org.amse.ys.zip.MyBufferedInputStream,java.lang.String) -> readFileHeader
    void readAllHeaders() -> readAllHeaders
    void findAndReadDescriptor(org.amse.ys.zip.MyBufferedInputStream,org.amse.ys.zip.LocalFileHeader) -> findAndReadDescriptor
    void storeBaseStream(org.amse.ys.zip.MyBufferedInputStream) -> storeBaseStream
    org.amse.ys.zip.MyBufferedInputStream getBaseStream() -> getBaseStream
    org.amse.ys.zip.ZipInputStream createZipInputStream(org.amse.ys.zip.LocalFileHeader) -> createZipInputStream
    boolean entryExists(java.lang.String) -> entryExists
    int getEntrySize(java.lang.String) -> getEntrySize
    java.io.InputStream getInputStream(java.lang.String) -> getInputStream
    org.amse.ys.zip.LocalFileHeader getHeader(java.lang.String) -> getHeader
org.amse.ys.zip.ZipFile$1 -> org.amse.ys.zip.ZipFile$1:
    long serialVersionUID -> serialVersionUID
    org.amse.ys.zip.ZipFile this$0 -> this$0
    org.amse.ys.zip.LocalFileHeader get(java.lang.Object) -> get
    org.amse.ys.zip.LocalFileHeader put(java.lang.String,org.amse.ys.zip.LocalFileHeader) -> put
    java.lang.Object get(java.lang.Object) -> get
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
org.amse.ys.zip.ZipFile$FileInputStreamHolder -> org.amse.ys.zip.ZipFile$FileInputStreamHolder:
    java.lang.String myFilePath -> myFilePath
    java.io.InputStream getInputStream() -> getInputStream
org.amse.ys.zip.ZipFile$InputStreamHolder -> org.amse.ys.zip.ZipFile$InputStreamHolder:
    java.io.InputStream getInputStream() -> getInputStream
org.amse.ys.zip.ZipInputStream -> org.amse.ys.zip.ZipInputStream:
    org.amse.ys.zip.ZipFile myParent -> myParent
    org.amse.ys.zip.MyBufferedInputStream myBaseStream -> myBaseStream
    org.amse.ys.zip.Decompressor myDecompressor -> myDecompressor
    boolean myIsClosed -> myIsClosed
    int available() -> available
    int read(byte[],int,int) -> read
    int read() -> read
    void close() -> close
    void finalize() -> finalize
org.vimgadgets.linebreak.LineBreaker -> org.vimgadgets.linebreak.LineBreaker:
    char MUSTBREAK -> MUSTBREAK
    char ALLOWBREAK -> ALLOWBREAK
    char NOBREAK -> NOBREAK
    char INSIDEACHAR -> INSIDEACHAR
    java.lang.String myLanguage -> myLanguage
    void init() -> init
    void setLineBreaksForCharArray(char[],int,int,java.lang.String,byte[]) -> setLineBreaksForCharArray
    void setLineBreaksForString(java.lang.String,java.lang.String,byte[]) -> setLineBreaksForString
    void setLineBreaks(char[],int,int,byte[]) -> setLineBreaks
    void setLineBreaks(java.lang.String,byte[]) -> setLineBreaks
